// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "scurve_adder36.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic scurve_adder36::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic scurve_adder36::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> scurve_adder36::ap_ST_fsm_state1 = "1";
const sc_lv<11> scurve_adder36::ap_ST_fsm_state2 = "10";
const sc_lv<11> scurve_adder36::ap_ST_fsm_state3 = "100";
const sc_lv<11> scurve_adder36::ap_ST_fsm_state4 = "1000";
const sc_lv<11> scurve_adder36::ap_ST_fsm_state5 = "10000";
const sc_lv<11> scurve_adder36::ap_ST_fsm_state6 = "100000";
const sc_lv<11> scurve_adder36::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> scurve_adder36::ap_ST_fsm_pp1_stage0 = "10000000";
const sc_lv<11> scurve_adder36::ap_ST_fsm_state13 = "100000000";
const sc_lv<11> scurve_adder36::ap_ST_fsm_pp2_stage0 = "1000000000";
const sc_lv<11> scurve_adder36::ap_ST_fsm_state18 = "10000000000";
const sc_lv<32> scurve_adder36::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool scurve_adder36::ap_const_boolean_1 = true;
const sc_lv<1> scurve_adder36::ap_const_lv1_0 = "0";
const sc_lv<1> scurve_adder36::ap_const_lv1_1 = "1";
const sc_lv<2> scurve_adder36::ap_const_lv2_0 = "00";
const sc_lv<2> scurve_adder36::ap_const_lv2_2 = "10";
const sc_lv<2> scurve_adder36::ap_const_lv2_3 = "11";
const sc_lv<2> scurve_adder36::ap_const_lv2_1 = "1";
const sc_lv<32> scurve_adder36::ap_const_lv32_7 = "111";
const bool scurve_adder36::ap_const_boolean_0 = false;
const int scurve_adder36::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> scurve_adder36::ap_const_lv32_9 = "1001";
const sc_lv<32> scurve_adder36::ap_const_lv32_1 = "1";
const sc_lv<32> scurve_adder36::ap_const_lv32_3 = "11";
const sc_lv<32> scurve_adder36::ap_const_lv32_4 = "100";
const sc_lv<32> scurve_adder36::ap_const_lv32_5 = "101";
const sc_lv<32> scurve_adder36::ap_const_lv32_8 = "1000";
const sc_lv<32> scurve_adder36::ap_const_lv32_6 = "110";
const sc_lv<16> scurve_adder36::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> scurve_adder36::ap_const_lv32_A = "1010";
const sc_lv<8> scurve_adder36::ap_const_lv8_0 = "00000000";
const sc_lv<24> scurve_adder36::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<64> scurve_adder36::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<5> scurve_adder36::ap_const_lv5_0 = "00000";
const sc_lv<6> scurve_adder36::ap_const_lv6_0 = "000000";
const sc_lv<17> scurve_adder36::ap_const_lv17_1FFFF = "11111111111111111";
const sc_lv<16> scurve_adder36::ap_const_lv16_1 = "1";
const sc_lv<8> scurve_adder36::ap_const_lv8_B4 = "10110100";
const sc_lv<8> scurve_adder36::ap_const_lv8_1 = "1";
const sc_lv<24> scurve_adder36::ap_const_lv24_1 = "1";
const sc_lv<32> scurve_adder36::ap_const_lv32_F = "1111";
const sc_lv<32> scurve_adder36::ap_const_lv32_10 = "10000";
const sc_lv<32> scurve_adder36::ap_const_lv32_17 = "10111";
const sc_lv<32> scurve_adder36::ap_const_lv32_18 = "11000";
const sc_lv<32> scurve_adder36::ap_const_lv32_1F = "11111";
const sc_lv<32> scurve_adder36::ap_const_lv32_20 = "100000";
const sc_lv<32> scurve_adder36::ap_const_lv32_27 = "100111";
const sc_lv<32> scurve_adder36::ap_const_lv32_28 = "101000";
const sc_lv<32> scurve_adder36::ap_const_lv32_2F = "101111";
const sc_lv<32> scurve_adder36::ap_const_lv32_30 = "110000";
const sc_lv<32> scurve_adder36::ap_const_lv32_37 = "110111";
const sc_lv<32> scurve_adder36::ap_const_lv32_38 = "111000";
const sc_lv<32> scurve_adder36::ap_const_lv32_3F = "111111";
const sc_lv<32> scurve_adder36::ap_const_lv32_40 = "1000000";
const sc_lv<32> scurve_adder36::ap_const_lv32_47 = "1000111";
const sc_lv<32> scurve_adder36::ap_const_lv32_48 = "1001000";
const sc_lv<32> scurve_adder36::ap_const_lv32_4F = "1001111";
const sc_lv<32> scurve_adder36::ap_const_lv32_50 = "1010000";
const sc_lv<32> scurve_adder36::ap_const_lv32_57 = "1010111";
const sc_lv<32> scurve_adder36::ap_const_lv32_58 = "1011000";
const sc_lv<32> scurve_adder36::ap_const_lv32_5F = "1011111";
const sc_lv<32> scurve_adder36::ap_const_lv32_60 = "1100000";
const sc_lv<32> scurve_adder36::ap_const_lv32_67 = "1100111";
const sc_lv<32> scurve_adder36::ap_const_lv32_68 = "1101000";
const sc_lv<32> scurve_adder36::ap_const_lv32_6F = "1101111";
const sc_lv<32> scurve_adder36::ap_const_lv32_70 = "1110000";
const sc_lv<32> scurve_adder36::ap_const_lv32_77 = "1110111";
const sc_lv<32> scurve_adder36::ap_const_lv32_78 = "1111000";
const sc_lv<32> scurve_adder36::ap_const_lv32_7F = "1111111";
const sc_lv<8> scurve_adder36::ap_const_lv8_B3 = "10110011";
const sc_lv<4> scurve_adder36::ap_const_lv4_0 = "0000";
const sc_lv<12> scurve_adder36::ap_const_lv12_1 = "1";
const sc_lv<12> scurve_adder36::ap_const_lv12_2 = "10";
const sc_lv<12> scurve_adder36::ap_const_lv12_3 = "11";
const sc_lv<12> scurve_adder36::ap_const_lv12_4 = "100";
const sc_lv<12> scurve_adder36::ap_const_lv12_5 = "101";
const sc_lv<12> scurve_adder36::ap_const_lv12_6 = "110";
const sc_lv<12> scurve_adder36::ap_const_lv12_7 = "111";
const sc_lv<12> scurve_adder36::ap_const_lv12_8 = "1000";
const sc_lv<12> scurve_adder36::ap_const_lv12_9 = "1001";
const sc_lv<12> scurve_adder36::ap_const_lv12_A = "1010";
const sc_lv<12> scurve_adder36::ap_const_lv12_B = "1011";
const sc_lv<12> scurve_adder36::ap_const_lv12_C = "1100";
const sc_lv<12> scurve_adder36::ap_const_lv12_D = "1101";
const sc_lv<12> scurve_adder36::ap_const_lv12_E = "1110";
const sc_lv<12> scurve_adder36::ap_const_lv12_F = "1111";
const sc_lv<24> scurve_adder36::ap_const_lv24_B4 = "10110100";
const sc_lv<128> scurve_adder36::ap_const_lv128_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<512> scurve_adder36::ap_const_lv512_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<17> scurve_adder36::ap_const_lv17_0 = "00000000000000000";
const sc_lv<12> scurve_adder36::ap_const_lv12_0 = "000000000000";

scurve_adder36::scurve_adder36(sc_module_name name) : sc_module(name), mVcdFile(0) {
    scurve_adder36_CTRL_BUS_s_axi_U = new scurve_adder36_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>("scurve_adder36_CTRL_BUS_s_axi_U");
    scurve_adder36_CTRL_BUS_s_axi_U->AWVALID(s_axi_CTRL_BUS_AWVALID);
    scurve_adder36_CTRL_BUS_s_axi_U->AWREADY(s_axi_CTRL_BUS_AWREADY);
    scurve_adder36_CTRL_BUS_s_axi_U->AWADDR(s_axi_CTRL_BUS_AWADDR);
    scurve_adder36_CTRL_BUS_s_axi_U->WVALID(s_axi_CTRL_BUS_WVALID);
    scurve_adder36_CTRL_BUS_s_axi_U->WREADY(s_axi_CTRL_BUS_WREADY);
    scurve_adder36_CTRL_BUS_s_axi_U->WDATA(s_axi_CTRL_BUS_WDATA);
    scurve_adder36_CTRL_BUS_s_axi_U->WSTRB(s_axi_CTRL_BUS_WSTRB);
    scurve_adder36_CTRL_BUS_s_axi_U->ARVALID(s_axi_CTRL_BUS_ARVALID);
    scurve_adder36_CTRL_BUS_s_axi_U->ARREADY(s_axi_CTRL_BUS_ARREADY);
    scurve_adder36_CTRL_BUS_s_axi_U->ARADDR(s_axi_CTRL_BUS_ARADDR);
    scurve_adder36_CTRL_BUS_s_axi_U->RVALID(s_axi_CTRL_BUS_RVALID);
    scurve_adder36_CTRL_BUS_s_axi_U->RREADY(s_axi_CTRL_BUS_RREADY);
    scurve_adder36_CTRL_BUS_s_axi_U->RDATA(s_axi_CTRL_BUS_RDATA);
    scurve_adder36_CTRL_BUS_s_axi_U->RRESP(s_axi_CTRL_BUS_RRESP);
    scurve_adder36_CTRL_BUS_s_axi_U->BVALID(s_axi_CTRL_BUS_BVALID);
    scurve_adder36_CTRL_BUS_s_axi_U->BREADY(s_axi_CTRL_BUS_BREADY);
    scurve_adder36_CTRL_BUS_s_axi_U->BRESP(s_axi_CTRL_BUS_BRESP);
    scurve_adder36_CTRL_BUS_s_axi_U->ACLK(ap_clk);
    scurve_adder36_CTRL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    scurve_adder36_CTRL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    scurve_adder36_CTRL_BUS_s_axi_U->ap_start(ap_start);
    scurve_adder36_CTRL_BUS_s_axi_U->interrupt(interrupt);
    scurve_adder36_CTRL_BUS_s_axi_U->ap_ready(ap_ready);
    scurve_adder36_CTRL_BUS_s_axi_U->ap_done(ap_done);
    scurve_adder36_CTRL_BUS_s_axi_U->ap_idle(ap_idle);
    scurve_adder36_CTRL_BUS_s_axi_U->N_ADDS(N_ADDS);
    scurve_adder36_CTRL_BUS_s_axi_U->TEST_MODE(TEST_MODE);
    scurve_adder36_CTRL_BUS_s_axi_U->K_TLAST(K_TLAST);
    sum_pix_ch0_0_U = new scurve_adder36_subkb("sum_pix_ch0_0_U");
    sum_pix_ch0_0_U->clk(ap_clk);
    sum_pix_ch0_0_U->reset(ap_rst_n_inv);
    sum_pix_ch0_0_U->address0(sum_pix_ch0_0_address0);
    sum_pix_ch0_0_U->ce0(sum_pix_ch0_0_ce0);
    sum_pix_ch0_0_U->we0(sum_pix_ch0_0_we0);
    sum_pix_ch0_0_U->d0(ap_var_for_const1);
    sum_pix_ch0_0_U->q0(sum_pix_ch0_0_q0);
    sum_pix_ch0_0_U->address1(sum_pix_ch0_0_address1);
    sum_pix_ch0_0_U->ce1(sum_pix_ch0_0_ce1);
    sum_pix_ch0_0_U->we1(sum_pix_ch0_0_we1);
    sum_pix_ch0_0_U->d1(tmp_12_reg_1882);
    sum_pix_ch0_0_U->q1(sum_pix_ch0_0_q1);
    sum_pix_ch0_1_U = new scurve_adder36_subkb("sum_pix_ch0_1_U");
    sum_pix_ch0_1_U->clk(ap_clk);
    sum_pix_ch0_1_U->reset(ap_rst_n_inv);
    sum_pix_ch0_1_U->address0(sum_pix_ch0_1_address0);
    sum_pix_ch0_1_U->ce0(sum_pix_ch0_1_ce0);
    sum_pix_ch0_1_U->we0(sum_pix_ch0_1_we0);
    sum_pix_ch0_1_U->d0(ap_var_for_const1);
    sum_pix_ch0_1_U->q0(sum_pix_ch0_1_q0);
    sum_pix_ch0_1_U->address1(sum_pix_ch0_1_address1);
    sum_pix_ch0_1_U->ce1(sum_pix_ch0_1_ce1);
    sum_pix_ch0_1_U->we1(sum_pix_ch0_1_we1);
    sum_pix_ch0_1_U->d1(tmp_33_1_reg_1887);
    sum_pix_ch0_1_U->q1(sum_pix_ch0_1_q1);
    sum_pix_ch0_2_U = new scurve_adder36_subkb("sum_pix_ch0_2_U");
    sum_pix_ch0_2_U->clk(ap_clk);
    sum_pix_ch0_2_U->reset(ap_rst_n_inv);
    sum_pix_ch0_2_U->address0(sum_pix_ch0_2_address0);
    sum_pix_ch0_2_U->ce0(sum_pix_ch0_2_ce0);
    sum_pix_ch0_2_U->we0(sum_pix_ch0_2_we0);
    sum_pix_ch0_2_U->d0(ap_var_for_const1);
    sum_pix_ch0_2_U->q0(sum_pix_ch0_2_q0);
    sum_pix_ch0_2_U->address1(sum_pix_ch0_2_address1);
    sum_pix_ch0_2_U->ce1(sum_pix_ch0_2_ce1);
    sum_pix_ch0_2_U->we1(sum_pix_ch0_2_we1);
    sum_pix_ch0_2_U->d1(tmp_33_2_reg_1892);
    sum_pix_ch0_2_U->q1(sum_pix_ch0_2_q1);
    sum_pix_ch0_3_U = new scurve_adder36_subkb("sum_pix_ch0_3_U");
    sum_pix_ch0_3_U->clk(ap_clk);
    sum_pix_ch0_3_U->reset(ap_rst_n_inv);
    sum_pix_ch0_3_U->address0(sum_pix_ch0_3_address0);
    sum_pix_ch0_3_U->ce0(sum_pix_ch0_3_ce0);
    sum_pix_ch0_3_U->we0(sum_pix_ch0_3_we0);
    sum_pix_ch0_3_U->d0(ap_var_for_const1);
    sum_pix_ch0_3_U->q0(sum_pix_ch0_3_q0);
    sum_pix_ch0_3_U->address1(sum_pix_ch0_3_address1);
    sum_pix_ch0_3_U->ce1(sum_pix_ch0_3_ce1);
    sum_pix_ch0_3_U->we1(sum_pix_ch0_3_we1);
    sum_pix_ch0_3_U->d1(tmp_33_3_reg_1897);
    sum_pix_ch0_3_U->q1(sum_pix_ch0_3_q1);
    sum_pix_ch0_4_U = new scurve_adder36_subkb("sum_pix_ch0_4_U");
    sum_pix_ch0_4_U->clk(ap_clk);
    sum_pix_ch0_4_U->reset(ap_rst_n_inv);
    sum_pix_ch0_4_U->address0(sum_pix_ch0_4_address0);
    sum_pix_ch0_4_U->ce0(sum_pix_ch0_4_ce0);
    sum_pix_ch0_4_U->we0(sum_pix_ch0_4_we0);
    sum_pix_ch0_4_U->d0(ap_var_for_const1);
    sum_pix_ch0_4_U->q0(sum_pix_ch0_4_q0);
    sum_pix_ch0_4_U->address1(sum_pix_ch0_4_address1);
    sum_pix_ch0_4_U->ce1(sum_pix_ch0_4_ce1);
    sum_pix_ch0_4_U->we1(sum_pix_ch0_4_we1);
    sum_pix_ch0_4_U->d1(tmp_33_4_reg_1902);
    sum_pix_ch0_4_U->q1(sum_pix_ch0_4_q1);
    sum_pix_ch0_5_U = new scurve_adder36_subkb("sum_pix_ch0_5_U");
    sum_pix_ch0_5_U->clk(ap_clk);
    sum_pix_ch0_5_U->reset(ap_rst_n_inv);
    sum_pix_ch0_5_U->address0(sum_pix_ch0_5_address0);
    sum_pix_ch0_5_U->ce0(sum_pix_ch0_5_ce0);
    sum_pix_ch0_5_U->we0(sum_pix_ch0_5_we0);
    sum_pix_ch0_5_U->d0(ap_var_for_const1);
    sum_pix_ch0_5_U->q0(sum_pix_ch0_5_q0);
    sum_pix_ch0_5_U->address1(sum_pix_ch0_5_address1);
    sum_pix_ch0_5_U->ce1(sum_pix_ch0_5_ce1);
    sum_pix_ch0_5_U->we1(sum_pix_ch0_5_we1);
    sum_pix_ch0_5_U->d1(tmp_33_5_reg_1907);
    sum_pix_ch0_5_U->q1(sum_pix_ch0_5_q1);
    sum_pix_ch0_6_U = new scurve_adder36_subkb("sum_pix_ch0_6_U");
    sum_pix_ch0_6_U->clk(ap_clk);
    sum_pix_ch0_6_U->reset(ap_rst_n_inv);
    sum_pix_ch0_6_U->address0(sum_pix_ch0_6_address0);
    sum_pix_ch0_6_U->ce0(sum_pix_ch0_6_ce0);
    sum_pix_ch0_6_U->we0(sum_pix_ch0_6_we0);
    sum_pix_ch0_6_U->d0(ap_var_for_const1);
    sum_pix_ch0_6_U->q0(sum_pix_ch0_6_q0);
    sum_pix_ch0_6_U->address1(sum_pix_ch0_6_address1);
    sum_pix_ch0_6_U->ce1(sum_pix_ch0_6_ce1);
    sum_pix_ch0_6_U->we1(sum_pix_ch0_6_we1);
    sum_pix_ch0_6_U->d1(tmp_33_6_reg_1912);
    sum_pix_ch0_6_U->q1(sum_pix_ch0_6_q1);
    sum_pix_ch0_7_U = new scurve_adder36_subkb("sum_pix_ch0_7_U");
    sum_pix_ch0_7_U->clk(ap_clk);
    sum_pix_ch0_7_U->reset(ap_rst_n_inv);
    sum_pix_ch0_7_U->address0(sum_pix_ch0_7_address0);
    sum_pix_ch0_7_U->ce0(sum_pix_ch0_7_ce0);
    sum_pix_ch0_7_U->we0(sum_pix_ch0_7_we0);
    sum_pix_ch0_7_U->d0(ap_var_for_const1);
    sum_pix_ch0_7_U->q0(sum_pix_ch0_7_q0);
    sum_pix_ch0_7_U->address1(sum_pix_ch0_7_address1);
    sum_pix_ch0_7_U->ce1(sum_pix_ch0_7_ce1);
    sum_pix_ch0_7_U->we1(sum_pix_ch0_7_we1);
    sum_pix_ch0_7_U->d1(tmp_33_7_reg_1917);
    sum_pix_ch0_7_U->q1(sum_pix_ch0_7_q1);
    sum_pix_ch0_8_U = new scurve_adder36_subkb("sum_pix_ch0_8_U");
    sum_pix_ch0_8_U->clk(ap_clk);
    sum_pix_ch0_8_U->reset(ap_rst_n_inv);
    sum_pix_ch0_8_U->address0(sum_pix_ch0_8_address0);
    sum_pix_ch0_8_U->ce0(sum_pix_ch0_8_ce0);
    sum_pix_ch0_8_U->we0(sum_pix_ch0_8_we0);
    sum_pix_ch0_8_U->d0(ap_var_for_const1);
    sum_pix_ch0_8_U->q0(sum_pix_ch0_8_q0);
    sum_pix_ch0_8_U->address1(sum_pix_ch0_8_address1);
    sum_pix_ch0_8_U->ce1(sum_pix_ch0_8_ce1);
    sum_pix_ch0_8_U->we1(sum_pix_ch0_8_we1);
    sum_pix_ch0_8_U->d1(tmp_33_8_reg_1922);
    sum_pix_ch0_8_U->q1(sum_pix_ch0_8_q1);
    sum_pix_ch0_9_U = new scurve_adder36_subkb("sum_pix_ch0_9_U");
    sum_pix_ch0_9_U->clk(ap_clk);
    sum_pix_ch0_9_U->reset(ap_rst_n_inv);
    sum_pix_ch0_9_U->address0(sum_pix_ch0_9_address0);
    sum_pix_ch0_9_U->ce0(sum_pix_ch0_9_ce0);
    sum_pix_ch0_9_U->we0(sum_pix_ch0_9_we0);
    sum_pix_ch0_9_U->d0(ap_var_for_const1);
    sum_pix_ch0_9_U->q0(sum_pix_ch0_9_q0);
    sum_pix_ch0_9_U->address1(sum_pix_ch0_9_address1);
    sum_pix_ch0_9_U->ce1(sum_pix_ch0_9_ce1);
    sum_pix_ch0_9_U->we1(sum_pix_ch0_9_we1);
    sum_pix_ch0_9_U->d1(tmp_33_9_reg_1927);
    sum_pix_ch0_9_U->q1(sum_pix_ch0_9_q1);
    sum_pix_ch0_10_U = new scurve_adder36_subkb("sum_pix_ch0_10_U");
    sum_pix_ch0_10_U->clk(ap_clk);
    sum_pix_ch0_10_U->reset(ap_rst_n_inv);
    sum_pix_ch0_10_U->address0(sum_pix_ch0_10_address0);
    sum_pix_ch0_10_U->ce0(sum_pix_ch0_10_ce0);
    sum_pix_ch0_10_U->we0(sum_pix_ch0_10_we0);
    sum_pix_ch0_10_U->d0(ap_var_for_const1);
    sum_pix_ch0_10_U->q0(sum_pix_ch0_10_q0);
    sum_pix_ch0_10_U->address1(sum_pix_ch0_10_address1);
    sum_pix_ch0_10_U->ce1(sum_pix_ch0_10_ce1);
    sum_pix_ch0_10_U->we1(sum_pix_ch0_10_we1);
    sum_pix_ch0_10_U->d1(tmp_33_s_reg_1932);
    sum_pix_ch0_10_U->q1(sum_pix_ch0_10_q1);
    sum_pix_ch0_11_U = new scurve_adder36_subkb("sum_pix_ch0_11_U");
    sum_pix_ch0_11_U->clk(ap_clk);
    sum_pix_ch0_11_U->reset(ap_rst_n_inv);
    sum_pix_ch0_11_U->address0(sum_pix_ch0_11_address0);
    sum_pix_ch0_11_U->ce0(sum_pix_ch0_11_ce0);
    sum_pix_ch0_11_U->we0(sum_pix_ch0_11_we0);
    sum_pix_ch0_11_U->d0(ap_var_for_const1);
    sum_pix_ch0_11_U->q0(sum_pix_ch0_11_q0);
    sum_pix_ch0_11_U->address1(sum_pix_ch0_11_address1);
    sum_pix_ch0_11_U->ce1(sum_pix_ch0_11_ce1);
    sum_pix_ch0_11_U->we1(sum_pix_ch0_11_we1);
    sum_pix_ch0_11_U->d1(tmp_33_10_reg_1937);
    sum_pix_ch0_11_U->q1(sum_pix_ch0_11_q1);
    sum_pix_ch0_12_U = new scurve_adder36_subkb("sum_pix_ch0_12_U");
    sum_pix_ch0_12_U->clk(ap_clk);
    sum_pix_ch0_12_U->reset(ap_rst_n_inv);
    sum_pix_ch0_12_U->address0(sum_pix_ch0_12_address0);
    sum_pix_ch0_12_U->ce0(sum_pix_ch0_12_ce0);
    sum_pix_ch0_12_U->we0(sum_pix_ch0_12_we0);
    sum_pix_ch0_12_U->d0(ap_var_for_const1);
    sum_pix_ch0_12_U->q0(sum_pix_ch0_12_q0);
    sum_pix_ch0_12_U->address1(sum_pix_ch0_12_address1);
    sum_pix_ch0_12_U->ce1(sum_pix_ch0_12_ce1);
    sum_pix_ch0_12_U->we1(sum_pix_ch0_12_we1);
    sum_pix_ch0_12_U->d1(tmp_33_11_reg_1942);
    sum_pix_ch0_12_U->q1(sum_pix_ch0_12_q1);
    sum_pix_ch0_13_U = new scurve_adder36_subkb("sum_pix_ch0_13_U");
    sum_pix_ch0_13_U->clk(ap_clk);
    sum_pix_ch0_13_U->reset(ap_rst_n_inv);
    sum_pix_ch0_13_U->address0(sum_pix_ch0_13_address0);
    sum_pix_ch0_13_U->ce0(sum_pix_ch0_13_ce0);
    sum_pix_ch0_13_U->we0(sum_pix_ch0_13_we0);
    sum_pix_ch0_13_U->d0(ap_var_for_const1);
    sum_pix_ch0_13_U->q0(sum_pix_ch0_13_q0);
    sum_pix_ch0_13_U->address1(sum_pix_ch0_13_address1);
    sum_pix_ch0_13_U->ce1(sum_pix_ch0_13_ce1);
    sum_pix_ch0_13_U->we1(sum_pix_ch0_13_we1);
    sum_pix_ch0_13_U->d1(tmp_33_12_reg_1947);
    sum_pix_ch0_13_U->q1(sum_pix_ch0_13_q1);
    sum_pix_ch0_14_U = new scurve_adder36_subkb("sum_pix_ch0_14_U");
    sum_pix_ch0_14_U->clk(ap_clk);
    sum_pix_ch0_14_U->reset(ap_rst_n_inv);
    sum_pix_ch0_14_U->address0(sum_pix_ch0_14_address0);
    sum_pix_ch0_14_U->ce0(sum_pix_ch0_14_ce0);
    sum_pix_ch0_14_U->we0(sum_pix_ch0_14_we0);
    sum_pix_ch0_14_U->d0(ap_var_for_const1);
    sum_pix_ch0_14_U->q0(sum_pix_ch0_14_q0);
    sum_pix_ch0_14_U->address1(sum_pix_ch0_14_address1);
    sum_pix_ch0_14_U->ce1(sum_pix_ch0_14_ce1);
    sum_pix_ch0_14_U->we1(sum_pix_ch0_14_we1);
    sum_pix_ch0_14_U->d1(tmp_33_13_reg_1952);
    sum_pix_ch0_14_U->q1(sum_pix_ch0_14_q1);
    sum_pix_ch0_15_U = new scurve_adder36_subkb("sum_pix_ch0_15_U");
    sum_pix_ch0_15_U->clk(ap_clk);
    sum_pix_ch0_15_U->reset(ap_rst_n_inv);
    sum_pix_ch0_15_U->address0(sum_pix_ch0_15_address0);
    sum_pix_ch0_15_U->ce0(sum_pix_ch0_15_ce0);
    sum_pix_ch0_15_U->we0(sum_pix_ch0_15_we0);
    sum_pix_ch0_15_U->d0(ap_var_for_const1);
    sum_pix_ch0_15_U->q0(sum_pix_ch0_15_q0);
    sum_pix_ch0_15_U->address1(sum_pix_ch0_15_address1);
    sum_pix_ch0_15_U->ce1(sum_pix_ch0_15_ce1);
    sum_pix_ch0_15_U->we1(sum_pix_ch0_15_we1);
    sum_pix_ch0_15_U->d1(tmp_33_14_reg_1957);
    sum_pix_ch0_15_U->q1(sum_pix_ch0_15_q1);
    scurve_adder36_murcU_U1 = new scurve_adder36_murcU<1,3,16,9,24>("scurve_adder36_murcU_U1");
    scurve_adder36_murcU_U1->clk(ap_clk);
    scurve_adder36_murcU_U1->reset(ap_rst_n_inv);
    scurve_adder36_murcU_U1->din0(grp_fu_1633_p0);
    scurve_adder36_murcU_U1->din1(grp_fu_1633_p1);
    scurve_adder36_murcU_U1->ce(ap_var_for_const0);
    scurve_adder36_murcU_U1->dout(grp_fu_1633_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( in_stream0_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten_reg_1687 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( in_stream0_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten_reg_1687 );

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_01001);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( ap_block_state16_io );
    sensitive << ( ap_block_state17_io );

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( ap_block_state16_io );
    sensitive << ( ap_block_state17_io );

    SC_METHOD(thread_ap_block_state10_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state11_pp1_stage0_iter3);

    SC_METHOD(thread_ap_block_state12_pp1_stage0_iter4);

    SC_METHOD(thread_ap_block_state14_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state15_pp2_stage0_iter1);

    SC_METHOD(thread_ap_block_state16_io);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( exitcond5_reg_1967_pp2_iter1_reg );

    SC_METHOD(thread_ap_block_state16_pp2_stage0_iter2);

    SC_METHOD(thread_ap_block_state17_io);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( exitcond5_reg_1967_pp2_iter2_reg );

    SC_METHOD(thread_ap_block_state17_pp2_stage0_iter3);

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( out_stream_V_keep_V_1_ack_in );
    sensitive << ( out_stream_V_strb_V_1_ack_in );
    sensitive << ( out_stream_V_user_V_1_ack_in );
    sensitive << ( out_stream_V_last_V_1_ack_in );
    sensitive << ( out_stream_V_id_V_1_ack_in );
    sensitive << ( out_stream_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_block_state8_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state9_pp1_stage0_iter1);
    sensitive << ( in_stream0_V_data_V_0_vld_out );
    sensitive << ( exitcond_flatten_reg_1687 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state8);
    sensitive << ( exitcond_flatten_fu_1003_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state14);
    sensitive << ( exitcond5_fu_1364_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( out_stream_V_keep_V_1_ack_in );
    sensitive << ( out_stream_V_strb_V_1_ack_in );
    sensitive << ( out_stream_V_user_V_1_ack_in );
    sensitive << ( out_stream_V_last_V_1_ack_in );
    sensitive << ( out_stream_V_id_V_1_ack_in );
    sensitive << ( out_stream_V_dest_V_1_ack_in );
    sensitive << ( exitcond1_fu_960_p2 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( out_stream_V_keep_V_1_ack_in );
    sensitive << ( out_stream_V_strb_V_1_ack_in );
    sensitive << ( out_stream_V_user_V_1_ack_in );
    sensitive << ( out_stream_V_last_V_1_ack_in );
    sensitive << ( out_stream_V_id_V_1_ack_in );
    sensitive << ( out_stream_V_dest_V_1_ack_in );
    sensitive << ( exitcond1_fu_960_p2 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_exitcond1_fu_960_p2);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( out_stream_V_keep_V_1_ack_in );
    sensitive << ( out_stream_V_strb_V_1_ack_in );
    sensitive << ( out_stream_V_user_V_1_ack_in );
    sensitive << ( out_stream_V_last_V_1_ack_in );
    sensitive << ( out_stream_V_id_V_1_ack_in );
    sensitive << ( out_stream_V_dest_V_1_ack_in );
    sensitive << ( K_TLAST_read_reg_1639 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( k_tlast_cnt_reg_806 );

    SC_METHOD(thread_exitcond2_fu_971_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( i_reg_818 );

    SC_METHOD(thread_exitcond5_fu_1364_p2);
    sensitive << ( i_2_reg_851 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_1003_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( indvar_flatten_reg_829 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( bound_reg_1665 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_fu_1014_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( i_1_reg_840 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_1003_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_grp_fu_1633_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_1633_p00 );

    SC_METHOD(thread_grp_fu_1633_p00);
    sensitive << ( N_ADDS_read_reg_1645 );

    SC_METHOD(thread_grp_fu_1633_p1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_i_1_mid2_fu_1020_p3);
    sensitive << ( i_1_reg_840 );
    sensitive << ( exitcond_fu_1014_p2 );

    SC_METHOD(thread_i_3_fu_977_p2);
    sensitive << ( i_reg_818 );

    SC_METHOD(thread_i_4_fu_1028_p2);
    sensitive << ( i_1_mid2_fu_1020_p3 );

    SC_METHOD(thread_i_5_fu_1370_p2);
    sensitive << ( i_2_reg_851 );

    SC_METHOD(thread_in_stream0_TDATA_blk_n);
    sensitive << ( in_stream0_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_flatten_reg_1687 );

    SC_METHOD(thread_in_stream0_TREADY);
    sensitive << ( in_stream0_V_dest_V_0_state );

    SC_METHOD(thread_in_stream0_V_data_V_0_ack_in);
    sensitive << ( in_stream0_V_data_V_0_state );

    SC_METHOD(thread_in_stream0_V_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten_reg_1687 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_in_stream0_V_data_V_0_data_out);
    sensitive << ( in_stream0_V_data_V_0_payload_A );
    sensitive << ( in_stream0_V_data_V_0_payload_B );
    sensitive << ( in_stream0_V_data_V_0_sel );

    SC_METHOD(thread_in_stream0_V_data_V_0_load_A);
    sensitive << ( in_stream0_V_data_V_0_sel_wr );
    sensitive << ( in_stream0_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_stream0_V_data_V_0_load_B);
    sensitive << ( in_stream0_V_data_V_0_sel_wr );
    sensitive << ( in_stream0_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_stream0_V_data_V_0_sel);
    sensitive << ( in_stream0_V_data_V_0_sel_rd );

    SC_METHOD(thread_in_stream0_V_data_V_0_state_cmp_full);
    sensitive << ( in_stream0_V_data_V_0_state );

    SC_METHOD(thread_in_stream0_V_data_V_0_vld_in);
    sensitive << ( in_stream0_TVALID );

    SC_METHOD(thread_in_stream0_V_data_V_0_vld_out);
    sensitive << ( in_stream0_V_data_V_0_state );

    SC_METHOD(thread_in_stream0_V_dest_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten_reg_1687 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_in_stream0_V_dest_V_0_vld_in);
    sensitive << ( in_stream0_TVALID );

    SC_METHOD(thread_indvar_flatten_next_fu_1008_p2);
    sensitive << ( indvar_flatten_reg_829 );

    SC_METHOD(thread_k_tlast_cnt_1_fu_965_p2);
    sensitive << ( k_tlast_cnt_reg_806 );

    SC_METHOD(thread_out_stream_TDATA);
    sensitive << ( out_stream_V_data_V_1_data_out );

    SC_METHOD(thread_out_stream_TDATA_blk_n);
    sensitive << ( out_stream_V_data_V_1_state );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( exitcond5_reg_1967_pp2_iter1_reg );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( exitcond5_reg_1967_pp2_iter2_reg );

    SC_METHOD(thread_out_stream_TDEST);
    sensitive << ( out_stream_V_dest_V_1_data_out );

    SC_METHOD(thread_out_stream_TID);
    sensitive << ( out_stream_V_id_V_1_data_out );

    SC_METHOD(thread_out_stream_TKEEP);
    sensitive << ( out_stream_V_keep_V_1_data_out );

    SC_METHOD(thread_out_stream_TLAST);
    sensitive << ( out_stream_V_last_V_1_data_out );

    SC_METHOD(thread_out_stream_TSTRB);
    sensitive << ( out_stream_V_strb_V_1_data_out );

    SC_METHOD(thread_out_stream_TUSER);
    sensitive << ( out_stream_V_user_V_1_data_out );

    SC_METHOD(thread_out_stream_TVALID);
    sensitive << ( out_stream_V_dest_V_1_state );

    SC_METHOD(thread_out_stream_V_data_V_1_ack_in);
    sensitive << ( out_stream_V_data_V_1_state );

    SC_METHOD(thread_out_stream_V_data_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_data_V_1_data_out);
    sensitive << ( out_stream_V_data_V_1_payload_A );
    sensitive << ( out_stream_V_data_V_1_payload_B );
    sensitive << ( out_stream_V_data_V_1_sel );

    SC_METHOD(thread_out_stream_V_data_V_1_load_A);
    sensitive << ( out_stream_V_data_V_1_sel_wr );
    sensitive << ( out_stream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_data_V_1_load_B);
    sensitive << ( out_stream_V_data_V_1_sel_wr );
    sensitive << ( out_stream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_data_V_1_sel);
    sensitive << ( out_stream_V_data_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_data_V_1_state_cmp_full);
    sensitive << ( out_stream_V_data_V_1_state );

    SC_METHOD(thread_out_stream_V_data_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond5_reg_1967_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_data_V_1_vld_out);
    sensitive << ( out_stream_V_data_V_1_state );

    SC_METHOD(thread_out_stream_V_dest_V_1_ack_in);
    sensitive << ( out_stream_V_dest_V_1_state );

    SC_METHOD(thread_out_stream_V_dest_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_dest_V_1_data_out);
    sensitive << ( out_stream_V_dest_V_1_sel );

    SC_METHOD(thread_out_stream_V_dest_V_1_sel);
    sensitive << ( out_stream_V_dest_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_dest_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond5_reg_1967_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_dest_V_1_vld_out);
    sensitive << ( out_stream_V_dest_V_1_state );

    SC_METHOD(thread_out_stream_V_id_V_1_ack_in);
    sensitive << ( out_stream_V_id_V_1_state );

    SC_METHOD(thread_out_stream_V_id_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_id_V_1_data_out);
    sensitive << ( out_stream_V_id_V_1_sel );

    SC_METHOD(thread_out_stream_V_id_V_1_sel);
    sensitive << ( out_stream_V_id_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_id_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond5_reg_1967_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_id_V_1_vld_out);
    sensitive << ( out_stream_V_id_V_1_state );

    SC_METHOD(thread_out_stream_V_keep_V_1_ack_in);
    sensitive << ( out_stream_V_keep_V_1_state );

    SC_METHOD(thread_out_stream_V_keep_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_keep_V_1_data_out);
    sensitive << ( out_stream_V_keep_V_1_sel );

    SC_METHOD(thread_out_stream_V_keep_V_1_sel);
    sensitive << ( out_stream_V_keep_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_keep_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond5_reg_1967_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_keep_V_1_vld_out);
    sensitive << ( out_stream_V_keep_V_1_state );

    SC_METHOD(thread_out_stream_V_last_V_1_ack_in);
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_out_stream_V_last_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_last_V_1_data_out);
    sensitive << ( out_stream_V_last_V_1_payload_A );
    sensitive << ( out_stream_V_last_V_1_payload_B );
    sensitive << ( out_stream_V_last_V_1_sel );

    SC_METHOD(thread_out_stream_V_last_V_1_load_A);
    sensitive << ( out_stream_V_last_V_1_sel_wr );
    sensitive << ( out_stream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_last_V_1_load_B);
    sensitive << ( out_stream_V_last_V_1_sel_wr );
    sensitive << ( out_stream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_last_V_1_sel);
    sensitive << ( out_stream_V_last_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_last_V_1_state_cmp_full);
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_out_stream_V_last_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond5_reg_1967_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_last_V_1_vld_out);
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_out_stream_V_strb_V_1_ack_in);
    sensitive << ( out_stream_V_strb_V_1_state );

    SC_METHOD(thread_out_stream_V_strb_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_strb_V_1_data_out);
    sensitive << ( out_stream_V_strb_V_1_sel );

    SC_METHOD(thread_out_stream_V_strb_V_1_sel);
    sensitive << ( out_stream_V_strb_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_strb_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond5_reg_1967_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_strb_V_1_vld_out);
    sensitive << ( out_stream_V_strb_V_1_state );

    SC_METHOD(thread_out_stream_V_user_V_1_ack_in);
    sensitive << ( out_stream_V_user_V_1_state );

    SC_METHOD(thread_out_stream_V_user_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_user_V_1_data_out);
    sensitive << ( out_stream_V_user_V_1_sel );

    SC_METHOD(thread_out_stream_V_user_V_1_sel);
    sensitive << ( out_stream_V_user_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_user_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond5_reg_1967_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_user_V_1_vld_out);
    sensitive << ( out_stream_V_user_V_1_state );

    SC_METHOD(thread_sum_pix_ch0_0_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_0_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_0_addr_1_reg_1711_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_0_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_0_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_0_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_0_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_10_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_10_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_10_addr_1_reg_1821_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_10_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_10_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_10_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_10_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_11_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_11_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_11_addr_1_reg_1832_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_11_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_11_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_11_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_11_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_12_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_12_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_12_addr_1_reg_1843_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_12_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_12_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_12_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_12_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_13_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_13_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_13_addr_1_reg_1854_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_13_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_13_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_13_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_13_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_14_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_14_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_14_addr_1_reg_1865_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_14_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_14_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_14_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_14_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_15_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_15_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_15_addr_1_reg_1876_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_15_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_15_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_15_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_15_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_1_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_1_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_1_addr_1_reg_1722_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_1_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_1_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_1_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_1_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_2_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_2_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_2_addr_1_reg_1733_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_2_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_2_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_2_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_2_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_3_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_3_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_3_addr_1_reg_1744_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_3_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_3_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_3_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_3_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_4_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_4_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_4_addr_1_reg_1755_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_4_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_4_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_4_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_4_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_5_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_5_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_5_addr_1_reg_1766_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_5_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_5_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_5_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_5_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_6_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_6_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_6_addr_1_reg_1777_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_6_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_6_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_6_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_6_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_7_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_7_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_7_addr_1_reg_1788_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_7_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_7_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_7_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_7_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_8_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_8_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_8_addr_1_reg_1799_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_8_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_8_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_8_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_8_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_9_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_fu_983_p1 );
    sensitive << ( tmp_7_fu_1034_p1 );

    SC_METHOD(thread_sum_pix_ch0_9_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_9_addr_1_reg_1810_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_9_fu_1387_p1 );

    SC_METHOD(thread_sum_pix_ch0_9_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_pix_ch0_9_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_9_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_METHOD(thread_sum_pix_ch0_9_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1687_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_tot_data_V_1_fu_1621_p1);
    sensitive << ( tmp_fu_1585_p17 );

    SC_METHOD(thread_sum_pix_tot_data_V_s_fu_1415_p17);
    sensitive << ( reg_862 );
    sensitive << ( reg_867 );
    sensitive << ( reg_872 );
    sensitive << ( reg_877 );
    sensitive << ( reg_882 );
    sensitive << ( reg_887 );
    sensitive << ( reg_892 );
    sensitive << ( reg_897 );
    sensitive << ( reg_902 );
    sensitive << ( reg_907 );
    sensitive << ( reg_912 );
    sensitive << ( reg_917 );
    sensitive << ( reg_922 );
    sensitive << ( reg_927 );
    sensitive << ( reg_932 );
    sensitive << ( reg_937 );

    SC_METHOD(thread_tmp_10_cast_fu_1451_p1);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_tmp_11_fu_1211_p1);
    sensitive << ( tmp_13_reg_1706_pp1_iter2_reg );

    SC_METHOD(thread_tmp_12_fu_1214_p2);
    sensitive << ( reg_862 );
    sensitive << ( tmp_11_fu_1211_p1 );

    SC_METHOD(thread_tmp_13_fu_1057_p1);
    sensitive << ( in_stream0_V_data_V_0_data_out );

    SC_METHOD(thread_tmp_1_cast_fu_951_p1);
    sensitive << ( K_TLAST_read_reg_1639 );

    SC_METHOD(thread_tmp_2_fu_954_p2);
    sensitive << ( tmp_1_cast_fu_951_p1 );

    SC_METHOD(thread_tmp_32_10_fu_1310_p1);
    sensitive << ( phitmp_10_reg_1827_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_11_fu_1319_p1);
    sensitive << ( phitmp_11_reg_1838_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_12_fu_1328_p1);
    sensitive << ( phitmp_12_reg_1849_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_13_fu_1337_p1);
    sensitive << ( phitmp_13_reg_1860_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_14_fu_1346_p1);
    sensitive << ( phitmp_14_reg_1871_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_1_fu_1220_p1);
    sensitive << ( phitmp_1_reg_1717_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_2_fu_1229_p1);
    sensitive << ( phitmp_2_reg_1728_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_3_fu_1238_p1);
    sensitive << ( phitmp_3_reg_1739_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_4_fu_1247_p1);
    sensitive << ( phitmp_4_reg_1750_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_5_fu_1256_p1);
    sensitive << ( phitmp_5_reg_1761_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_6_fu_1265_p1);
    sensitive << ( phitmp_6_reg_1772_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_7_fu_1274_p1);
    sensitive << ( phitmp_7_reg_1783_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_8_fu_1283_p1);
    sensitive << ( phitmp_8_reg_1794_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_9_fu_1292_p1);
    sensitive << ( phitmp_9_reg_1805_pp1_iter2_reg );

    SC_METHOD(thread_tmp_32_s_fu_1301_p1);
    sensitive << ( phitmp_s_reg_1816_pp1_iter2_reg );

    SC_METHOD(thread_tmp_33_10_fu_1313_p2);
    sensitive << ( reg_917 );
    sensitive << ( tmp_32_10_fu_1310_p1 );

    SC_METHOD(thread_tmp_33_11_fu_1322_p2);
    sensitive << ( reg_922 );
    sensitive << ( tmp_32_11_fu_1319_p1 );

    SC_METHOD(thread_tmp_33_12_fu_1331_p2);
    sensitive << ( reg_927 );
    sensitive << ( tmp_32_12_fu_1328_p1 );

    SC_METHOD(thread_tmp_33_13_fu_1340_p2);
    sensitive << ( reg_932 );
    sensitive << ( tmp_32_13_fu_1337_p1 );

    SC_METHOD(thread_tmp_33_14_fu_1349_p2);
    sensitive << ( reg_937 );
    sensitive << ( tmp_32_14_fu_1346_p1 );

    SC_METHOD(thread_tmp_33_1_fu_1223_p2);
    sensitive << ( reg_867 );
    sensitive << ( tmp_32_1_fu_1220_p1 );

    SC_METHOD(thread_tmp_33_2_fu_1232_p2);
    sensitive << ( reg_872 );
    sensitive << ( tmp_32_2_fu_1229_p1 );

    SC_METHOD(thread_tmp_33_3_fu_1241_p2);
    sensitive << ( reg_877 );
    sensitive << ( tmp_32_3_fu_1238_p1 );

    SC_METHOD(thread_tmp_33_4_fu_1250_p2);
    sensitive << ( reg_882 );
    sensitive << ( tmp_32_4_fu_1247_p1 );

    SC_METHOD(thread_tmp_33_5_fu_1259_p2);
    sensitive << ( reg_887 );
    sensitive << ( tmp_32_5_fu_1256_p1 );

    SC_METHOD(thread_tmp_33_6_fu_1268_p2);
    sensitive << ( reg_892 );
    sensitive << ( tmp_32_6_fu_1265_p1 );

    SC_METHOD(thread_tmp_33_7_fu_1277_p2);
    sensitive << ( reg_897 );
    sensitive << ( tmp_32_7_fu_1274_p1 );

    SC_METHOD(thread_tmp_33_8_fu_1286_p2);
    sensitive << ( reg_902 );
    sensitive << ( tmp_32_8_fu_1283_p1 );

    SC_METHOD(thread_tmp_33_9_fu_1295_p2);
    sensitive << ( reg_907 );
    sensitive << ( tmp_32_9_fu_1292_p1 );

    SC_METHOD(thread_tmp_33_s_fu_1304_p2);
    sensitive << ( reg_912 );
    sensitive << ( tmp_32_s_fu_1301_p1 );

    SC_METHOD(thread_tmp_3_fu_942_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( TEST_MODE );

    SC_METHOD(thread_tmp_4_fu_983_p1);
    sensitive << ( i_reg_818 );

    SC_METHOD(thread_tmp_5_cast_fu_1355_p1);
    sensitive << ( k_tlast_cnt_reg_806 );

    SC_METHOD(thread_tmp_5_fu_1407_p3);
    sensitive << ( i_2_reg_851 );

    SC_METHOD(thread_tmp_6_fu_1359_p2);
    sensitive << ( tmp_2_reg_1660 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_5_cast_fu_1355_p1 );

    SC_METHOD(thread_tmp_7_fu_1034_p1);
    sensitive << ( i_1_mid2_reg_1696 );

    SC_METHOD(thread_tmp_9_fu_1387_p1);
    sensitive << ( i_2_reg_851 );

    SC_METHOD(thread_tmp_data_V_1_fu_1625_p3);
    sensitive << ( tmp_3_reg_1650 );
    sensitive << ( sum_pix_tot_data_V_s_fu_1415_p17 );
    sensitive << ( sum_pix_tot_data_V_1_fu_1621_p1 );

    SC_METHOD(thread_tmp_fu_1585_p17);
    sensitive << ( val_assign_1_14_fu_1580_p2 );
    sensitive << ( val_assign_1_13_cast_fu_1576_p1 );
    sensitive << ( val_assign_1_12_cast_fu_1567_p1 );
    sensitive << ( val_assign_1_11_cast_fu_1558_p1 );
    sensitive << ( val_assign_1_10_cast_fu_1549_p1 );
    sensitive << ( val_assign_1_9_cast_fu_1540_p1 );
    sensitive << ( val_assign_1_8_cast_fu_1531_p1 );
    sensitive << ( val_assign_1_7_cast_fu_1522_p1 );
    sensitive << ( val_assign_1_6_cast_fu_1513_p1 );
    sensitive << ( val_assign_1_5_cast_fu_1504_p1 );
    sensitive << ( val_assign_1_4_cast_fu_1495_p1 );
    sensitive << ( val_assign_1_3_cast_fu_1486_p1 );
    sensitive << ( val_assign_1_2_cast_fu_1477_p1 );
    sensitive << ( val_assign_1_1_cast_fu_1468_p1 );
    sensitive << ( val_assign_1_cast_fu_1459_p1 );
    sensitive << ( tmp_10_cast_fu_1451_p1 );

    SC_METHOD(thread_tmp_last_V_fu_1382_p2);
    sensitive << ( tmp_6_reg_1962 );
    sensitive << ( tmp_s_fu_1376_p2 );

    SC_METHOD(thread_tmp_s_fu_1376_p2);
    sensitive << ( i_2_reg_851 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( exitcond5_fu_1364_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_val_assign_1_10_cast_fu_1549_p1);
    sensitive << ( val_assign_1_10_fu_1544_p2 );

    SC_METHOD(thread_val_assign_1_10_fu_1544_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_11_cast_fu_1558_p1);
    sensitive << ( val_assign_1_11_fu_1553_p2 );

    SC_METHOD(thread_val_assign_1_11_fu_1553_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_12_cast_fu_1567_p1);
    sensitive << ( val_assign_1_12_fu_1562_p2 );

    SC_METHOD(thread_val_assign_1_12_fu_1562_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_13_cast_fu_1576_p1);
    sensitive << ( val_assign_1_13_fu_1571_p2 );

    SC_METHOD(thread_val_assign_1_13_fu_1571_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_14_fu_1580_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_1_cast_fu_1468_p1);
    sensitive << ( val_assign_1_1_fu_1463_p2 );

    SC_METHOD(thread_val_assign_1_1_fu_1463_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_2_cast_fu_1477_p1);
    sensitive << ( val_assign_1_2_fu_1472_p2 );

    SC_METHOD(thread_val_assign_1_2_fu_1472_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_3_cast_fu_1486_p1);
    sensitive << ( val_assign_1_3_fu_1481_p2 );

    SC_METHOD(thread_val_assign_1_3_fu_1481_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_4_cast_fu_1495_p1);
    sensitive << ( val_assign_1_4_fu_1490_p2 );

    SC_METHOD(thread_val_assign_1_4_fu_1490_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_5_cast_fu_1504_p1);
    sensitive << ( val_assign_1_5_fu_1499_p2 );

    SC_METHOD(thread_val_assign_1_5_fu_1499_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_6_cast_fu_1513_p1);
    sensitive << ( val_assign_1_6_fu_1508_p2 );

    SC_METHOD(thread_val_assign_1_6_fu_1508_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_7_cast_fu_1522_p1);
    sensitive << ( val_assign_1_7_fu_1517_p2 );

    SC_METHOD(thread_val_assign_1_7_fu_1517_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_8_cast_fu_1531_p1);
    sensitive << ( val_assign_1_8_fu_1526_p2 );

    SC_METHOD(thread_val_assign_1_8_fu_1526_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_9_cast_fu_1540_p1);
    sensitive << ( val_assign_1_9_fu_1535_p2 );

    SC_METHOD(thread_val_assign_1_9_fu_1535_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_cast_fu_1459_p1);
    sensitive << ( val_assign_1_s_fu_1454_p2 );

    SC_METHOD(thread_val_assign_1_s_fu_1454_p2);
    sensitive << ( tmp_5_reg_2061_pp2_iter1_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( out_stream_V_keep_V_1_ack_in );
    sensitive << ( out_stream_V_strb_V_1_ack_in );
    sensitive << ( out_stream_V_user_V_1_ack_in );
    sensitive << ( out_stream_V_last_V_1_ack_in );
    sensitive << ( out_stream_V_id_V_1_ack_in );
    sensitive << ( out_stream_V_dest_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond1_fu_960_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_flatten_fu_1003_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( exitcond5_fu_1364_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( exitcond2_fu_971_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000001";
    in_stream0_V_data_V_0_payload_A = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    in_stream0_V_data_V_0_payload_B = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    in_stream0_V_data_V_0_sel_rd = SC_LOGIC_0;
    in_stream0_V_data_V_0_sel_wr = SC_LOGIC_0;
    in_stream0_V_data_V_0_state = "00";
    in_stream0_V_dest_V_0_state = "00";
    out_stream_V_data_V_1_payload_A = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    out_stream_V_data_V_1_payload_B = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    out_stream_V_data_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_data_V_1_sel_wr = SC_LOGIC_0;
    out_stream_V_data_V_1_state = "00";
    out_stream_V_keep_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_keep_V_1_state = "00";
    out_stream_V_strb_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_strb_V_1_state = "00";
    out_stream_V_user_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_user_V_1_state = "00";
    out_stream_V_last_V_1_payload_A = "0";
    out_stream_V_last_V_1_payload_B = "0";
    out_stream_V_last_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_last_V_1_sel_wr = SC_LOGIC_0;
    out_stream_V_last_V_1_state = "00";
    out_stream_V_id_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_id_V_1_state = "00";
    out_stream_V_dest_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_dest_V_1_state = "00";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    exitcond_flatten_reg_1687 = "0";
    ap_enable_reg_pp2_iter2 = SC_LOGIC_0;
    exitcond5_reg_1967 = "0";
    exitcond5_reg_1967_pp2_iter1_reg = "0";
    ap_enable_reg_pp2_iter3 = SC_LOGIC_0;
    exitcond5_reg_1967_pp2_iter2_reg = "0";
    indvar_flatten_reg_829 = "000000000000000000000000";
    i_1_reg_840 = "00000000";
    i_2_reg_851 = "00000000";
    reg_862 = "00000000000000000000000000000000";
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    exitcond_flatten_reg_1687_pp1_iter1_reg = "0";
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    tmp_3_reg_1650 = "0";
    reg_867 = "00000000000000000000000000000000";
    reg_872 = "00000000000000000000000000000000";
    reg_877 = "00000000000000000000000000000000";
    reg_882 = "00000000000000000000000000000000";
    reg_887 = "00000000000000000000000000000000";
    reg_892 = "00000000000000000000000000000000";
    reg_897 = "00000000000000000000000000000000";
    reg_902 = "00000000000000000000000000000000";
    reg_907 = "00000000000000000000000000000000";
    reg_912 = "00000000000000000000000000000000";
    reg_917 = "00000000000000000000000000000000";
    reg_922 = "00000000000000000000000000000000";
    reg_927 = "00000000000000000000000000000000";
    reg_932 = "00000000000000000000000000000000";
    reg_937 = "00000000000000000000000000000000";
    K_TLAST_read_reg_1639 = "0000000000000000";
    N_ADDS_read_reg_1645 = "0000000000000000";
    tmp_2_reg_1660 = "00000000000000000";
    bound_reg_1665 = "000000000000000000000000";
    k_tlast_cnt_1_reg_1674 = "0000000000000000";
    exitcond_flatten_reg_1687_pp1_iter2_reg = "0";
    exitcond_flatten_reg_1687_pp1_iter3_reg = "0";
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    i_1_mid2_reg_1696 = "00000000";
    tmp_13_reg_1706 = "00000000";
    tmp_13_reg_1706_pp1_iter2_reg = "00000000";
    sum_pix_ch0_0_addr_1_reg_1711 = "00000000";
    sum_pix_ch0_0_addr_1_reg_1711_pp1_iter2_reg = "00000000";
    sum_pix_ch0_0_addr_1_reg_1711_pp1_iter3_reg = "00000000";
    phitmp_1_reg_1717 = "00000000";
    phitmp_1_reg_1717_pp1_iter2_reg = "00000000";
    sum_pix_ch0_1_addr_1_reg_1722 = "00000000";
    sum_pix_ch0_1_addr_1_reg_1722_pp1_iter2_reg = "00000000";
    sum_pix_ch0_1_addr_1_reg_1722_pp1_iter3_reg = "00000000";
    phitmp_2_reg_1728 = "00000000";
    phitmp_2_reg_1728_pp1_iter2_reg = "00000000";
    sum_pix_ch0_2_addr_1_reg_1733 = "00000000";
    sum_pix_ch0_2_addr_1_reg_1733_pp1_iter2_reg = "00000000";
    sum_pix_ch0_2_addr_1_reg_1733_pp1_iter3_reg = "00000000";
    phitmp_3_reg_1739 = "00000000";
    phitmp_3_reg_1739_pp1_iter2_reg = "00000000";
    sum_pix_ch0_3_addr_1_reg_1744 = "00000000";
    sum_pix_ch0_3_addr_1_reg_1744_pp1_iter2_reg = "00000000";
    sum_pix_ch0_3_addr_1_reg_1744_pp1_iter3_reg = "00000000";
    phitmp_4_reg_1750 = "00000000";
    phitmp_4_reg_1750_pp1_iter2_reg = "00000000";
    sum_pix_ch0_4_addr_1_reg_1755 = "00000000";
    sum_pix_ch0_4_addr_1_reg_1755_pp1_iter2_reg = "00000000";
    sum_pix_ch0_4_addr_1_reg_1755_pp1_iter3_reg = "00000000";
    phitmp_5_reg_1761 = "00000000";
    phitmp_5_reg_1761_pp1_iter2_reg = "00000000";
    sum_pix_ch0_5_addr_1_reg_1766 = "00000000";
    sum_pix_ch0_5_addr_1_reg_1766_pp1_iter2_reg = "00000000";
    sum_pix_ch0_5_addr_1_reg_1766_pp1_iter3_reg = "00000000";
    phitmp_6_reg_1772 = "00000000";
    phitmp_6_reg_1772_pp1_iter2_reg = "00000000";
    sum_pix_ch0_6_addr_1_reg_1777 = "00000000";
    sum_pix_ch0_6_addr_1_reg_1777_pp1_iter2_reg = "00000000";
    sum_pix_ch0_6_addr_1_reg_1777_pp1_iter3_reg = "00000000";
    phitmp_7_reg_1783 = "00000000";
    phitmp_7_reg_1783_pp1_iter2_reg = "00000000";
    sum_pix_ch0_7_addr_1_reg_1788 = "00000000";
    sum_pix_ch0_7_addr_1_reg_1788_pp1_iter2_reg = "00000000";
    sum_pix_ch0_7_addr_1_reg_1788_pp1_iter3_reg = "00000000";
    phitmp_8_reg_1794 = "00000000";
    phitmp_8_reg_1794_pp1_iter2_reg = "00000000";
    sum_pix_ch0_8_addr_1_reg_1799 = "00000000";
    sum_pix_ch0_8_addr_1_reg_1799_pp1_iter2_reg = "00000000";
    sum_pix_ch0_8_addr_1_reg_1799_pp1_iter3_reg = "00000000";
    phitmp_9_reg_1805 = "00000000";
    phitmp_9_reg_1805_pp1_iter2_reg = "00000000";
    sum_pix_ch0_9_addr_1_reg_1810 = "00000000";
    sum_pix_ch0_9_addr_1_reg_1810_pp1_iter2_reg = "00000000";
    sum_pix_ch0_9_addr_1_reg_1810_pp1_iter3_reg = "00000000";
    phitmp_s_reg_1816 = "00000000";
    phitmp_s_reg_1816_pp1_iter2_reg = "00000000";
    sum_pix_ch0_10_addr_1_reg_1821 = "00000000";
    sum_pix_ch0_10_addr_1_reg_1821_pp1_iter2_reg = "00000000";
    sum_pix_ch0_10_addr_1_reg_1821_pp1_iter3_reg = "00000000";
    phitmp_10_reg_1827 = "00000000";
    phitmp_10_reg_1827_pp1_iter2_reg = "00000000";
    sum_pix_ch0_11_addr_1_reg_1832 = "00000000";
    sum_pix_ch0_11_addr_1_reg_1832_pp1_iter2_reg = "00000000";
    sum_pix_ch0_11_addr_1_reg_1832_pp1_iter3_reg = "00000000";
    phitmp_11_reg_1838 = "00000000";
    phitmp_11_reg_1838_pp1_iter2_reg = "00000000";
    sum_pix_ch0_12_addr_1_reg_1843 = "00000000";
    sum_pix_ch0_12_addr_1_reg_1843_pp1_iter2_reg = "00000000";
    sum_pix_ch0_12_addr_1_reg_1843_pp1_iter3_reg = "00000000";
    phitmp_12_reg_1849 = "00000000";
    phitmp_12_reg_1849_pp1_iter2_reg = "00000000";
    sum_pix_ch0_13_addr_1_reg_1854 = "00000000";
    sum_pix_ch0_13_addr_1_reg_1854_pp1_iter2_reg = "00000000";
    sum_pix_ch0_13_addr_1_reg_1854_pp1_iter3_reg = "00000000";
    phitmp_13_reg_1860 = "00000000";
    phitmp_13_reg_1860_pp1_iter2_reg = "00000000";
    sum_pix_ch0_14_addr_1_reg_1865 = "00000000";
    sum_pix_ch0_14_addr_1_reg_1865_pp1_iter2_reg = "00000000";
    sum_pix_ch0_14_addr_1_reg_1865_pp1_iter3_reg = "00000000";
    phitmp_14_reg_1871 = "00000000";
    phitmp_14_reg_1871_pp1_iter2_reg = "00000000";
    sum_pix_ch0_15_addr_1_reg_1876 = "00000000";
    sum_pix_ch0_15_addr_1_reg_1876_pp1_iter2_reg = "00000000";
    sum_pix_ch0_15_addr_1_reg_1876_pp1_iter3_reg = "00000000";
    tmp_12_reg_1882 = "00000000000000000000000000000000";
    tmp_33_1_reg_1887 = "00000000000000000000000000000000";
    tmp_33_2_reg_1892 = "00000000000000000000000000000000";
    tmp_33_3_reg_1897 = "00000000000000000000000000000000";
    tmp_33_4_reg_1902 = "00000000000000000000000000000000";
    tmp_33_5_reg_1907 = "00000000000000000000000000000000";
    tmp_33_6_reg_1912 = "00000000000000000000000000000000";
    tmp_33_7_reg_1917 = "00000000000000000000000000000000";
    tmp_33_8_reg_1922 = "00000000000000000000000000000000";
    tmp_33_9_reg_1927 = "00000000000000000000000000000000";
    tmp_33_s_reg_1932 = "00000000000000000000000000000000";
    tmp_33_10_reg_1937 = "00000000000000000000000000000000";
    tmp_33_11_reg_1942 = "00000000000000000000000000000000";
    tmp_33_12_reg_1947 = "00000000000000000000000000000000";
    tmp_33_13_reg_1952 = "00000000000000000000000000000000";
    tmp_33_14_reg_1957 = "00000000000000000000000000000000";
    tmp_6_reg_1962 = "0";
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    tmp_last_V_reg_1976 = "0";
    tmp_last_V_reg_1976_pp2_iter1_reg = "0";
    tmp_5_reg_2061 = "000000000000";
    tmp_5_reg_2061_pp2_iter1_reg = "000000000000";
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter4 = SC_LOGIC_0;
    k_tlast_cnt_reg_806 = "0000000000000000";
    i_reg_818 = "00000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "scurve_adder36_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_stream0_TDATA, "(port)in_stream0_TDATA");
    sc_trace(mVcdFile, in_stream0_TVALID, "(port)in_stream0_TVALID");
    sc_trace(mVcdFile, in_stream0_TREADY, "(port)in_stream0_TREADY");
    sc_trace(mVcdFile, in_stream0_TKEEP, "(port)in_stream0_TKEEP");
    sc_trace(mVcdFile, in_stream0_TSTRB, "(port)in_stream0_TSTRB");
    sc_trace(mVcdFile, in_stream0_TUSER, "(port)in_stream0_TUSER");
    sc_trace(mVcdFile, in_stream0_TLAST, "(port)in_stream0_TLAST");
    sc_trace(mVcdFile, in_stream0_TID, "(port)in_stream0_TID");
    sc_trace(mVcdFile, in_stream0_TDEST, "(port)in_stream0_TDEST");
    sc_trace(mVcdFile, out_stream_TDATA, "(port)out_stream_TDATA");
    sc_trace(mVcdFile, out_stream_TVALID, "(port)out_stream_TVALID");
    sc_trace(mVcdFile, out_stream_TREADY, "(port)out_stream_TREADY");
    sc_trace(mVcdFile, out_stream_TKEEP, "(port)out_stream_TKEEP");
    sc_trace(mVcdFile, out_stream_TSTRB, "(port)out_stream_TSTRB");
    sc_trace(mVcdFile, out_stream_TUSER, "(port)out_stream_TUSER");
    sc_trace(mVcdFile, out_stream_TLAST, "(port)out_stream_TLAST");
    sc_trace(mVcdFile, out_stream_TID, "(port)out_stream_TID");
    sc_trace(mVcdFile, out_stream_TDEST, "(port)out_stream_TDEST");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWVALID, "(port)s_axi_CTRL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWREADY, "(port)s_axi_CTRL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWADDR, "(port)s_axi_CTRL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WVALID, "(port)s_axi_CTRL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WREADY, "(port)s_axi_CTRL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WDATA, "(port)s_axi_CTRL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WSTRB, "(port)s_axi_CTRL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARVALID, "(port)s_axi_CTRL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARREADY, "(port)s_axi_CTRL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARADDR, "(port)s_axi_CTRL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RVALID, "(port)s_axi_CTRL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RREADY, "(port)s_axi_CTRL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RDATA, "(port)s_axi_CTRL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RRESP, "(port)s_axi_CTRL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BVALID, "(port)s_axi_CTRL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BREADY, "(port)s_axi_CTRL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BRESP, "(port)s_axi_CTRL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_data_out, "in_stream0_V_data_V_0_data_out");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_vld_in, "in_stream0_V_data_V_0_vld_in");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_vld_out, "in_stream0_V_data_V_0_vld_out");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_ack_in, "in_stream0_V_data_V_0_ack_in");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_ack_out, "in_stream0_V_data_V_0_ack_out");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_payload_A, "in_stream0_V_data_V_0_payload_A");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_payload_B, "in_stream0_V_data_V_0_payload_B");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_sel_rd, "in_stream0_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_sel_wr, "in_stream0_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_sel, "in_stream0_V_data_V_0_sel");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_load_A, "in_stream0_V_data_V_0_load_A");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_load_B, "in_stream0_V_data_V_0_load_B");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_state, "in_stream0_V_data_V_0_state");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_state_cmp_full, "in_stream0_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_stream0_V_dest_V_0_vld_in, "in_stream0_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, in_stream0_V_dest_V_0_ack_out, "in_stream0_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, in_stream0_V_dest_V_0_state, "in_stream0_V_dest_V_0_state");
    sc_trace(mVcdFile, out_stream_V_data_V_1_data_out, "out_stream_V_data_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_data_V_1_vld_in, "out_stream_V_data_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_data_V_1_vld_out, "out_stream_V_data_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_data_V_1_ack_in, "out_stream_V_data_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_data_V_1_ack_out, "out_stream_V_data_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_data_V_1_payload_A, "out_stream_V_data_V_1_payload_A");
    sc_trace(mVcdFile, out_stream_V_data_V_1_payload_B, "out_stream_V_data_V_1_payload_B");
    sc_trace(mVcdFile, out_stream_V_data_V_1_sel_rd, "out_stream_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_data_V_1_sel_wr, "out_stream_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, out_stream_V_data_V_1_sel, "out_stream_V_data_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_data_V_1_load_A, "out_stream_V_data_V_1_load_A");
    sc_trace(mVcdFile, out_stream_V_data_V_1_load_B, "out_stream_V_data_V_1_load_B");
    sc_trace(mVcdFile, out_stream_V_data_V_1_state, "out_stream_V_data_V_1_state");
    sc_trace(mVcdFile, out_stream_V_data_V_1_state_cmp_full, "out_stream_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_data_out, "out_stream_V_keep_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_vld_in, "out_stream_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_vld_out, "out_stream_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_ack_in, "out_stream_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_ack_out, "out_stream_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_sel_rd, "out_stream_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_sel, "out_stream_V_keep_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_state, "out_stream_V_keep_V_1_state");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_data_out, "out_stream_V_strb_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_vld_in, "out_stream_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_vld_out, "out_stream_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_ack_in, "out_stream_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_ack_out, "out_stream_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_sel_rd, "out_stream_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_sel, "out_stream_V_strb_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_state, "out_stream_V_strb_V_1_state");
    sc_trace(mVcdFile, out_stream_V_user_V_1_data_out, "out_stream_V_user_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_user_V_1_vld_in, "out_stream_V_user_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_user_V_1_vld_out, "out_stream_V_user_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_user_V_1_ack_in, "out_stream_V_user_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_user_V_1_ack_out, "out_stream_V_user_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_user_V_1_sel_rd, "out_stream_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_user_V_1_sel, "out_stream_V_user_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_user_V_1_state, "out_stream_V_user_V_1_state");
    sc_trace(mVcdFile, out_stream_V_last_V_1_data_out, "out_stream_V_last_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_last_V_1_vld_in, "out_stream_V_last_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_last_V_1_vld_out, "out_stream_V_last_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_last_V_1_ack_in, "out_stream_V_last_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_last_V_1_ack_out, "out_stream_V_last_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_last_V_1_payload_A, "out_stream_V_last_V_1_payload_A");
    sc_trace(mVcdFile, out_stream_V_last_V_1_payload_B, "out_stream_V_last_V_1_payload_B");
    sc_trace(mVcdFile, out_stream_V_last_V_1_sel_rd, "out_stream_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_last_V_1_sel_wr, "out_stream_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, out_stream_V_last_V_1_sel, "out_stream_V_last_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_last_V_1_load_A, "out_stream_V_last_V_1_load_A");
    sc_trace(mVcdFile, out_stream_V_last_V_1_load_B, "out_stream_V_last_V_1_load_B");
    sc_trace(mVcdFile, out_stream_V_last_V_1_state, "out_stream_V_last_V_1_state");
    sc_trace(mVcdFile, out_stream_V_last_V_1_state_cmp_full, "out_stream_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_stream_V_id_V_1_data_out, "out_stream_V_id_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_id_V_1_vld_in, "out_stream_V_id_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_id_V_1_vld_out, "out_stream_V_id_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_id_V_1_ack_in, "out_stream_V_id_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_id_V_1_ack_out, "out_stream_V_id_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_id_V_1_sel_rd, "out_stream_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_id_V_1_sel, "out_stream_V_id_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_id_V_1_state, "out_stream_V_id_V_1_state");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_data_out, "out_stream_V_dest_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_vld_in, "out_stream_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_vld_out, "out_stream_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_ack_in, "out_stream_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_ack_out, "out_stream_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_sel_rd, "out_stream_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_sel, "out_stream_V_dest_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_state, "out_stream_V_dest_V_1_state");
    sc_trace(mVcdFile, N_ADDS, "N_ADDS");
    sc_trace(mVcdFile, TEST_MODE, "TEST_MODE");
    sc_trace(mVcdFile, K_TLAST, "K_TLAST");
    sc_trace(mVcdFile, in_stream0_TDATA_blk_n, "in_stream0_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, exitcond_flatten_reg_1687, "exitcond_flatten_reg_1687");
    sc_trace(mVcdFile, out_stream_TDATA_blk_n, "out_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter2, "ap_enable_reg_pp2_iter2");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, exitcond5_reg_1967, "exitcond5_reg_1967");
    sc_trace(mVcdFile, exitcond5_reg_1967_pp2_iter1_reg, "exitcond5_reg_1967_pp2_iter1_reg");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter3, "ap_enable_reg_pp2_iter3");
    sc_trace(mVcdFile, exitcond5_reg_1967_pp2_iter2_reg, "exitcond5_reg_1967_pp2_iter2_reg");
    sc_trace(mVcdFile, indvar_flatten_reg_829, "indvar_flatten_reg_829");
    sc_trace(mVcdFile, i_1_reg_840, "i_1_reg_840");
    sc_trace(mVcdFile, i_2_reg_851, "i_2_reg_851");
    sc_trace(mVcdFile, sum_pix_ch0_0_q0, "sum_pix_ch0_0_q0");
    sc_trace(mVcdFile, reg_862, "reg_862");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_block_state8_pp1_stage0_iter0, "ap_block_state8_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage0_iter1, "ap_block_state9_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage0_iter2, "ap_block_state10_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state11_pp1_stage0_iter3, "ap_block_state11_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state12_pp1_stage0_iter4, "ap_block_state12_pp1_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten_reg_1687_pp1_iter1_reg, "exitcond_flatten_reg_1687_pp1_iter1_reg");
    sc_trace(mVcdFile, sum_pix_ch0_0_q1, "sum_pix_ch0_0_q1");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_state14_pp2_stage0_iter0, "ap_block_state14_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state15_pp2_stage0_iter1, "ap_block_state15_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state16_pp2_stage0_iter2, "ap_block_state16_pp2_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state16_io, "ap_block_state16_io");
    sc_trace(mVcdFile, ap_block_state17_pp2_stage0_iter3, "ap_block_state17_pp2_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state17_io, "ap_block_state17_io");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, tmp_3_reg_1650, "tmp_3_reg_1650");
    sc_trace(mVcdFile, sum_pix_ch0_1_q0, "sum_pix_ch0_1_q0");
    sc_trace(mVcdFile, reg_867, "reg_867");
    sc_trace(mVcdFile, sum_pix_ch0_1_q1, "sum_pix_ch0_1_q1");
    sc_trace(mVcdFile, sum_pix_ch0_2_q0, "sum_pix_ch0_2_q0");
    sc_trace(mVcdFile, reg_872, "reg_872");
    sc_trace(mVcdFile, sum_pix_ch0_2_q1, "sum_pix_ch0_2_q1");
    sc_trace(mVcdFile, sum_pix_ch0_3_q0, "sum_pix_ch0_3_q0");
    sc_trace(mVcdFile, reg_877, "reg_877");
    sc_trace(mVcdFile, sum_pix_ch0_3_q1, "sum_pix_ch0_3_q1");
    sc_trace(mVcdFile, sum_pix_ch0_4_q0, "sum_pix_ch0_4_q0");
    sc_trace(mVcdFile, reg_882, "reg_882");
    sc_trace(mVcdFile, sum_pix_ch0_4_q1, "sum_pix_ch0_4_q1");
    sc_trace(mVcdFile, sum_pix_ch0_5_q0, "sum_pix_ch0_5_q0");
    sc_trace(mVcdFile, reg_887, "reg_887");
    sc_trace(mVcdFile, sum_pix_ch0_5_q1, "sum_pix_ch0_5_q1");
    sc_trace(mVcdFile, sum_pix_ch0_6_q0, "sum_pix_ch0_6_q0");
    sc_trace(mVcdFile, reg_892, "reg_892");
    sc_trace(mVcdFile, sum_pix_ch0_6_q1, "sum_pix_ch0_6_q1");
    sc_trace(mVcdFile, sum_pix_ch0_7_q0, "sum_pix_ch0_7_q0");
    sc_trace(mVcdFile, reg_897, "reg_897");
    sc_trace(mVcdFile, sum_pix_ch0_7_q1, "sum_pix_ch0_7_q1");
    sc_trace(mVcdFile, sum_pix_ch0_8_q0, "sum_pix_ch0_8_q0");
    sc_trace(mVcdFile, reg_902, "reg_902");
    sc_trace(mVcdFile, sum_pix_ch0_8_q1, "sum_pix_ch0_8_q1");
    sc_trace(mVcdFile, sum_pix_ch0_9_q0, "sum_pix_ch0_9_q0");
    sc_trace(mVcdFile, reg_907, "reg_907");
    sc_trace(mVcdFile, sum_pix_ch0_9_q1, "sum_pix_ch0_9_q1");
    sc_trace(mVcdFile, sum_pix_ch0_10_q0, "sum_pix_ch0_10_q0");
    sc_trace(mVcdFile, reg_912, "reg_912");
    sc_trace(mVcdFile, sum_pix_ch0_10_q1, "sum_pix_ch0_10_q1");
    sc_trace(mVcdFile, sum_pix_ch0_11_q0, "sum_pix_ch0_11_q0");
    sc_trace(mVcdFile, reg_917, "reg_917");
    sc_trace(mVcdFile, sum_pix_ch0_11_q1, "sum_pix_ch0_11_q1");
    sc_trace(mVcdFile, sum_pix_ch0_12_q0, "sum_pix_ch0_12_q0");
    sc_trace(mVcdFile, reg_922, "reg_922");
    sc_trace(mVcdFile, sum_pix_ch0_12_q1, "sum_pix_ch0_12_q1");
    sc_trace(mVcdFile, sum_pix_ch0_13_q0, "sum_pix_ch0_13_q0");
    sc_trace(mVcdFile, reg_927, "reg_927");
    sc_trace(mVcdFile, sum_pix_ch0_13_q1, "sum_pix_ch0_13_q1");
    sc_trace(mVcdFile, sum_pix_ch0_14_q0, "sum_pix_ch0_14_q0");
    sc_trace(mVcdFile, reg_932, "reg_932");
    sc_trace(mVcdFile, sum_pix_ch0_14_q1, "sum_pix_ch0_14_q1");
    sc_trace(mVcdFile, sum_pix_ch0_15_q0, "sum_pix_ch0_15_q0");
    sc_trace(mVcdFile, reg_937, "reg_937");
    sc_trace(mVcdFile, sum_pix_ch0_15_q1, "sum_pix_ch0_15_q1");
    sc_trace(mVcdFile, K_TLAST_read_reg_1639, "K_TLAST_read_reg_1639");
    sc_trace(mVcdFile, N_ADDS_read_reg_1645, "N_ADDS_read_reg_1645");
    sc_trace(mVcdFile, tmp_3_fu_942_p2, "tmp_3_fu_942_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_2_fu_954_p2, "tmp_2_fu_954_p2");
    sc_trace(mVcdFile, tmp_2_reg_1660, "tmp_2_reg_1660");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_1633_p2, "grp_fu_1633_p2");
    sc_trace(mVcdFile, bound_reg_1665, "bound_reg_1665");
    sc_trace(mVcdFile, exitcond1_fu_960_p2, "exitcond1_fu_960_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, k_tlast_cnt_1_fu_965_p2, "k_tlast_cnt_1_fu_965_p2");
    sc_trace(mVcdFile, k_tlast_cnt_1_reg_1674, "k_tlast_cnt_1_reg_1674");
    sc_trace(mVcdFile, i_3_fu_977_p2, "i_3_fu_977_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond_flatten_fu_1003_p2, "exitcond_flatten_fu_1003_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_1687_pp1_iter2_reg, "exitcond_flatten_reg_1687_pp1_iter2_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_1687_pp1_iter3_reg, "exitcond_flatten_reg_1687_pp1_iter3_reg");
    sc_trace(mVcdFile, indvar_flatten_next_fu_1008_p2, "indvar_flatten_next_fu_1008_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, i_1_mid2_fu_1020_p3, "i_1_mid2_fu_1020_p3");
    sc_trace(mVcdFile, i_1_mid2_reg_1696, "i_1_mid2_reg_1696");
    sc_trace(mVcdFile, i_4_fu_1028_p2, "i_4_fu_1028_p2");
    sc_trace(mVcdFile, tmp_13_fu_1057_p1, "tmp_13_fu_1057_p1");
    sc_trace(mVcdFile, tmp_13_reg_1706, "tmp_13_reg_1706");
    sc_trace(mVcdFile, tmp_13_reg_1706_pp1_iter2_reg, "tmp_13_reg_1706_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_0_addr_1_reg_1711, "sum_pix_ch0_0_addr_1_reg_1711");
    sc_trace(mVcdFile, sum_pix_ch0_0_addr_1_reg_1711_pp1_iter2_reg, "sum_pix_ch0_0_addr_1_reg_1711_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_0_addr_1_reg_1711_pp1_iter3_reg, "sum_pix_ch0_0_addr_1_reg_1711_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_1_reg_1717, "phitmp_1_reg_1717");
    sc_trace(mVcdFile, phitmp_1_reg_1717_pp1_iter2_reg, "phitmp_1_reg_1717_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_1_addr_1_reg_1722, "sum_pix_ch0_1_addr_1_reg_1722");
    sc_trace(mVcdFile, sum_pix_ch0_1_addr_1_reg_1722_pp1_iter2_reg, "sum_pix_ch0_1_addr_1_reg_1722_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_1_addr_1_reg_1722_pp1_iter3_reg, "sum_pix_ch0_1_addr_1_reg_1722_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_2_reg_1728, "phitmp_2_reg_1728");
    sc_trace(mVcdFile, phitmp_2_reg_1728_pp1_iter2_reg, "phitmp_2_reg_1728_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_2_addr_1_reg_1733, "sum_pix_ch0_2_addr_1_reg_1733");
    sc_trace(mVcdFile, sum_pix_ch0_2_addr_1_reg_1733_pp1_iter2_reg, "sum_pix_ch0_2_addr_1_reg_1733_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_2_addr_1_reg_1733_pp1_iter3_reg, "sum_pix_ch0_2_addr_1_reg_1733_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_3_reg_1739, "phitmp_3_reg_1739");
    sc_trace(mVcdFile, phitmp_3_reg_1739_pp1_iter2_reg, "phitmp_3_reg_1739_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_3_addr_1_reg_1744, "sum_pix_ch0_3_addr_1_reg_1744");
    sc_trace(mVcdFile, sum_pix_ch0_3_addr_1_reg_1744_pp1_iter2_reg, "sum_pix_ch0_3_addr_1_reg_1744_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_3_addr_1_reg_1744_pp1_iter3_reg, "sum_pix_ch0_3_addr_1_reg_1744_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_4_reg_1750, "phitmp_4_reg_1750");
    sc_trace(mVcdFile, phitmp_4_reg_1750_pp1_iter2_reg, "phitmp_4_reg_1750_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_4_addr_1_reg_1755, "sum_pix_ch0_4_addr_1_reg_1755");
    sc_trace(mVcdFile, sum_pix_ch0_4_addr_1_reg_1755_pp1_iter2_reg, "sum_pix_ch0_4_addr_1_reg_1755_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_4_addr_1_reg_1755_pp1_iter3_reg, "sum_pix_ch0_4_addr_1_reg_1755_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_5_reg_1761, "phitmp_5_reg_1761");
    sc_trace(mVcdFile, phitmp_5_reg_1761_pp1_iter2_reg, "phitmp_5_reg_1761_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_5_addr_1_reg_1766, "sum_pix_ch0_5_addr_1_reg_1766");
    sc_trace(mVcdFile, sum_pix_ch0_5_addr_1_reg_1766_pp1_iter2_reg, "sum_pix_ch0_5_addr_1_reg_1766_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_5_addr_1_reg_1766_pp1_iter3_reg, "sum_pix_ch0_5_addr_1_reg_1766_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_6_reg_1772, "phitmp_6_reg_1772");
    sc_trace(mVcdFile, phitmp_6_reg_1772_pp1_iter2_reg, "phitmp_6_reg_1772_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_6_addr_1_reg_1777, "sum_pix_ch0_6_addr_1_reg_1777");
    sc_trace(mVcdFile, sum_pix_ch0_6_addr_1_reg_1777_pp1_iter2_reg, "sum_pix_ch0_6_addr_1_reg_1777_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_6_addr_1_reg_1777_pp1_iter3_reg, "sum_pix_ch0_6_addr_1_reg_1777_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_7_reg_1783, "phitmp_7_reg_1783");
    sc_trace(mVcdFile, phitmp_7_reg_1783_pp1_iter2_reg, "phitmp_7_reg_1783_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_7_addr_1_reg_1788, "sum_pix_ch0_7_addr_1_reg_1788");
    sc_trace(mVcdFile, sum_pix_ch0_7_addr_1_reg_1788_pp1_iter2_reg, "sum_pix_ch0_7_addr_1_reg_1788_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_7_addr_1_reg_1788_pp1_iter3_reg, "sum_pix_ch0_7_addr_1_reg_1788_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_8_reg_1794, "phitmp_8_reg_1794");
    sc_trace(mVcdFile, phitmp_8_reg_1794_pp1_iter2_reg, "phitmp_8_reg_1794_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_8_addr_1_reg_1799, "sum_pix_ch0_8_addr_1_reg_1799");
    sc_trace(mVcdFile, sum_pix_ch0_8_addr_1_reg_1799_pp1_iter2_reg, "sum_pix_ch0_8_addr_1_reg_1799_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_8_addr_1_reg_1799_pp1_iter3_reg, "sum_pix_ch0_8_addr_1_reg_1799_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_9_reg_1805, "phitmp_9_reg_1805");
    sc_trace(mVcdFile, phitmp_9_reg_1805_pp1_iter2_reg, "phitmp_9_reg_1805_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_9_addr_1_reg_1810, "sum_pix_ch0_9_addr_1_reg_1810");
    sc_trace(mVcdFile, sum_pix_ch0_9_addr_1_reg_1810_pp1_iter2_reg, "sum_pix_ch0_9_addr_1_reg_1810_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_9_addr_1_reg_1810_pp1_iter3_reg, "sum_pix_ch0_9_addr_1_reg_1810_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_s_reg_1816, "phitmp_s_reg_1816");
    sc_trace(mVcdFile, phitmp_s_reg_1816_pp1_iter2_reg, "phitmp_s_reg_1816_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_10_addr_1_reg_1821, "sum_pix_ch0_10_addr_1_reg_1821");
    sc_trace(mVcdFile, sum_pix_ch0_10_addr_1_reg_1821_pp1_iter2_reg, "sum_pix_ch0_10_addr_1_reg_1821_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_10_addr_1_reg_1821_pp1_iter3_reg, "sum_pix_ch0_10_addr_1_reg_1821_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_10_reg_1827, "phitmp_10_reg_1827");
    sc_trace(mVcdFile, phitmp_10_reg_1827_pp1_iter2_reg, "phitmp_10_reg_1827_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_11_addr_1_reg_1832, "sum_pix_ch0_11_addr_1_reg_1832");
    sc_trace(mVcdFile, sum_pix_ch0_11_addr_1_reg_1832_pp1_iter2_reg, "sum_pix_ch0_11_addr_1_reg_1832_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_11_addr_1_reg_1832_pp1_iter3_reg, "sum_pix_ch0_11_addr_1_reg_1832_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_11_reg_1838, "phitmp_11_reg_1838");
    sc_trace(mVcdFile, phitmp_11_reg_1838_pp1_iter2_reg, "phitmp_11_reg_1838_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_12_addr_1_reg_1843, "sum_pix_ch0_12_addr_1_reg_1843");
    sc_trace(mVcdFile, sum_pix_ch0_12_addr_1_reg_1843_pp1_iter2_reg, "sum_pix_ch0_12_addr_1_reg_1843_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_12_addr_1_reg_1843_pp1_iter3_reg, "sum_pix_ch0_12_addr_1_reg_1843_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_12_reg_1849, "phitmp_12_reg_1849");
    sc_trace(mVcdFile, phitmp_12_reg_1849_pp1_iter2_reg, "phitmp_12_reg_1849_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_13_addr_1_reg_1854, "sum_pix_ch0_13_addr_1_reg_1854");
    sc_trace(mVcdFile, sum_pix_ch0_13_addr_1_reg_1854_pp1_iter2_reg, "sum_pix_ch0_13_addr_1_reg_1854_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_13_addr_1_reg_1854_pp1_iter3_reg, "sum_pix_ch0_13_addr_1_reg_1854_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_13_reg_1860, "phitmp_13_reg_1860");
    sc_trace(mVcdFile, phitmp_13_reg_1860_pp1_iter2_reg, "phitmp_13_reg_1860_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_14_addr_1_reg_1865, "sum_pix_ch0_14_addr_1_reg_1865");
    sc_trace(mVcdFile, sum_pix_ch0_14_addr_1_reg_1865_pp1_iter2_reg, "sum_pix_ch0_14_addr_1_reg_1865_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_14_addr_1_reg_1865_pp1_iter3_reg, "sum_pix_ch0_14_addr_1_reg_1865_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_14_reg_1871, "phitmp_14_reg_1871");
    sc_trace(mVcdFile, phitmp_14_reg_1871_pp1_iter2_reg, "phitmp_14_reg_1871_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_15_addr_1_reg_1876, "sum_pix_ch0_15_addr_1_reg_1876");
    sc_trace(mVcdFile, sum_pix_ch0_15_addr_1_reg_1876_pp1_iter2_reg, "sum_pix_ch0_15_addr_1_reg_1876_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_15_addr_1_reg_1876_pp1_iter3_reg, "sum_pix_ch0_15_addr_1_reg_1876_pp1_iter3_reg");
    sc_trace(mVcdFile, tmp_12_fu_1214_p2, "tmp_12_fu_1214_p2");
    sc_trace(mVcdFile, tmp_12_reg_1882, "tmp_12_reg_1882");
    sc_trace(mVcdFile, tmp_33_1_fu_1223_p2, "tmp_33_1_fu_1223_p2");
    sc_trace(mVcdFile, tmp_33_1_reg_1887, "tmp_33_1_reg_1887");
    sc_trace(mVcdFile, tmp_33_2_fu_1232_p2, "tmp_33_2_fu_1232_p2");
    sc_trace(mVcdFile, tmp_33_2_reg_1892, "tmp_33_2_reg_1892");
    sc_trace(mVcdFile, tmp_33_3_fu_1241_p2, "tmp_33_3_fu_1241_p2");
    sc_trace(mVcdFile, tmp_33_3_reg_1897, "tmp_33_3_reg_1897");
    sc_trace(mVcdFile, tmp_33_4_fu_1250_p2, "tmp_33_4_fu_1250_p2");
    sc_trace(mVcdFile, tmp_33_4_reg_1902, "tmp_33_4_reg_1902");
    sc_trace(mVcdFile, tmp_33_5_fu_1259_p2, "tmp_33_5_fu_1259_p2");
    sc_trace(mVcdFile, tmp_33_5_reg_1907, "tmp_33_5_reg_1907");
    sc_trace(mVcdFile, tmp_33_6_fu_1268_p2, "tmp_33_6_fu_1268_p2");
    sc_trace(mVcdFile, tmp_33_6_reg_1912, "tmp_33_6_reg_1912");
    sc_trace(mVcdFile, tmp_33_7_fu_1277_p2, "tmp_33_7_fu_1277_p2");
    sc_trace(mVcdFile, tmp_33_7_reg_1917, "tmp_33_7_reg_1917");
    sc_trace(mVcdFile, tmp_33_8_fu_1286_p2, "tmp_33_8_fu_1286_p2");
    sc_trace(mVcdFile, tmp_33_8_reg_1922, "tmp_33_8_reg_1922");
    sc_trace(mVcdFile, tmp_33_9_fu_1295_p2, "tmp_33_9_fu_1295_p2");
    sc_trace(mVcdFile, tmp_33_9_reg_1927, "tmp_33_9_reg_1927");
    sc_trace(mVcdFile, tmp_33_s_fu_1304_p2, "tmp_33_s_fu_1304_p2");
    sc_trace(mVcdFile, tmp_33_s_reg_1932, "tmp_33_s_reg_1932");
    sc_trace(mVcdFile, tmp_33_10_fu_1313_p2, "tmp_33_10_fu_1313_p2");
    sc_trace(mVcdFile, tmp_33_10_reg_1937, "tmp_33_10_reg_1937");
    sc_trace(mVcdFile, tmp_33_11_fu_1322_p2, "tmp_33_11_fu_1322_p2");
    sc_trace(mVcdFile, tmp_33_11_reg_1942, "tmp_33_11_reg_1942");
    sc_trace(mVcdFile, tmp_33_12_fu_1331_p2, "tmp_33_12_fu_1331_p2");
    sc_trace(mVcdFile, tmp_33_12_reg_1947, "tmp_33_12_reg_1947");
    sc_trace(mVcdFile, tmp_33_13_fu_1340_p2, "tmp_33_13_fu_1340_p2");
    sc_trace(mVcdFile, tmp_33_13_reg_1952, "tmp_33_13_reg_1952");
    sc_trace(mVcdFile, tmp_33_14_fu_1349_p2, "tmp_33_14_fu_1349_p2");
    sc_trace(mVcdFile, tmp_33_14_reg_1957, "tmp_33_14_reg_1957");
    sc_trace(mVcdFile, tmp_6_fu_1359_p2, "tmp_6_fu_1359_p2");
    sc_trace(mVcdFile, tmp_6_reg_1962, "tmp_6_reg_1962");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, exitcond5_fu_1364_p2, "exitcond5_fu_1364_p2");
    sc_trace(mVcdFile, i_5_fu_1370_p2, "i_5_fu_1370_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, tmp_last_V_fu_1382_p2, "tmp_last_V_fu_1382_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_1976, "tmp_last_V_reg_1976");
    sc_trace(mVcdFile, tmp_last_V_reg_1976_pp2_iter1_reg, "tmp_last_V_reg_1976_pp2_iter1_reg");
    sc_trace(mVcdFile, tmp_5_fu_1407_p3, "tmp_5_fu_1407_p3");
    sc_trace(mVcdFile, tmp_5_reg_2061, "tmp_5_reg_2061");
    sc_trace(mVcdFile, tmp_5_reg_2061_pp2_iter1_reg, "tmp_5_reg_2061_pp2_iter1_reg");
    sc_trace(mVcdFile, tmp_data_V_1_fu_1625_p3, "tmp_data_V_1_fu_1625_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state8, "ap_condition_pp1_exit_iter0_state8");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter4, "ap_enable_reg_pp1_iter4");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state14, "ap_condition_pp2_exit_iter0_state14");
    sc_trace(mVcdFile, sum_pix_ch0_0_address0, "sum_pix_ch0_0_address0");
    sc_trace(mVcdFile, sum_pix_ch0_0_ce0, "sum_pix_ch0_0_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_0_we0, "sum_pix_ch0_0_we0");
    sc_trace(mVcdFile, sum_pix_ch0_0_address1, "sum_pix_ch0_0_address1");
    sc_trace(mVcdFile, sum_pix_ch0_0_ce1, "sum_pix_ch0_0_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_0_we1, "sum_pix_ch0_0_we1");
    sc_trace(mVcdFile, sum_pix_ch0_1_address0, "sum_pix_ch0_1_address0");
    sc_trace(mVcdFile, sum_pix_ch0_1_ce0, "sum_pix_ch0_1_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_1_we0, "sum_pix_ch0_1_we0");
    sc_trace(mVcdFile, sum_pix_ch0_1_address1, "sum_pix_ch0_1_address1");
    sc_trace(mVcdFile, sum_pix_ch0_1_ce1, "sum_pix_ch0_1_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_1_we1, "sum_pix_ch0_1_we1");
    sc_trace(mVcdFile, sum_pix_ch0_2_address0, "sum_pix_ch0_2_address0");
    sc_trace(mVcdFile, sum_pix_ch0_2_ce0, "sum_pix_ch0_2_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_2_we0, "sum_pix_ch0_2_we0");
    sc_trace(mVcdFile, sum_pix_ch0_2_address1, "sum_pix_ch0_2_address1");
    sc_trace(mVcdFile, sum_pix_ch0_2_ce1, "sum_pix_ch0_2_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_2_we1, "sum_pix_ch0_2_we1");
    sc_trace(mVcdFile, sum_pix_ch0_3_address0, "sum_pix_ch0_3_address0");
    sc_trace(mVcdFile, sum_pix_ch0_3_ce0, "sum_pix_ch0_3_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_3_we0, "sum_pix_ch0_3_we0");
    sc_trace(mVcdFile, sum_pix_ch0_3_address1, "sum_pix_ch0_3_address1");
    sc_trace(mVcdFile, sum_pix_ch0_3_ce1, "sum_pix_ch0_3_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_3_we1, "sum_pix_ch0_3_we1");
    sc_trace(mVcdFile, sum_pix_ch0_4_address0, "sum_pix_ch0_4_address0");
    sc_trace(mVcdFile, sum_pix_ch0_4_ce0, "sum_pix_ch0_4_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_4_we0, "sum_pix_ch0_4_we0");
    sc_trace(mVcdFile, sum_pix_ch0_4_address1, "sum_pix_ch0_4_address1");
    sc_trace(mVcdFile, sum_pix_ch0_4_ce1, "sum_pix_ch0_4_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_4_we1, "sum_pix_ch0_4_we1");
    sc_trace(mVcdFile, sum_pix_ch0_5_address0, "sum_pix_ch0_5_address0");
    sc_trace(mVcdFile, sum_pix_ch0_5_ce0, "sum_pix_ch0_5_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_5_we0, "sum_pix_ch0_5_we0");
    sc_trace(mVcdFile, sum_pix_ch0_5_address1, "sum_pix_ch0_5_address1");
    sc_trace(mVcdFile, sum_pix_ch0_5_ce1, "sum_pix_ch0_5_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_5_we1, "sum_pix_ch0_5_we1");
    sc_trace(mVcdFile, sum_pix_ch0_6_address0, "sum_pix_ch0_6_address0");
    sc_trace(mVcdFile, sum_pix_ch0_6_ce0, "sum_pix_ch0_6_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_6_we0, "sum_pix_ch0_6_we0");
    sc_trace(mVcdFile, sum_pix_ch0_6_address1, "sum_pix_ch0_6_address1");
    sc_trace(mVcdFile, sum_pix_ch0_6_ce1, "sum_pix_ch0_6_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_6_we1, "sum_pix_ch0_6_we1");
    sc_trace(mVcdFile, sum_pix_ch0_7_address0, "sum_pix_ch0_7_address0");
    sc_trace(mVcdFile, sum_pix_ch0_7_ce0, "sum_pix_ch0_7_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_7_we0, "sum_pix_ch0_7_we0");
    sc_trace(mVcdFile, sum_pix_ch0_7_address1, "sum_pix_ch0_7_address1");
    sc_trace(mVcdFile, sum_pix_ch0_7_ce1, "sum_pix_ch0_7_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_7_we1, "sum_pix_ch0_7_we1");
    sc_trace(mVcdFile, sum_pix_ch0_8_address0, "sum_pix_ch0_8_address0");
    sc_trace(mVcdFile, sum_pix_ch0_8_ce0, "sum_pix_ch0_8_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_8_we0, "sum_pix_ch0_8_we0");
    sc_trace(mVcdFile, sum_pix_ch0_8_address1, "sum_pix_ch0_8_address1");
    sc_trace(mVcdFile, sum_pix_ch0_8_ce1, "sum_pix_ch0_8_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_8_we1, "sum_pix_ch0_8_we1");
    sc_trace(mVcdFile, sum_pix_ch0_9_address0, "sum_pix_ch0_9_address0");
    sc_trace(mVcdFile, sum_pix_ch0_9_ce0, "sum_pix_ch0_9_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_9_we0, "sum_pix_ch0_9_we0");
    sc_trace(mVcdFile, sum_pix_ch0_9_address1, "sum_pix_ch0_9_address1");
    sc_trace(mVcdFile, sum_pix_ch0_9_ce1, "sum_pix_ch0_9_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_9_we1, "sum_pix_ch0_9_we1");
    sc_trace(mVcdFile, sum_pix_ch0_10_address0, "sum_pix_ch0_10_address0");
    sc_trace(mVcdFile, sum_pix_ch0_10_ce0, "sum_pix_ch0_10_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_10_we0, "sum_pix_ch0_10_we0");
    sc_trace(mVcdFile, sum_pix_ch0_10_address1, "sum_pix_ch0_10_address1");
    sc_trace(mVcdFile, sum_pix_ch0_10_ce1, "sum_pix_ch0_10_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_10_we1, "sum_pix_ch0_10_we1");
    sc_trace(mVcdFile, sum_pix_ch0_11_address0, "sum_pix_ch0_11_address0");
    sc_trace(mVcdFile, sum_pix_ch0_11_ce0, "sum_pix_ch0_11_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_11_we0, "sum_pix_ch0_11_we0");
    sc_trace(mVcdFile, sum_pix_ch0_11_address1, "sum_pix_ch0_11_address1");
    sc_trace(mVcdFile, sum_pix_ch0_11_ce1, "sum_pix_ch0_11_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_11_we1, "sum_pix_ch0_11_we1");
    sc_trace(mVcdFile, sum_pix_ch0_12_address0, "sum_pix_ch0_12_address0");
    sc_trace(mVcdFile, sum_pix_ch0_12_ce0, "sum_pix_ch0_12_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_12_we0, "sum_pix_ch0_12_we0");
    sc_trace(mVcdFile, sum_pix_ch0_12_address1, "sum_pix_ch0_12_address1");
    sc_trace(mVcdFile, sum_pix_ch0_12_ce1, "sum_pix_ch0_12_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_12_we1, "sum_pix_ch0_12_we1");
    sc_trace(mVcdFile, sum_pix_ch0_13_address0, "sum_pix_ch0_13_address0");
    sc_trace(mVcdFile, sum_pix_ch0_13_ce0, "sum_pix_ch0_13_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_13_we0, "sum_pix_ch0_13_we0");
    sc_trace(mVcdFile, sum_pix_ch0_13_address1, "sum_pix_ch0_13_address1");
    sc_trace(mVcdFile, sum_pix_ch0_13_ce1, "sum_pix_ch0_13_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_13_we1, "sum_pix_ch0_13_we1");
    sc_trace(mVcdFile, sum_pix_ch0_14_address0, "sum_pix_ch0_14_address0");
    sc_trace(mVcdFile, sum_pix_ch0_14_ce0, "sum_pix_ch0_14_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_14_we0, "sum_pix_ch0_14_we0");
    sc_trace(mVcdFile, sum_pix_ch0_14_address1, "sum_pix_ch0_14_address1");
    sc_trace(mVcdFile, sum_pix_ch0_14_ce1, "sum_pix_ch0_14_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_14_we1, "sum_pix_ch0_14_we1");
    sc_trace(mVcdFile, sum_pix_ch0_15_address0, "sum_pix_ch0_15_address0");
    sc_trace(mVcdFile, sum_pix_ch0_15_ce0, "sum_pix_ch0_15_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_15_we0, "sum_pix_ch0_15_we0");
    sc_trace(mVcdFile, sum_pix_ch0_15_address1, "sum_pix_ch0_15_address1");
    sc_trace(mVcdFile, sum_pix_ch0_15_ce1, "sum_pix_ch0_15_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_15_we1, "sum_pix_ch0_15_we1");
    sc_trace(mVcdFile, k_tlast_cnt_reg_806, "k_tlast_cnt_reg_806");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, i_reg_818, "i_reg_818");
    sc_trace(mVcdFile, exitcond2_fu_971_p2, "exitcond2_fu_971_p2");
    sc_trace(mVcdFile, tmp_4_fu_983_p1, "tmp_4_fu_983_p1");
    sc_trace(mVcdFile, tmp_7_fu_1034_p1, "tmp_7_fu_1034_p1");
    sc_trace(mVcdFile, tmp_9_fu_1387_p1, "tmp_9_fu_1387_p1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_01001, "ap_block_pp2_stage0_01001");
    sc_trace(mVcdFile, tmp_1_cast_fu_951_p1, "tmp_1_cast_fu_951_p1");
    sc_trace(mVcdFile, exitcond_fu_1014_p2, "exitcond_fu_1014_p2");
    sc_trace(mVcdFile, tmp_11_fu_1211_p1, "tmp_11_fu_1211_p1");
    sc_trace(mVcdFile, tmp_32_1_fu_1220_p1, "tmp_32_1_fu_1220_p1");
    sc_trace(mVcdFile, tmp_32_2_fu_1229_p1, "tmp_32_2_fu_1229_p1");
    sc_trace(mVcdFile, tmp_32_3_fu_1238_p1, "tmp_32_3_fu_1238_p1");
    sc_trace(mVcdFile, tmp_32_4_fu_1247_p1, "tmp_32_4_fu_1247_p1");
    sc_trace(mVcdFile, tmp_32_5_fu_1256_p1, "tmp_32_5_fu_1256_p1");
    sc_trace(mVcdFile, tmp_32_6_fu_1265_p1, "tmp_32_6_fu_1265_p1");
    sc_trace(mVcdFile, tmp_32_7_fu_1274_p1, "tmp_32_7_fu_1274_p1");
    sc_trace(mVcdFile, tmp_32_8_fu_1283_p1, "tmp_32_8_fu_1283_p1");
    sc_trace(mVcdFile, tmp_32_9_fu_1292_p1, "tmp_32_9_fu_1292_p1");
    sc_trace(mVcdFile, tmp_32_s_fu_1301_p1, "tmp_32_s_fu_1301_p1");
    sc_trace(mVcdFile, tmp_32_10_fu_1310_p1, "tmp_32_10_fu_1310_p1");
    sc_trace(mVcdFile, tmp_32_11_fu_1319_p1, "tmp_32_11_fu_1319_p1");
    sc_trace(mVcdFile, tmp_32_12_fu_1328_p1, "tmp_32_12_fu_1328_p1");
    sc_trace(mVcdFile, tmp_32_13_fu_1337_p1, "tmp_32_13_fu_1337_p1");
    sc_trace(mVcdFile, tmp_32_14_fu_1346_p1, "tmp_32_14_fu_1346_p1");
    sc_trace(mVcdFile, tmp_5_cast_fu_1355_p1, "tmp_5_cast_fu_1355_p1");
    sc_trace(mVcdFile, tmp_s_fu_1376_p2, "tmp_s_fu_1376_p2");
    sc_trace(mVcdFile, val_assign_1_s_fu_1454_p2, "val_assign_1_s_fu_1454_p2");
    sc_trace(mVcdFile, val_assign_1_1_fu_1463_p2, "val_assign_1_1_fu_1463_p2");
    sc_trace(mVcdFile, val_assign_1_2_fu_1472_p2, "val_assign_1_2_fu_1472_p2");
    sc_trace(mVcdFile, val_assign_1_3_fu_1481_p2, "val_assign_1_3_fu_1481_p2");
    sc_trace(mVcdFile, val_assign_1_4_fu_1490_p2, "val_assign_1_4_fu_1490_p2");
    sc_trace(mVcdFile, val_assign_1_5_fu_1499_p2, "val_assign_1_5_fu_1499_p2");
    sc_trace(mVcdFile, val_assign_1_6_fu_1508_p2, "val_assign_1_6_fu_1508_p2");
    sc_trace(mVcdFile, val_assign_1_7_fu_1517_p2, "val_assign_1_7_fu_1517_p2");
    sc_trace(mVcdFile, val_assign_1_8_fu_1526_p2, "val_assign_1_8_fu_1526_p2");
    sc_trace(mVcdFile, val_assign_1_9_fu_1535_p2, "val_assign_1_9_fu_1535_p2");
    sc_trace(mVcdFile, val_assign_1_10_fu_1544_p2, "val_assign_1_10_fu_1544_p2");
    sc_trace(mVcdFile, val_assign_1_11_fu_1553_p2, "val_assign_1_11_fu_1553_p2");
    sc_trace(mVcdFile, val_assign_1_12_fu_1562_p2, "val_assign_1_12_fu_1562_p2");
    sc_trace(mVcdFile, val_assign_1_13_fu_1571_p2, "val_assign_1_13_fu_1571_p2");
    sc_trace(mVcdFile, val_assign_1_14_fu_1580_p2, "val_assign_1_14_fu_1580_p2");
    sc_trace(mVcdFile, val_assign_1_13_cast_fu_1576_p1, "val_assign_1_13_cast_fu_1576_p1");
    sc_trace(mVcdFile, val_assign_1_12_cast_fu_1567_p1, "val_assign_1_12_cast_fu_1567_p1");
    sc_trace(mVcdFile, val_assign_1_11_cast_fu_1558_p1, "val_assign_1_11_cast_fu_1558_p1");
    sc_trace(mVcdFile, val_assign_1_10_cast_fu_1549_p1, "val_assign_1_10_cast_fu_1549_p1");
    sc_trace(mVcdFile, val_assign_1_9_cast_fu_1540_p1, "val_assign_1_9_cast_fu_1540_p1");
    sc_trace(mVcdFile, val_assign_1_8_cast_fu_1531_p1, "val_assign_1_8_cast_fu_1531_p1");
    sc_trace(mVcdFile, val_assign_1_7_cast_fu_1522_p1, "val_assign_1_7_cast_fu_1522_p1");
    sc_trace(mVcdFile, val_assign_1_6_cast_fu_1513_p1, "val_assign_1_6_cast_fu_1513_p1");
    sc_trace(mVcdFile, val_assign_1_5_cast_fu_1504_p1, "val_assign_1_5_cast_fu_1504_p1");
    sc_trace(mVcdFile, val_assign_1_4_cast_fu_1495_p1, "val_assign_1_4_cast_fu_1495_p1");
    sc_trace(mVcdFile, val_assign_1_3_cast_fu_1486_p1, "val_assign_1_3_cast_fu_1486_p1");
    sc_trace(mVcdFile, val_assign_1_2_cast_fu_1477_p1, "val_assign_1_2_cast_fu_1477_p1");
    sc_trace(mVcdFile, val_assign_1_1_cast_fu_1468_p1, "val_assign_1_1_cast_fu_1468_p1");
    sc_trace(mVcdFile, val_assign_1_cast_fu_1459_p1, "val_assign_1_cast_fu_1459_p1");
    sc_trace(mVcdFile, tmp_10_cast_fu_1451_p1, "tmp_10_cast_fu_1451_p1");
    sc_trace(mVcdFile, tmp_fu_1585_p17, "tmp_fu_1585_p17");
    sc_trace(mVcdFile, sum_pix_tot_data_V_s_fu_1415_p17, "sum_pix_tot_data_V_s_fu_1415_p17");
    sc_trace(mVcdFile, sum_pix_tot_data_V_1_fu_1621_p1, "sum_pix_tot_data_V_1_fu_1621_p1");
    sc_trace(mVcdFile, grp_fu_1633_p0, "grp_fu_1633_p0");
    sc_trace(mVcdFile, grp_fu_1633_p1, "grp_fu_1633_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, grp_fu_1633_p00, "grp_fu_1633_p00");
#endif

    }
    mHdltvinHandle.open("scurve_adder36.hdltvin.dat");
    mHdltvoutHandle.open("scurve_adder36.hdltvout.dat");
}

scurve_adder36::~scurve_adder36() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete scurve_adder36_CTRL_BUS_s_axi_U;
    delete sum_pix_ch0_0_U;
    delete sum_pix_ch0_1_U;
    delete sum_pix_ch0_2_U;
    delete sum_pix_ch0_3_U;
    delete sum_pix_ch0_4_U;
    delete sum_pix_ch0_5_U;
    delete sum_pix_ch0_6_U;
    delete sum_pix_ch0_7_U;
    delete sum_pix_ch0_8_U;
    delete sum_pix_ch0_9_U;
    delete sum_pix_ch0_10_U;
    delete sum_pix_ch0_11_U;
    delete sum_pix_ch0_12_U;
    delete sum_pix_ch0_13_U;
    delete sum_pix_ch0_14_U;
    delete sum_pix_ch0_15_U;
    delete scurve_adder36_murcU_U1;
}

void scurve_adder36::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void scurve_adder36::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void scurve_adder36::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        K_TLAST_read_reg_1639 = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            K_TLAST_read_reg_1639 = K_TLAST.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        N_ADDS_read_reg_1645 = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            N_ADDS_read_reg_1645 = N_ADDS.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state8.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state8.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state8.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter4 = ap_enable_reg_pp1_iter3.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp1_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state14.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state14.read())) {
                ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state14.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) {
            ap_enable_reg_pp2_iter2 = ap_enable_reg_pp2_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) {
            ap_enable_reg_pp2_iter3 = ap_enable_reg_pp2_iter2.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
            ap_enable_reg_pp2_iter3 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        bound_reg_1665 = ap_const_lv24_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            bound_reg_1665 = grp_fu_1633_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        exitcond5_reg_1967 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
            exitcond5_reg_1967 = exitcond5_fu_1364_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        exitcond5_reg_1967_pp2_iter1_reg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
            exitcond5_reg_1967_pp2_iter1_reg = exitcond5_reg_1967.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        exitcond5_reg_1967_pp2_iter2_reg = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)) {
            exitcond5_reg_1967_pp2_iter2_reg = exitcond5_reg_1967_pp2_iter1_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        exitcond_flatten_reg_1687 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            exitcond_flatten_reg_1687 = exitcond_flatten_fu_1003_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        exitcond_flatten_reg_1687_pp1_iter1_reg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            exitcond_flatten_reg_1687_pp1_iter1_reg = exitcond_flatten_reg_1687.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        exitcond_flatten_reg_1687_pp1_iter2_reg = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            exitcond_flatten_reg_1687_pp1_iter2_reg = exitcond_flatten_reg_1687_pp1_iter1_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        exitcond_flatten_reg_1687_pp1_iter3_reg = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            exitcond_flatten_reg_1687_pp1_iter3_reg = exitcond_flatten_reg_1687_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        i_1_mid2_reg_1696 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_1003_p2.read()))) {
            i_1_mid2_reg_1696 = i_1_mid2_fu_1020_p3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        i_1_reg_840 = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            i_1_reg_840 = ap_const_lv8_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_1003_p2.read()))) {
            i_1_reg_840 = i_4_fu_1028_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        i_2_reg_851 = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
            i_2_reg_851 = ap_const_lv8_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_1364_p2.read()))) {
            i_2_reg_851 = i_5_fu_1370_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        i_reg_818 = ap_const_lv8_0;
    } else {
        if ((!(esl_seteq<1,1,1>(out_stream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && 
             esl_seteq<1,1,1>(exitcond1_fu_960_p2.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
            i_reg_818 = ap_const_lv8_0;
        } else if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
            i_reg_818 = i_3_fu_977_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream0_V_data_V_0_payload_A = ap_const_lv128_lc_1;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_load_A.read())) {
            in_stream0_V_data_V_0_payload_A = in_stream0_TDATA.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream0_V_data_V_0_payload_B = ap_const_lv128_lc_1;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_load_B.read())) {
            in_stream0_V_data_V_0_payload_B = in_stream0_TDATA.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream0_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_vld_out.read()))) {
            in_stream0_V_data_V_0_sel_rd =  (sc_logic) (~in_stream0_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream0_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_ack_in.read()))) {
            in_stream0_V_data_V_0_sel_wr =  (sc_logic) (~in_stream0_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream0_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            in_stream0_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            in_stream0_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_ack_out.read()))))) {
            in_stream0_V_data_V_0_state = ap_const_lv2_3;
        } else {
            in_stream0_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream0_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_stream0_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_stream0_V_dest_V_0_state.read())))) {
            in_stream0_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_stream0_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_stream0_V_dest_V_0_state.read())))) {
            in_stream0_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_stream0_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_stream0_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_stream0_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_dest_V_0_ack_out.read()))))) {
            in_stream0_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            in_stream0_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        indvar_flatten_reg_829 = ap_const_lv24_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            indvar_flatten_reg_829 = ap_const_lv24_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_1003_p2.read()))) {
            indvar_flatten_reg_829 = indvar_flatten_next_fu_1008_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        k_tlast_cnt_1_reg_1674 = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             !(esl_seteq<1,1,1>(out_stream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0)))) {
            k_tlast_cnt_1_reg_1674 = k_tlast_cnt_1_fu_965_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        k_tlast_cnt_reg_806 = ap_const_lv16_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
            k_tlast_cnt_reg_806 = k_tlast_cnt_1_reg_1674.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            k_tlast_cnt_reg_806 = ap_const_lv16_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_V_1_payload_A = ap_const_lv512_lc_1;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_load_A.read())) {
            out_stream_V_data_V_1_payload_A = tmp_data_V_1_fu_1625_p3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_V_1_payload_B = ap_const_lv512_lc_1;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_load_B.read())) {
            out_stream_V_data_V_1_payload_B = tmp_data_V_1_fu_1625_p3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_out.read()))) {
            out_stream_V_data_V_1_sel_rd =  (sc_logic) (~out_stream_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_in.read()))) {
            out_stream_V_data_V_1_sel_wr =  (sc_logic) (~out_stream_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_data_V_1_state.read())))) {
            out_stream_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_V_1_state.read())))) {
            out_stream_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_out.read()))))) {
            out_stream_V_data_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_vld_out.read()))) {
            out_stream_V_dest_V_1_sel_rd =  (sc_logic) (~out_stream_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_dest_V_1_state.read())))) {
            out_stream_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_dest_V_1_state.read())))) {
            out_stream_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_ack_out.read()))))) {
            out_stream_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_vld_out.read()))) {
            out_stream_V_id_V_1_sel_rd =  (sc_logic) (~out_stream_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_id_V_1_state.read())))) {
            out_stream_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_id_V_1_state.read())))) {
            out_stream_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_ack_out.read()))))) {
            out_stream_V_id_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_vld_out.read()))) {
            out_stream_V_keep_V_1_sel_rd =  (sc_logic) (~out_stream_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_keep_V_1_state.read())))) {
            out_stream_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_keep_V_1_state.read())))) {
            out_stream_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_ack_out.read()))))) {
            out_stream_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_payload_A = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_load_A.read())) {
            out_stream_V_last_V_1_payload_A = tmp_last_V_reg_1976_pp2_iter1_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_payload_B = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_load_B.read())) {
            out_stream_V_last_V_1_payload_B = tmp_last_V_reg_1976_pp2_iter1_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_out.read()))) {
            out_stream_V_last_V_1_sel_rd =  (sc_logic) (~out_stream_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_in.read()))) {
            out_stream_V_last_V_1_sel_wr =  (sc_logic) (~out_stream_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_last_V_1_state.read())))) {
            out_stream_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read())))) {
            out_stream_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()))))) {
            out_stream_V_last_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_vld_out.read()))) {
            out_stream_V_strb_V_1_sel_rd =  (sc_logic) (~out_stream_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_strb_V_1_state.read())))) {
            out_stream_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_strb_V_1_state.read())))) {
            out_stream_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_ack_out.read()))))) {
            out_stream_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_vld_out.read()))) {
            out_stream_V_user_V_1_sel_rd =  (sc_logic) (~out_stream_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_user_V_1_state.read())))) {
            out_stream_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_user_V_1_state.read())))) {
            out_stream_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_ack_out.read()))))) {
            out_stream_V_user_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_10_reg_1827 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_10_reg_1827 = in_stream0_V_data_V_0_data_out.read().range(95, 88);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_10_reg_1827_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_10_reg_1827_pp1_iter2_reg = phitmp_10_reg_1827.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_11_reg_1838 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_11_reg_1838 = in_stream0_V_data_V_0_data_out.read().range(103, 96);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_11_reg_1838_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_11_reg_1838_pp1_iter2_reg = phitmp_11_reg_1838.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_12_reg_1849 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_12_reg_1849 = in_stream0_V_data_V_0_data_out.read().range(111, 104);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_12_reg_1849_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_12_reg_1849_pp1_iter2_reg = phitmp_12_reg_1849.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_13_reg_1860 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_13_reg_1860 = in_stream0_V_data_V_0_data_out.read().range(119, 112);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_13_reg_1860_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_13_reg_1860_pp1_iter2_reg = phitmp_13_reg_1860.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_14_reg_1871 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_14_reg_1871 = in_stream0_V_data_V_0_data_out.read().range(127, 120);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_14_reg_1871_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_14_reg_1871_pp1_iter2_reg = phitmp_14_reg_1871.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_1_reg_1717 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_1_reg_1717 = in_stream0_V_data_V_0_data_out.read().range(15, 8);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_1_reg_1717_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_1_reg_1717_pp1_iter2_reg = phitmp_1_reg_1717.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_2_reg_1728 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_2_reg_1728 = in_stream0_V_data_V_0_data_out.read().range(23, 16);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_2_reg_1728_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_2_reg_1728_pp1_iter2_reg = phitmp_2_reg_1728.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_3_reg_1739 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_3_reg_1739 = in_stream0_V_data_V_0_data_out.read().range(31, 24);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_3_reg_1739_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_3_reg_1739_pp1_iter2_reg = phitmp_3_reg_1739.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_4_reg_1750 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_4_reg_1750 = in_stream0_V_data_V_0_data_out.read().range(39, 32);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_4_reg_1750_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_4_reg_1750_pp1_iter2_reg = phitmp_4_reg_1750.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_5_reg_1761 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_5_reg_1761 = in_stream0_V_data_V_0_data_out.read().range(47, 40);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_5_reg_1761_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_5_reg_1761_pp1_iter2_reg = phitmp_5_reg_1761.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_6_reg_1772 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_6_reg_1772 = in_stream0_V_data_V_0_data_out.read().range(55, 48);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_6_reg_1772_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_6_reg_1772_pp1_iter2_reg = phitmp_6_reg_1772.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_7_reg_1783 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_7_reg_1783 = in_stream0_V_data_V_0_data_out.read().range(63, 56);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_7_reg_1783_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_7_reg_1783_pp1_iter2_reg = phitmp_7_reg_1783.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_8_reg_1794 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_8_reg_1794 = in_stream0_V_data_V_0_data_out.read().range(71, 64);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_8_reg_1794_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_8_reg_1794_pp1_iter2_reg = phitmp_8_reg_1794.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_9_reg_1805 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_9_reg_1805 = in_stream0_V_data_V_0_data_out.read().range(79, 72);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_9_reg_1805_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_9_reg_1805_pp1_iter2_reg = phitmp_9_reg_1805.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_s_reg_1816 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            phitmp_s_reg_1816 = in_stream0_V_data_V_0_data_out.read().range(87, 80);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        phitmp_s_reg_1816_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            phitmp_s_reg_1816_pp1_iter2_reg = phitmp_s_reg_1816.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_862 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_862 = sum_pix_ch0_0_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_862 = sum_pix_ch0_0_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_867 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_867 = sum_pix_ch0_1_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_867 = sum_pix_ch0_1_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_872 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_872 = sum_pix_ch0_2_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_872 = sum_pix_ch0_2_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_877 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_877 = sum_pix_ch0_3_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_877 = sum_pix_ch0_3_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_882 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_882 = sum_pix_ch0_4_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_882 = sum_pix_ch0_4_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_887 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_887 = sum_pix_ch0_5_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_887 = sum_pix_ch0_5_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_892 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_892 = sum_pix_ch0_6_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_892 = sum_pix_ch0_6_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_897 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_897 = sum_pix_ch0_7_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_897 = sum_pix_ch0_7_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_902 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_902 = sum_pix_ch0_8_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_902 = sum_pix_ch0_8_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_907 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_907 = sum_pix_ch0_9_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_907 = sum_pix_ch0_9_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_912 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_912 = sum_pix_ch0_10_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_912 = sum_pix_ch0_10_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_917 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_917 = sum_pix_ch0_11_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_917 = sum_pix_ch0_11_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_922 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_922 = sum_pix_ch0_12_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_922 = sum_pix_ch0_12_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_927 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_927 = sum_pix_ch0_13_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_927 = sum_pix_ch0_13_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_932 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_932 = sum_pix_ch0_14_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_932 = sum_pix_ch0_14_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        reg_937 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1650.read()))) {
            reg_937 = sum_pix_ch0_15_q1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter1_reg.read()))) {
            reg_937 = sum_pix_ch0_15_q0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_0_addr_1_reg_1711 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_0_addr_1_reg_1711 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_0_addr_1_reg_1711_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_0_addr_1_reg_1711_pp1_iter2_reg = sum_pix_ch0_0_addr_1_reg_1711.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_0_addr_1_reg_1711_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_0_addr_1_reg_1711_pp1_iter3_reg = sum_pix_ch0_0_addr_1_reg_1711_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_10_addr_1_reg_1821 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_10_addr_1_reg_1821 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_10_addr_1_reg_1821_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_10_addr_1_reg_1821_pp1_iter2_reg = sum_pix_ch0_10_addr_1_reg_1821.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_10_addr_1_reg_1821_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_10_addr_1_reg_1821_pp1_iter3_reg = sum_pix_ch0_10_addr_1_reg_1821_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_11_addr_1_reg_1832 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_11_addr_1_reg_1832 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_11_addr_1_reg_1832_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_11_addr_1_reg_1832_pp1_iter2_reg = sum_pix_ch0_11_addr_1_reg_1832.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_11_addr_1_reg_1832_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_11_addr_1_reg_1832_pp1_iter3_reg = sum_pix_ch0_11_addr_1_reg_1832_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_12_addr_1_reg_1843 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_12_addr_1_reg_1843 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_12_addr_1_reg_1843_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_12_addr_1_reg_1843_pp1_iter2_reg = sum_pix_ch0_12_addr_1_reg_1843.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_12_addr_1_reg_1843_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_12_addr_1_reg_1843_pp1_iter3_reg = sum_pix_ch0_12_addr_1_reg_1843_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_13_addr_1_reg_1854 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_13_addr_1_reg_1854 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_13_addr_1_reg_1854_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_13_addr_1_reg_1854_pp1_iter2_reg = sum_pix_ch0_13_addr_1_reg_1854.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_13_addr_1_reg_1854_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_13_addr_1_reg_1854_pp1_iter3_reg = sum_pix_ch0_13_addr_1_reg_1854_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_14_addr_1_reg_1865 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_14_addr_1_reg_1865 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_14_addr_1_reg_1865_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_14_addr_1_reg_1865_pp1_iter2_reg = sum_pix_ch0_14_addr_1_reg_1865.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_14_addr_1_reg_1865_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_14_addr_1_reg_1865_pp1_iter3_reg = sum_pix_ch0_14_addr_1_reg_1865_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_15_addr_1_reg_1876 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_15_addr_1_reg_1876 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_15_addr_1_reg_1876_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_15_addr_1_reg_1876_pp1_iter2_reg = sum_pix_ch0_15_addr_1_reg_1876.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_15_addr_1_reg_1876_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_15_addr_1_reg_1876_pp1_iter3_reg = sum_pix_ch0_15_addr_1_reg_1876_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_1_addr_1_reg_1722 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_1_addr_1_reg_1722 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_1_addr_1_reg_1722_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_1_addr_1_reg_1722_pp1_iter2_reg = sum_pix_ch0_1_addr_1_reg_1722.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_1_addr_1_reg_1722_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_1_addr_1_reg_1722_pp1_iter3_reg = sum_pix_ch0_1_addr_1_reg_1722_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_2_addr_1_reg_1733 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_2_addr_1_reg_1733 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_2_addr_1_reg_1733_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_2_addr_1_reg_1733_pp1_iter2_reg = sum_pix_ch0_2_addr_1_reg_1733.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_2_addr_1_reg_1733_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_2_addr_1_reg_1733_pp1_iter3_reg = sum_pix_ch0_2_addr_1_reg_1733_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_3_addr_1_reg_1744 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_3_addr_1_reg_1744 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_3_addr_1_reg_1744_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_3_addr_1_reg_1744_pp1_iter2_reg = sum_pix_ch0_3_addr_1_reg_1744.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_3_addr_1_reg_1744_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_3_addr_1_reg_1744_pp1_iter3_reg = sum_pix_ch0_3_addr_1_reg_1744_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_4_addr_1_reg_1755 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_4_addr_1_reg_1755 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_4_addr_1_reg_1755_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_4_addr_1_reg_1755_pp1_iter2_reg = sum_pix_ch0_4_addr_1_reg_1755.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_4_addr_1_reg_1755_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_4_addr_1_reg_1755_pp1_iter3_reg = sum_pix_ch0_4_addr_1_reg_1755_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_5_addr_1_reg_1766 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_5_addr_1_reg_1766 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_5_addr_1_reg_1766_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_5_addr_1_reg_1766_pp1_iter2_reg = sum_pix_ch0_5_addr_1_reg_1766.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_5_addr_1_reg_1766_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_5_addr_1_reg_1766_pp1_iter3_reg = sum_pix_ch0_5_addr_1_reg_1766_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_6_addr_1_reg_1777 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_6_addr_1_reg_1777 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_6_addr_1_reg_1777_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_6_addr_1_reg_1777_pp1_iter2_reg = sum_pix_ch0_6_addr_1_reg_1777.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_6_addr_1_reg_1777_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_6_addr_1_reg_1777_pp1_iter3_reg = sum_pix_ch0_6_addr_1_reg_1777_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_7_addr_1_reg_1788 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_7_addr_1_reg_1788 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_7_addr_1_reg_1788_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_7_addr_1_reg_1788_pp1_iter2_reg = sum_pix_ch0_7_addr_1_reg_1788.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_7_addr_1_reg_1788_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_7_addr_1_reg_1788_pp1_iter3_reg = sum_pix_ch0_7_addr_1_reg_1788_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_8_addr_1_reg_1799 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_8_addr_1_reg_1799 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_8_addr_1_reg_1799_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_8_addr_1_reg_1799_pp1_iter2_reg = sum_pix_ch0_8_addr_1_reg_1799.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_8_addr_1_reg_1799_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_8_addr_1_reg_1799_pp1_iter3_reg = sum_pix_ch0_8_addr_1_reg_1799_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_9_addr_1_reg_1810 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            sum_pix_ch0_9_addr_1_reg_1810 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_9_addr_1_reg_1810_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_9_addr_1_reg_1810_pp1_iter2_reg = sum_pix_ch0_9_addr_1_reg_1810.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sum_pix_ch0_9_addr_1_reg_1810_pp1_iter3_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            sum_pix_ch0_9_addr_1_reg_1810_pp1_iter3_reg = sum_pix_ch0_9_addr_1_reg_1810_pp1_iter2_reg.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_12_reg_1882 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_12_reg_1882 = tmp_12_fu_1214_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_13_reg_1706 = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
            tmp_13_reg_1706 = tmp_13_fu_1057_p1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_13_reg_1706_pp1_iter2_reg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
            tmp_13_reg_1706_pp1_iter2_reg = tmp_13_reg_1706.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_2_reg_1660 = ap_const_lv17_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            tmp_2_reg_1660 = tmp_2_fu_954_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_10_reg_1937 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_10_reg_1937 = tmp_33_10_fu_1313_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_11_reg_1942 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_11_reg_1942 = tmp_33_11_fu_1322_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_12_reg_1947 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_12_reg_1947 = tmp_33_12_fu_1331_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_13_reg_1952 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_13_reg_1952 = tmp_33_13_fu_1340_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_14_reg_1957 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_14_reg_1957 = tmp_33_14_fu_1349_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_1_reg_1887 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_1_reg_1887 = tmp_33_1_fu_1223_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_2_reg_1892 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_2_reg_1892 = tmp_33_2_fu_1232_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_3_reg_1897 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_3_reg_1897 = tmp_33_3_fu_1241_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_4_reg_1902 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_4_reg_1902 = tmp_33_4_fu_1250_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_5_reg_1907 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_5_reg_1907 = tmp_33_5_fu_1259_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_6_reg_1912 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_6_reg_1912 = tmp_33_6_fu_1268_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_7_reg_1917 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_7_reg_1917 = tmp_33_7_fu_1277_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_8_reg_1922 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_8_reg_1922 = tmp_33_8_fu_1286_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_9_reg_1927 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_9_reg_1927 = tmp_33_9_fu_1295_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_33_s_reg_1932 = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter2_reg.read()))) {
            tmp_33_s_reg_1932 = tmp_33_s_fu_1304_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_3_reg_1650 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            tmp_3_reg_1650 = tmp_3_fu_942_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_5_reg_2061 = ap_const_lv12_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_1364_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_1650.read()))) {
            tmp_5_reg_2061 = tmp_5_fu_1407_p3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_5_reg_2061_pp2_iter1_reg = ap_const_lv12_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
            tmp_5_reg_2061_pp2_iter1_reg = tmp_5_reg_2061.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_6_reg_1962 = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
            tmp_6_reg_1962 = tmp_6_fu_1359_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_last_V_reg_1976 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_1364_p2.read()))) {
            tmp_last_V_reg_1976 = tmp_last_V_fu_1382_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        tmp_last_V_reg_1976_pp2_iter1_reg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
            tmp_last_V_reg_1976_pp2_iter1_reg = tmp_last_V_reg_1976.read();
        }
    }
}

void scurve_adder36::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[7];
}

void scurve_adder36::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[9];
}

void scurve_adder36::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void scurve_adder36::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[8];
}

void scurve_adder36::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[10];
}

void scurve_adder36::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void scurve_adder36::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void scurve_adder36::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void scurve_adder36::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void scurve_adder36::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void scurve_adder36::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_vld_out.read()));
}

void scurve_adder36::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_vld_out.read()));
}

void scurve_adder36::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_pp2_stage0_01001() {
    ap_block_pp2_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state16_io.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp2_iter3.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state17_io.read())));
}

void scurve_adder36::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state16_io.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp2_iter3.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state17_io.read())));
}

void scurve_adder36::thread_ap_block_state10_pp1_stage0_iter2() {
    ap_block_state10_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state11_pp1_stage0_iter3() {
    ap_block_state11_pp1_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state12_pp1_stage0_iter4() {
    ap_block_state12_pp1_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state14_pp2_stage0_iter0() {
    ap_block_state14_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state15_pp2_stage0_iter1() {
    ap_block_state15_pp2_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state16_io() {
    ap_block_state16_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967_pp2_iter1_reg.read()) && esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0));
}

void scurve_adder36::thread_ap_block_state16_pp2_stage0_iter2() {
    ap_block_state16_pp2_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state17_io() {
    ap_block_state17_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967_pp2_iter2_reg.read()) && esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0));
}

void scurve_adder36::thread_ap_block_state17_pp2_stage0_iter3() {
    ap_block_state17_pp2_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(out_stream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0));
}

void scurve_adder36::thread_ap_block_state8_pp1_stage0_iter0() {
    ap_block_state8_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state9_pp1_stage0_iter1() {
    ap_block_state9_pp1_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_vld_out.read()));
}

void scurve_adder36::thread_ap_condition_pp1_exit_iter0_state8() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_1003_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state8 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state8 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_condition_pp2_exit_iter0_state14() {
    if (esl_seteq<1,1,1>(exitcond5_fu_1364_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp2_exit_iter0_state14 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state14 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_done() {
    if ((!(esl_seteq<1,1,1>(out_stream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond1_fu_960_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void scurve_adder36::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void scurve_adder36::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter4.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter3.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_ready() {
    if ((!(esl_seteq<1,1,1>(out_stream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(exitcond1_fu_960_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void scurve_adder36::thread_exitcond1_fu_960_p2() {
    exitcond1_fu_960_p2 = (!k_tlast_cnt_reg_806.read().is_01() || !K_TLAST_read_reg_1639.read().is_01())? sc_lv<1>(): sc_lv<1>(k_tlast_cnt_reg_806.read() == K_TLAST_read_reg_1639.read());
}

void scurve_adder36::thread_exitcond2_fu_971_p2() {
    exitcond2_fu_971_p2 = (!i_reg_818.read().is_01() || !ap_const_lv8_B4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_818.read() == ap_const_lv8_B4);
}

void scurve_adder36::thread_exitcond5_fu_1364_p2() {
    exitcond5_fu_1364_p2 = (!i_2_reg_851.read().is_01() || !ap_const_lv8_B4.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_851.read() == ap_const_lv8_B4);
}

void scurve_adder36::thread_exitcond_flatten_fu_1003_p2() {
    exitcond_flatten_fu_1003_p2 = (!indvar_flatten_reg_829.read().is_01() || !bound_reg_1665.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_829.read() == bound_reg_1665.read());
}

void scurve_adder36::thread_exitcond_fu_1014_p2() {
    exitcond_fu_1014_p2 = (!i_1_reg_840.read().is_01() || !ap_const_lv8_B4.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_840.read() == ap_const_lv8_B4);
}

void scurve_adder36::thread_grp_fu_1633_p0() {
    grp_fu_1633_p0 =  (sc_lv<16>) (grp_fu_1633_p00.read());
}

void scurve_adder36::thread_grp_fu_1633_p00() {
    grp_fu_1633_p00 = esl_zext<24,16>(N_ADDS_read_reg_1645.read());
}

void scurve_adder36::thread_grp_fu_1633_p1() {
    grp_fu_1633_p1 =  (sc_lv<9>) (ap_const_lv24_B4);
}

void scurve_adder36::thread_i_1_mid2_fu_1020_p3() {
    i_1_mid2_fu_1020_p3 = (!exitcond_fu_1014_p2.read()[0].is_01())? sc_lv<8>(): ((exitcond_fu_1014_p2.read()[0].to_bool())? ap_const_lv8_0: i_1_reg_840.read());
}

void scurve_adder36::thread_i_3_fu_977_p2() {
    i_3_fu_977_p2 = (!i_reg_818.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_818.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void scurve_adder36::thread_i_4_fu_1028_p2() {
    i_4_fu_1028_p2 = (!ap_const_lv8_1.is_01() || !i_1_mid2_fu_1020_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(i_1_mid2_fu_1020_p3.read()));
}

void scurve_adder36::thread_i_5_fu_1370_p2() {
    i_5_fu_1370_p2 = (!i_2_reg_851.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_2_reg_851.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void scurve_adder36::thread_in_stream0_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()))) {
        in_stream0_TDATA_blk_n = in_stream0_V_data_V_0_state.read()[0];
    } else {
        in_stream0_TDATA_blk_n = ap_const_logic_1;
    }
}

void scurve_adder36::thread_in_stream0_TREADY() {
    in_stream0_TREADY = in_stream0_V_dest_V_0_state.read()[1];
}

void scurve_adder36::thread_in_stream0_V_data_V_0_ack_in() {
    in_stream0_V_data_V_0_ack_in = in_stream0_V_data_V_0_state.read()[1];
}

void scurve_adder36::thread_in_stream0_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        in_stream0_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        in_stream0_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void scurve_adder36::thread_in_stream0_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_sel.read())) {
        in_stream0_V_data_V_0_data_out = in_stream0_V_data_V_0_payload_B.read();
    } else {
        in_stream0_V_data_V_0_data_out = in_stream0_V_data_V_0_payload_A.read();
    }
}

void scurve_adder36::thread_in_stream0_V_data_V_0_load_A() {
    in_stream0_V_data_V_0_load_A = (in_stream0_V_data_V_0_state_cmp_full.read() & ~in_stream0_V_data_V_0_sel_wr.read());
}

void scurve_adder36::thread_in_stream0_V_data_V_0_load_B() {
    in_stream0_V_data_V_0_load_B = (in_stream0_V_data_V_0_sel_wr.read() & in_stream0_V_data_V_0_state_cmp_full.read());
}

void scurve_adder36::thread_in_stream0_V_data_V_0_sel() {
    in_stream0_V_data_V_0_sel = in_stream0_V_data_V_0_sel_rd.read();
}

void scurve_adder36::thread_in_stream0_V_data_V_0_state_cmp_full() {
    in_stream0_V_data_V_0_state_cmp_full =  (sc_logic) ((!in_stream0_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_stream0_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void scurve_adder36::thread_in_stream0_V_data_V_0_vld_in() {
    in_stream0_V_data_V_0_vld_in = in_stream0_TVALID.read();
}

void scurve_adder36::thread_in_stream0_V_data_V_0_vld_out() {
    in_stream0_V_data_V_0_vld_out = in_stream0_V_data_V_0_state.read()[0];
}

void scurve_adder36::thread_in_stream0_V_dest_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        in_stream0_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        in_stream0_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void scurve_adder36::thread_in_stream0_V_dest_V_0_vld_in() {
    in_stream0_V_dest_V_0_vld_in = in_stream0_TVALID.read();
}

void scurve_adder36::thread_indvar_flatten_next_fu_1008_p2() {
    indvar_flatten_next_fu_1008_p2 = (!indvar_flatten_reg_829.read().is_01() || !ap_const_lv24_1.is_01())? sc_lv<24>(): (sc_biguint<24>(indvar_flatten_reg_829.read()) + sc_biguint<24>(ap_const_lv24_1));
}

void scurve_adder36::thread_k_tlast_cnt_1_fu_965_p2() {
    k_tlast_cnt_1_fu_965_p2 = (!k_tlast_cnt_reg_806.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(k_tlast_cnt_reg_806.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void scurve_adder36::thread_out_stream_TDATA() {
    out_stream_TDATA = out_stream_V_data_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967_pp2_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter3.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967_pp2_iter2_reg.read())))) {
        out_stream_TDATA_blk_n = out_stream_V_data_V_1_state.read()[1];
    } else {
        out_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void scurve_adder36::thread_out_stream_TDEST() {
    out_stream_TDEST = out_stream_V_dest_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TID() {
    out_stream_TID = out_stream_V_id_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TKEEP() {
    out_stream_TKEEP = out_stream_V_keep_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TLAST() {
    out_stream_TLAST = out_stream_V_last_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TSTRB() {
    out_stream_TSTRB = out_stream_V_strb_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TUSER() {
    out_stream_TUSER = out_stream_V_user_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TVALID() {
    out_stream_TVALID = out_stream_V_dest_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_data_V_1_ack_in() {
    out_stream_V_data_V_1_ack_in = out_stream_V_data_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_data_V_1_ack_out() {
    out_stream_V_data_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_sel.read())) {
        out_stream_V_data_V_1_data_out = out_stream_V_data_V_1_payload_B.read();
    } else {
        out_stream_V_data_V_1_data_out = out_stream_V_data_V_1_payload_A.read();
    }
}

void scurve_adder36::thread_out_stream_V_data_V_1_load_A() {
    out_stream_V_data_V_1_load_A = (out_stream_V_data_V_1_state_cmp_full.read() & ~out_stream_V_data_V_1_sel_wr.read());
}

void scurve_adder36::thread_out_stream_V_data_V_1_load_B() {
    out_stream_V_data_V_1_load_B = (out_stream_V_data_V_1_sel_wr.read() & out_stream_V_data_V_1_state_cmp_full.read());
}

void scurve_adder36::thread_out_stream_V_data_V_1_sel() {
    out_stream_V_data_V_1_sel = out_stream_V_data_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_data_V_1_state_cmp_full() {
    out_stream_V_data_V_1_state_cmp_full =  (sc_logic) ((!out_stream_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_stream_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void scurve_adder36::thread_out_stream_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_data_V_1_vld_out() {
    out_stream_V_data_V_1_vld_out = out_stream_V_data_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_dest_V_1_ack_in() {
    out_stream_V_dest_V_1_ack_in = out_stream_V_dest_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_dest_V_1_ack_out() {
    out_stream_V_dest_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_dest_V_1_data_out() {
    out_stream_V_dest_V_1_data_out = ap_const_lv6_0;
}

void scurve_adder36::thread_out_stream_V_dest_V_1_sel() {
    out_stream_V_dest_V_1_sel = out_stream_V_dest_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_dest_V_1_vld_out() {
    out_stream_V_dest_V_1_vld_out = out_stream_V_dest_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_id_V_1_ack_in() {
    out_stream_V_id_V_1_ack_in = out_stream_V_id_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_id_V_1_ack_out() {
    out_stream_V_id_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_id_V_1_data_out() {
    out_stream_V_id_V_1_data_out = ap_const_lv5_0;
}

void scurve_adder36::thread_out_stream_V_id_V_1_sel() {
    out_stream_V_id_V_1_sel = out_stream_V_id_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_id_V_1_vld_out() {
    out_stream_V_id_V_1_vld_out = out_stream_V_id_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_keep_V_1_ack_in() {
    out_stream_V_keep_V_1_ack_in = out_stream_V_keep_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_keep_V_1_ack_out() {
    out_stream_V_keep_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_keep_V_1_data_out() {
    out_stream_V_keep_V_1_data_out = ap_const_lv64_FFFFFFFFFFFFFFFF;
}

void scurve_adder36::thread_out_stream_V_keep_V_1_sel() {
    out_stream_V_keep_V_1_sel = out_stream_V_keep_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_keep_V_1_vld_out() {
    out_stream_V_keep_V_1_vld_out = out_stream_V_keep_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_last_V_1_ack_in() {
    out_stream_V_last_V_1_ack_in = out_stream_V_last_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_last_V_1_ack_out() {
    out_stream_V_last_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_sel.read())) {
        out_stream_V_last_V_1_data_out = out_stream_V_last_V_1_payload_B.read();
    } else {
        out_stream_V_last_V_1_data_out = out_stream_V_last_V_1_payload_A.read();
    }
}

void scurve_adder36::thread_out_stream_V_last_V_1_load_A() {
    out_stream_V_last_V_1_load_A = (out_stream_V_last_V_1_state_cmp_full.read() & ~out_stream_V_last_V_1_sel_wr.read());
}

void scurve_adder36::thread_out_stream_V_last_V_1_load_B() {
    out_stream_V_last_V_1_load_B = (out_stream_V_last_V_1_sel_wr.read() & out_stream_V_last_V_1_state_cmp_full.read());
}

void scurve_adder36::thread_out_stream_V_last_V_1_sel() {
    out_stream_V_last_V_1_sel = out_stream_V_last_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_last_V_1_state_cmp_full() {
    out_stream_V_last_V_1_state_cmp_full =  (sc_logic) ((!out_stream_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_stream_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void scurve_adder36::thread_out_stream_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_last_V_1_vld_out() {
    out_stream_V_last_V_1_vld_out = out_stream_V_last_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_strb_V_1_ack_in() {
    out_stream_V_strb_V_1_ack_in = out_stream_V_strb_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_strb_V_1_ack_out() {
    out_stream_V_strb_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_strb_V_1_data_out() {
    out_stream_V_strb_V_1_data_out = ap_const_lv64_FFFFFFFFFFFFFFFF;
}

void scurve_adder36::thread_out_stream_V_strb_V_1_sel() {
    out_stream_V_strb_V_1_sel = out_stream_V_strb_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_strb_V_1_vld_out() {
    out_stream_V_strb_V_1_vld_out = out_stream_V_strb_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_user_V_1_ack_in() {
    out_stream_V_user_V_1_ack_in = out_stream_V_user_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_user_V_1_ack_out() {
    out_stream_V_user_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_user_V_1_data_out() {
    out_stream_V_user_V_1_data_out = ap_const_lv8_0;
}

void scurve_adder36::thread_out_stream_V_user_V_1_sel() {
    out_stream_V_user_V_1_sel = out_stream_V_user_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1967_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_user_V_1_vld_out() {
    out_stream_V_user_V_1_vld_out = out_stream_V_user_V_1_state.read()[0];
}

void scurve_adder36::thread_sum_pix_ch0_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_0_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_0_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_0_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_0_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_0_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_0_address1 = sum_pix_ch0_0_addr_1_reg_1711_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_0_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_0_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_0_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_0_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_0_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_0_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_0_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_0_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_0_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_0_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_0_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_0_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_10_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_10_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_10_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_10_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_10_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_10_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_10_address1 = sum_pix_ch0_10_addr_1_reg_1821_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_10_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_10_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_10_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_10_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_10_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_10_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_10_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_10_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_10_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_10_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_10_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_10_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_10_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_11_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_11_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_11_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_11_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_11_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_11_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_11_address1 = sum_pix_ch0_11_addr_1_reg_1832_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_11_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_11_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_11_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_11_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_11_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_11_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_11_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_11_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_11_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_11_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_11_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_11_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_11_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_12_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_12_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_12_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_12_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_12_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_12_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_12_address1 = sum_pix_ch0_12_addr_1_reg_1843_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_12_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_12_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_12_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_12_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_12_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_12_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_12_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_12_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_12_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_12_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_12_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_12_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_12_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_13_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_13_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_13_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_13_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_13_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_13_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_13_address1 = sum_pix_ch0_13_addr_1_reg_1854_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_13_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_13_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_13_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_13_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_13_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_13_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_13_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_13_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_13_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_13_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_13_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_13_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_13_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_14_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_14_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_14_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_14_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_14_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_14_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_14_address1 = sum_pix_ch0_14_addr_1_reg_1865_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_14_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_14_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_14_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_14_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_14_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_14_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_14_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_14_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_14_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_14_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_14_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_14_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_14_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_15_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_15_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_15_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_15_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_15_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_15_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_15_address1 = sum_pix_ch0_15_addr_1_reg_1876_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_15_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_15_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_15_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_15_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_15_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_15_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_15_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_15_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_15_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_15_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_15_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_15_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_15_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_1_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_1_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_1_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_1_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_1_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_1_address1 = sum_pix_ch0_1_addr_1_reg_1722_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_1_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_1_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_1_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_1_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_1_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_1_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_1_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_1_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_1_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_1_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_1_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_1_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_2_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_2_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_2_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_2_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_2_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_2_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_2_address1 = sum_pix_ch0_2_addr_1_reg_1733_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_2_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_2_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_2_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_2_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_2_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_2_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_2_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_2_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_2_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_2_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_2_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_2_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_3_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_3_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_3_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_3_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_3_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_3_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_3_address1 = sum_pix_ch0_3_addr_1_reg_1744_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_3_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_3_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_3_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_3_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_3_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_3_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_3_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_3_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_3_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_3_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_3_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_3_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_4_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_4_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_4_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_4_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_4_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_4_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_4_address1 = sum_pix_ch0_4_addr_1_reg_1755_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_4_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_4_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_4_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_4_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_4_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_4_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_4_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_4_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_4_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_4_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_4_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_4_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_5_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_5_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_5_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_5_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_5_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_5_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_5_address1 = sum_pix_ch0_5_addr_1_reg_1766_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_5_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_5_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_5_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_5_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_5_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_5_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_5_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_5_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_5_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_5_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_5_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_5_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_6_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_6_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_6_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_6_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_6_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_6_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_6_address1 = sum_pix_ch0_6_addr_1_reg_1777_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_6_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_6_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_6_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_6_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_6_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_6_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_6_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_6_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_6_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_6_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_6_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_6_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_7_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_7_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_7_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_7_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_7_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_7_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_7_address1 = sum_pix_ch0_7_addr_1_reg_1788_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_7_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_7_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_7_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_7_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_7_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_7_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_7_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_7_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_7_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_7_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_7_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_7_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_8_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_8_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_8_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_8_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_8_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_8_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_8_address1 = sum_pix_ch0_8_addr_1_reg_1799_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_8_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_8_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_8_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_8_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_8_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_8_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_8_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_8_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_8_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_8_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_8_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_8_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_8_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_9_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_9_address0 =  (sc_lv<8>) (tmp_7_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_pix_ch0_9_address0 =  (sc_lv<8>) (tmp_4_fu_983_p1.read());
    } else {
        sum_pix_ch0_9_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_9_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_9_address1 =  (sc_lv<8>) (tmp_9_fu_1387_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_9_address1 = sum_pix_ch0_9_addr_1_reg_1810_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_9_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_9_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_9_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_9_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_9_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_9_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_9_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_9_we0() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sum_pix_ch0_9_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_9_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_9_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1687_pp1_iter3_reg.read()))) {
        sum_pix_ch0_9_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_9_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_tot_data_V_1_fu_1621_p1() {
    sum_pix_tot_data_V_1_fu_1621_p1 = esl_zext<512,492>(tmp_fu_1585_p17.read());
}

void scurve_adder36::thread_sum_pix_tot_data_V_s_fu_1415_p17() {
    sum_pix_tot_data_V_s_fu_1415_p17 = esl_concat<480,32>(esl_concat<448,32>(esl_concat<416,32>(esl_concat<384,32>(esl_concat<352,32>(esl_concat<320,32>(esl_concat<288,32>(esl_concat<256,32>(esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(reg_937.read(), reg_932.read()), reg_927.read()), reg_922.read()), reg_917.read()), reg_912.read()), reg_907.read()), reg_902.read()), reg_897.read()), reg_892.read()), reg_887.read()), reg_882.read()), reg_877.read()), reg_872.read()), reg_867.read()), reg_862.read());
}

void scurve_adder36::thread_tmp_10_cast_fu_1451_p1() {
    tmp_10_cast_fu_1451_p1 = esl_zext<32,12>(tmp_5_reg_2061_pp2_iter1_reg.read());
}

void scurve_adder36::thread_tmp_11_fu_1211_p1() {
    tmp_11_fu_1211_p1 = esl_zext<32,8>(tmp_13_reg_1706_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_12_fu_1214_p2() {
    tmp_12_fu_1214_p2 = (!reg_862.read().is_01() || !tmp_11_fu_1211_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_862.read()) + sc_biguint<32>(tmp_11_fu_1211_p1.read()));
}

void scurve_adder36::thread_tmp_13_fu_1057_p1() {
    tmp_13_fu_1057_p1 = in_stream0_V_data_V_0_data_out.read().range(8-1, 0);
}

void scurve_adder36::thread_tmp_1_cast_fu_951_p1() {
    tmp_1_cast_fu_951_p1 = esl_zext<17,16>(K_TLAST_read_reg_1639.read());
}

void scurve_adder36::thread_tmp_2_fu_954_p2() {
    tmp_2_fu_954_p2 = (!tmp_1_cast_fu_951_p1.read().is_01() || !ap_const_lv17_1FFFF.is_01())? sc_lv<17>(): (sc_biguint<17>(tmp_1_cast_fu_951_p1.read()) + sc_bigint<17>(ap_const_lv17_1FFFF));
}

void scurve_adder36::thread_tmp_32_10_fu_1310_p1() {
    tmp_32_10_fu_1310_p1 = esl_zext<32,8>(phitmp_10_reg_1827_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_11_fu_1319_p1() {
    tmp_32_11_fu_1319_p1 = esl_zext<32,8>(phitmp_11_reg_1838_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_12_fu_1328_p1() {
    tmp_32_12_fu_1328_p1 = esl_zext<32,8>(phitmp_12_reg_1849_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_13_fu_1337_p1() {
    tmp_32_13_fu_1337_p1 = esl_zext<32,8>(phitmp_13_reg_1860_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_14_fu_1346_p1() {
    tmp_32_14_fu_1346_p1 = esl_zext<32,8>(phitmp_14_reg_1871_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_1_fu_1220_p1() {
    tmp_32_1_fu_1220_p1 = esl_zext<32,8>(phitmp_1_reg_1717_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_2_fu_1229_p1() {
    tmp_32_2_fu_1229_p1 = esl_zext<32,8>(phitmp_2_reg_1728_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_3_fu_1238_p1() {
    tmp_32_3_fu_1238_p1 = esl_zext<32,8>(phitmp_3_reg_1739_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_4_fu_1247_p1() {
    tmp_32_4_fu_1247_p1 = esl_zext<32,8>(phitmp_4_reg_1750_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_5_fu_1256_p1() {
    tmp_32_5_fu_1256_p1 = esl_zext<32,8>(phitmp_5_reg_1761_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_6_fu_1265_p1() {
    tmp_32_6_fu_1265_p1 = esl_zext<32,8>(phitmp_6_reg_1772_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_7_fu_1274_p1() {
    tmp_32_7_fu_1274_p1 = esl_zext<32,8>(phitmp_7_reg_1783_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_8_fu_1283_p1() {
    tmp_32_8_fu_1283_p1 = esl_zext<32,8>(phitmp_8_reg_1794_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_9_fu_1292_p1() {
    tmp_32_9_fu_1292_p1 = esl_zext<32,8>(phitmp_9_reg_1805_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_32_s_fu_1301_p1() {
    tmp_32_s_fu_1301_p1 = esl_zext<32,8>(phitmp_s_reg_1816_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_33_10_fu_1313_p2() {
    tmp_33_10_fu_1313_p2 = (!reg_917.read().is_01() || !tmp_32_10_fu_1310_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_917.read()) + sc_biguint<32>(tmp_32_10_fu_1310_p1.read()));
}

void scurve_adder36::thread_tmp_33_11_fu_1322_p2() {
    tmp_33_11_fu_1322_p2 = (!reg_922.read().is_01() || !tmp_32_11_fu_1319_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_922.read()) + sc_biguint<32>(tmp_32_11_fu_1319_p1.read()));
}

void scurve_adder36::thread_tmp_33_12_fu_1331_p2() {
    tmp_33_12_fu_1331_p2 = (!reg_927.read().is_01() || !tmp_32_12_fu_1328_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_927.read()) + sc_biguint<32>(tmp_32_12_fu_1328_p1.read()));
}

void scurve_adder36::thread_tmp_33_13_fu_1340_p2() {
    tmp_33_13_fu_1340_p2 = (!reg_932.read().is_01() || !tmp_32_13_fu_1337_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_932.read()) + sc_biguint<32>(tmp_32_13_fu_1337_p1.read()));
}

void scurve_adder36::thread_tmp_33_14_fu_1349_p2() {
    tmp_33_14_fu_1349_p2 = (!reg_937.read().is_01() || !tmp_32_14_fu_1346_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_937.read()) + sc_biguint<32>(tmp_32_14_fu_1346_p1.read()));
}

void scurve_adder36::thread_tmp_33_1_fu_1223_p2() {
    tmp_33_1_fu_1223_p2 = (!reg_867.read().is_01() || !tmp_32_1_fu_1220_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_867.read()) + sc_biguint<32>(tmp_32_1_fu_1220_p1.read()));
}

void scurve_adder36::thread_tmp_33_2_fu_1232_p2() {
    tmp_33_2_fu_1232_p2 = (!reg_872.read().is_01() || !tmp_32_2_fu_1229_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_872.read()) + sc_biguint<32>(tmp_32_2_fu_1229_p1.read()));
}

void scurve_adder36::thread_tmp_33_3_fu_1241_p2() {
    tmp_33_3_fu_1241_p2 = (!reg_877.read().is_01() || !tmp_32_3_fu_1238_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_877.read()) + sc_biguint<32>(tmp_32_3_fu_1238_p1.read()));
}

void scurve_adder36::thread_tmp_33_4_fu_1250_p2() {
    tmp_33_4_fu_1250_p2 = (!reg_882.read().is_01() || !tmp_32_4_fu_1247_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_882.read()) + sc_biguint<32>(tmp_32_4_fu_1247_p1.read()));
}

void scurve_adder36::thread_tmp_33_5_fu_1259_p2() {
    tmp_33_5_fu_1259_p2 = (!reg_887.read().is_01() || !tmp_32_5_fu_1256_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_887.read()) + sc_biguint<32>(tmp_32_5_fu_1256_p1.read()));
}

void scurve_adder36::thread_tmp_33_6_fu_1268_p2() {
    tmp_33_6_fu_1268_p2 = (!reg_892.read().is_01() || !tmp_32_6_fu_1265_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_892.read()) + sc_biguint<32>(tmp_32_6_fu_1265_p1.read()));
}

void scurve_adder36::thread_tmp_33_7_fu_1277_p2() {
    tmp_33_7_fu_1277_p2 = (!reg_897.read().is_01() || !tmp_32_7_fu_1274_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_897.read()) + sc_biguint<32>(tmp_32_7_fu_1274_p1.read()));
}

void scurve_adder36::thread_tmp_33_8_fu_1286_p2() {
    tmp_33_8_fu_1286_p2 = (!reg_902.read().is_01() || !tmp_32_8_fu_1283_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_902.read()) + sc_biguint<32>(tmp_32_8_fu_1283_p1.read()));
}

void scurve_adder36::thread_tmp_33_9_fu_1295_p2() {
    tmp_33_9_fu_1295_p2 = (!reg_907.read().is_01() || !tmp_32_9_fu_1292_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_907.read()) + sc_biguint<32>(tmp_32_9_fu_1292_p1.read()));
}

void scurve_adder36::thread_tmp_33_s_fu_1304_p2() {
    tmp_33_s_fu_1304_p2 = (!reg_912.read().is_01() || !tmp_32_s_fu_1301_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_912.read()) + sc_biguint<32>(tmp_32_s_fu_1301_p1.read()));
}

void scurve_adder36::thread_tmp_3_fu_942_p2() {
    tmp_3_fu_942_p2 = (!TEST_MODE.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(TEST_MODE.read() == ap_const_lv32_0);
}

void scurve_adder36::thread_tmp_4_fu_983_p1() {
    tmp_4_fu_983_p1 = esl_zext<64,8>(i_reg_818.read());
}

void scurve_adder36::thread_tmp_5_cast_fu_1355_p1() {
    tmp_5_cast_fu_1355_p1 = esl_zext<17,16>(k_tlast_cnt_reg_806.read());
}

void scurve_adder36::thread_tmp_5_fu_1407_p3() {
    tmp_5_fu_1407_p3 = esl_concat<8,4>(i_2_reg_851.read(), ap_const_lv4_0);
}

void scurve_adder36::thread_tmp_6_fu_1359_p2() {
    tmp_6_fu_1359_p2 = (!tmp_5_cast_fu_1355_p1.read().is_01() || !tmp_2_reg_1660.read().is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_cast_fu_1355_p1.read() == tmp_2_reg_1660.read());
}

void scurve_adder36::thread_tmp_7_fu_1034_p1() {
    tmp_7_fu_1034_p1 = esl_zext<64,8>(i_1_mid2_reg_1696.read());
}

void scurve_adder36::thread_tmp_9_fu_1387_p1() {
    tmp_9_fu_1387_p1 = esl_zext<64,8>(i_2_reg_851.read());
}

void scurve_adder36::thread_tmp_data_V_1_fu_1625_p3() {
    tmp_data_V_1_fu_1625_p3 = (!tmp_3_reg_1650.read()[0].is_01())? sc_lv<512>(): ((tmp_3_reg_1650.read()[0].to_bool())? sum_pix_tot_data_V_s_fu_1415_p17.read(): sum_pix_tot_data_V_1_fu_1621_p1.read());
}

void scurve_adder36::thread_tmp_fu_1585_p17() {
    tmp_fu_1585_p17 = esl_concat<460,32>(esl_concat<428,32>(esl_concat<396,32>(esl_concat<364,32>(esl_concat<332,32>(esl_concat<300,32>(esl_concat<268,32>(esl_concat<236,32>(esl_concat<204,32>(esl_concat<172,32>(esl_concat<140,32>(esl_concat<108,32>(esl_concat<76,32>(esl_concat<44,32>(esl_concat<12,32>(val_assign_1_14_fu_1580_p2.read(), val_assign_1_13_cast_fu_1576_p1.read()), val_assign_1_12_cast_fu_1567_p1.read()), val_assign_1_11_cast_fu_1558_p1.read()), val_assign_1_10_cast_fu_1549_p1.read()), val_assign_1_9_cast_fu_1540_p1.read()), val_assign_1_8_cast_fu_1531_p1.read()), val_assign_1_7_cast_fu_1522_p1.read()), val_assign_1_6_cast_fu_1513_p1.read()), val_assign_1_5_cast_fu_1504_p1.read()), val_assign_1_4_cast_fu_1495_p1.read()), val_assign_1_3_cast_fu_1486_p1.read()), val_assign_1_2_cast_fu_1477_p1.read()), val_assign_1_1_cast_fu_1468_p1.read()), val_assign_1_cast_fu_1459_p1.read()), tmp_10_cast_fu_1451_p1.read());
}

void scurve_adder36::thread_tmp_last_V_fu_1382_p2() {
    tmp_last_V_fu_1382_p2 = (tmp_s_fu_1376_p2.read() & tmp_6_reg_1962.read());
}

void scurve_adder36::thread_tmp_s_fu_1376_p2() {
    tmp_s_fu_1376_p2 = (!i_2_reg_851.read().is_01() || !ap_const_lv8_B3.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_851.read() == ap_const_lv8_B3);
}

void scurve_adder36::thread_val_assign_1_10_cast_fu_1549_p1() {
    val_assign_1_10_cast_fu_1549_p1 = esl_zext<32,12>(val_assign_1_10_fu_1544_p2.read());
}

void scurve_adder36::thread_val_assign_1_10_fu_1544_p2() {
    val_assign_1_10_fu_1544_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_B);
}

void scurve_adder36::thread_val_assign_1_11_cast_fu_1558_p1() {
    val_assign_1_11_cast_fu_1558_p1 = esl_zext<32,12>(val_assign_1_11_fu_1553_p2.read());
}

void scurve_adder36::thread_val_assign_1_11_fu_1553_p2() {
    val_assign_1_11_fu_1553_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_C);
}

void scurve_adder36::thread_val_assign_1_12_cast_fu_1567_p1() {
    val_assign_1_12_cast_fu_1567_p1 = esl_zext<32,12>(val_assign_1_12_fu_1562_p2.read());
}

void scurve_adder36::thread_val_assign_1_12_fu_1562_p2() {
    val_assign_1_12_fu_1562_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_D);
}

void scurve_adder36::thread_val_assign_1_13_cast_fu_1576_p1() {
    val_assign_1_13_cast_fu_1576_p1 = esl_zext<32,12>(val_assign_1_13_fu_1571_p2.read());
}

void scurve_adder36::thread_val_assign_1_13_fu_1571_p2() {
    val_assign_1_13_fu_1571_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_E);
}

void scurve_adder36::thread_val_assign_1_14_fu_1580_p2() {
    val_assign_1_14_fu_1580_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_F);
}

void scurve_adder36::thread_val_assign_1_1_cast_fu_1468_p1() {
    val_assign_1_1_cast_fu_1468_p1 = esl_zext<32,12>(val_assign_1_1_fu_1463_p2.read());
}

void scurve_adder36::thread_val_assign_1_1_fu_1463_p2() {
    val_assign_1_1_fu_1463_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_2);
}

void scurve_adder36::thread_val_assign_1_2_cast_fu_1477_p1() {
    val_assign_1_2_cast_fu_1477_p1 = esl_zext<32,12>(val_assign_1_2_fu_1472_p2.read());
}

void scurve_adder36::thread_val_assign_1_2_fu_1472_p2() {
    val_assign_1_2_fu_1472_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_3);
}

void scurve_adder36::thread_val_assign_1_3_cast_fu_1486_p1() {
    val_assign_1_3_cast_fu_1486_p1 = esl_zext<32,12>(val_assign_1_3_fu_1481_p2.read());
}

void scurve_adder36::thread_val_assign_1_3_fu_1481_p2() {
    val_assign_1_3_fu_1481_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_4);
}

void scurve_adder36::thread_val_assign_1_4_cast_fu_1495_p1() {
    val_assign_1_4_cast_fu_1495_p1 = esl_zext<32,12>(val_assign_1_4_fu_1490_p2.read());
}

void scurve_adder36::thread_val_assign_1_4_fu_1490_p2() {
    val_assign_1_4_fu_1490_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_5);
}

void scurve_adder36::thread_val_assign_1_5_cast_fu_1504_p1() {
    val_assign_1_5_cast_fu_1504_p1 = esl_zext<32,12>(val_assign_1_5_fu_1499_p2.read());
}

void scurve_adder36::thread_val_assign_1_5_fu_1499_p2() {
    val_assign_1_5_fu_1499_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_6);
}

void scurve_adder36::thread_val_assign_1_6_cast_fu_1513_p1() {
    val_assign_1_6_cast_fu_1513_p1 = esl_zext<32,12>(val_assign_1_6_fu_1508_p2.read());
}

void scurve_adder36::thread_val_assign_1_6_fu_1508_p2() {
    val_assign_1_6_fu_1508_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_7);
}

void scurve_adder36::thread_val_assign_1_7_cast_fu_1522_p1() {
    val_assign_1_7_cast_fu_1522_p1 = esl_zext<32,12>(val_assign_1_7_fu_1517_p2.read());
}

void scurve_adder36::thread_val_assign_1_7_fu_1517_p2() {
    val_assign_1_7_fu_1517_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_8);
}

void scurve_adder36::thread_val_assign_1_8_cast_fu_1531_p1() {
    val_assign_1_8_cast_fu_1531_p1 = esl_zext<32,12>(val_assign_1_8_fu_1526_p2.read());
}

void scurve_adder36::thread_val_assign_1_8_fu_1526_p2() {
    val_assign_1_8_fu_1526_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_9);
}

void scurve_adder36::thread_val_assign_1_9_cast_fu_1540_p1() {
    val_assign_1_9_cast_fu_1540_p1 = esl_zext<32,12>(val_assign_1_9_fu_1535_p2.read());
}

void scurve_adder36::thread_val_assign_1_9_fu_1535_p2() {
    val_assign_1_9_fu_1535_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_A);
}

void scurve_adder36::thread_val_assign_1_cast_fu_1459_p1() {
    val_assign_1_cast_fu_1459_p1 = esl_zext<32,12>(val_assign_1_s_fu_1454_p2.read());
}

void scurve_adder36::thread_val_assign_1_s_fu_1454_p2() {
    val_assign_1_s_fu_1454_p2 = (tmp_5_reg_2061_pp2_iter1_reg.read() | ap_const_lv12_1);
}

void scurve_adder36::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((!(esl_seteq<1,1,1>(out_stream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(exitcond1_fu_960_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((!(esl_seteq<1,1,1>(out_stream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(exitcond1_fu_960_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(exitcond2_fu_971_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 128 : 
            if ((!(esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_1003_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) && !(esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter3.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter3.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_1003_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 512 : 
            if ((!(esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond5_fu_1364_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) && !(esl_seteq<1,1,1>(ap_enable_reg_pp2_iter2.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter3.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if (((esl_seteq<1,1,1>(ap_enable_reg_pp2_iter2.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter3.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(exitcond5_fu_1364_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void scurve_adder36::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TDATA\" :  \"" << in_stream0_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TVALID\" :  \"" << in_stream0_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_stream0_TREADY\" :  \"" << in_stream0_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TKEEP\" :  \"" << in_stream0_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TSTRB\" :  \"" << in_stream0_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TUSER\" :  \"" << in_stream0_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TLAST\" :  \"" << in_stream0_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TID\" :  \"" << in_stream0_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TDEST\" :  \"" << in_stream0_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TDATA\" :  \"" << out_stream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TVALID\" :  \"" << out_stream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_stream_TREADY\" :  \"" << out_stream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TKEEP\" :  \"" << out_stream_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TSTRB\" :  \"" << out_stream_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TUSER\" :  \"" << out_stream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TLAST\" :  \"" << out_stream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TID\" :  \"" << out_stream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TDEST\" :  \"" << out_stream_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWVALID\" :  \"" << s_axi_CTRL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_AWREADY\" :  \"" << s_axi_CTRL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWADDR\" :  \"" << s_axi_CTRL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WVALID\" :  \"" << s_axi_CTRL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_WREADY\" :  \"" << s_axi_CTRL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WDATA\" :  \"" << s_axi_CTRL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WSTRB\" :  \"" << s_axi_CTRL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARVALID\" :  \"" << s_axi_CTRL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_ARREADY\" :  \"" << s_axi_CTRL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARADDR\" :  \"" << s_axi_CTRL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RVALID\" :  \"" << s_axi_CTRL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_RREADY\" :  \"" << s_axi_CTRL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RDATA\" :  \"" << s_axi_CTRL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RRESP\" :  \"" << s_axi_CTRL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BVALID\" :  \"" << s_axi_CTRL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_BREADY\" :  \"" << s_axi_CTRL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BRESP\" :  \"" << s_axi_CTRL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

