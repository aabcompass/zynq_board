// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "scurve_adder36.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic scurve_adder36::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic scurve_adder36::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> scurve_adder36::ap_ST_fsm_state1 = "1";
const sc_lv<7> scurve_adder36::ap_ST_fsm_state2 = "10";
const sc_lv<7> scurve_adder36::ap_ST_fsm_state3 = "100";
const sc_lv<7> scurve_adder36::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<7> scurve_adder36::ap_ST_fsm_state9 = "10000";
const sc_lv<7> scurve_adder36::ap_ST_fsm_pp2_stage0 = "100000";
const sc_lv<7> scurve_adder36::ap_ST_fsm_state14 = "1000000";
const sc_lv<32> scurve_adder36::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool scurve_adder36::ap_const_boolean_1 = true;
const sc_lv<1> scurve_adder36::ap_const_lv1_0 = "0";
const sc_lv<1> scurve_adder36::ap_const_lv1_1 = "1";
const sc_lv<2> scurve_adder36::ap_const_lv2_0 = "00";
const sc_lv<2> scurve_adder36::ap_const_lv2_2 = "10";
const sc_lv<2> scurve_adder36::ap_const_lv2_3 = "11";
const sc_lv<2> scurve_adder36::ap_const_lv2_1 = "1";
const sc_lv<32> scurve_adder36::ap_const_lv32_3 = "11";
const bool scurve_adder36::ap_const_boolean_0 = false;
const int scurve_adder36::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> scurve_adder36::ap_const_lv32_5 = "101";
const sc_lv<32> scurve_adder36::ap_const_lv32_1 = "1";
const sc_lv<32> scurve_adder36::ap_const_lv32_2 = "10";
const sc_lv<32> scurve_adder36::ap_const_lv32_4 = "100";
const sc_lv<8> scurve_adder36::ap_const_lv8_0 = "00000000";
const sc_lv<24> scurve_adder36::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<64> scurve_adder36::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<6> scurve_adder36::ap_const_lv6_0 = "000000";
const sc_lv<5> scurve_adder36::ap_const_lv5_0 = "00000";
const sc_lv<8> scurve_adder36::ap_const_lv8_90 = "10010000";
const sc_lv<8> scurve_adder36::ap_const_lv8_1 = "1";
const sc_lv<7> scurve_adder36::ap_const_lv7_0 = "0000000";
const sc_lv<4> scurve_adder36::ap_const_lv4_0 = "0000";
const sc_lv<24> scurve_adder36::ap_const_lv24_1 = "1";
const sc_lv<32> scurve_adder36::ap_const_lv32_8 = "1000";
const sc_lv<32> scurve_adder36::ap_const_lv32_F = "1111";
const sc_lv<32> scurve_adder36::ap_const_lv32_10 = "10000";
const sc_lv<32> scurve_adder36::ap_const_lv32_17 = "10111";
const sc_lv<32> scurve_adder36::ap_const_lv32_18 = "11000";
const sc_lv<32> scurve_adder36::ap_const_lv32_1F = "11111";
const sc_lv<32> scurve_adder36::ap_const_lv32_20 = "100000";
const sc_lv<32> scurve_adder36::ap_const_lv32_27 = "100111";
const sc_lv<32> scurve_adder36::ap_const_lv32_28 = "101000";
const sc_lv<32> scurve_adder36::ap_const_lv32_2F = "101111";
const sc_lv<32> scurve_adder36::ap_const_lv32_30 = "110000";
const sc_lv<32> scurve_adder36::ap_const_lv32_37 = "110111";
const sc_lv<32> scurve_adder36::ap_const_lv32_38 = "111000";
const sc_lv<32> scurve_adder36::ap_const_lv32_3F = "111111";
const sc_lv<32> scurve_adder36::ap_const_lv32_40 = "1000000";
const sc_lv<32> scurve_adder36::ap_const_lv32_47 = "1000111";
const sc_lv<32> scurve_adder36::ap_const_lv32_48 = "1001000";
const sc_lv<32> scurve_adder36::ap_const_lv32_4F = "1001111";
const sc_lv<32> scurve_adder36::ap_const_lv32_50 = "1010000";
const sc_lv<32> scurve_adder36::ap_const_lv32_57 = "1010111";
const sc_lv<32> scurve_adder36::ap_const_lv32_58 = "1011000";
const sc_lv<32> scurve_adder36::ap_const_lv32_5F = "1011111";
const sc_lv<32> scurve_adder36::ap_const_lv32_60 = "1100000";
const sc_lv<32> scurve_adder36::ap_const_lv32_67 = "1100111";
const sc_lv<32> scurve_adder36::ap_const_lv32_68 = "1101000";
const sc_lv<32> scurve_adder36::ap_const_lv32_6F = "1101111";
const sc_lv<32> scurve_adder36::ap_const_lv32_70 = "1110000";
const sc_lv<32> scurve_adder36::ap_const_lv32_77 = "1110111";
const sc_lv<32> scurve_adder36::ap_const_lv32_78 = "1111000";
const sc_lv<32> scurve_adder36::ap_const_lv32_7F = "1111111";
const sc_lv<8> scurve_adder36::ap_const_lv8_8F = "10001111";
const sc_lv<12> scurve_adder36::ap_const_lv12_1 = "1";
const sc_lv<12> scurve_adder36::ap_const_lv12_2 = "10";
const sc_lv<12> scurve_adder36::ap_const_lv12_3 = "11";
const sc_lv<12> scurve_adder36::ap_const_lv12_4 = "100";
const sc_lv<12> scurve_adder36::ap_const_lv12_5 = "101";
const sc_lv<12> scurve_adder36::ap_const_lv12_6 = "110";
const sc_lv<12> scurve_adder36::ap_const_lv12_7 = "111";
const sc_lv<12> scurve_adder36::ap_const_lv12_8 = "1000";
const sc_lv<12> scurve_adder36::ap_const_lv12_9 = "1001";
const sc_lv<12> scurve_adder36::ap_const_lv12_A = "1010";
const sc_lv<12> scurve_adder36::ap_const_lv12_B = "1011";
const sc_lv<12> scurve_adder36::ap_const_lv12_C = "1100";
const sc_lv<12> scurve_adder36::ap_const_lv12_D = "1101";
const sc_lv<12> scurve_adder36::ap_const_lv12_E = "1110";
const sc_lv<12> scurve_adder36::ap_const_lv12_F = "1111";
const sc_lv<32> scurve_adder36::ap_const_lv32_6 = "110";

scurve_adder36::scurve_adder36(sc_module_name name) : sc_module(name), mVcdFile(0) {
    scurve_adder36_CTRL_BUS_s_axi_U = new scurve_adder36_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>("scurve_adder36_CTRL_BUS_s_axi_U");
    scurve_adder36_CTRL_BUS_s_axi_U->AWVALID(s_axi_CTRL_BUS_AWVALID);
    scurve_adder36_CTRL_BUS_s_axi_U->AWREADY(s_axi_CTRL_BUS_AWREADY);
    scurve_adder36_CTRL_BUS_s_axi_U->AWADDR(s_axi_CTRL_BUS_AWADDR);
    scurve_adder36_CTRL_BUS_s_axi_U->WVALID(s_axi_CTRL_BUS_WVALID);
    scurve_adder36_CTRL_BUS_s_axi_U->WREADY(s_axi_CTRL_BUS_WREADY);
    scurve_adder36_CTRL_BUS_s_axi_U->WDATA(s_axi_CTRL_BUS_WDATA);
    scurve_adder36_CTRL_BUS_s_axi_U->WSTRB(s_axi_CTRL_BUS_WSTRB);
    scurve_adder36_CTRL_BUS_s_axi_U->ARVALID(s_axi_CTRL_BUS_ARVALID);
    scurve_adder36_CTRL_BUS_s_axi_U->ARREADY(s_axi_CTRL_BUS_ARREADY);
    scurve_adder36_CTRL_BUS_s_axi_U->ARADDR(s_axi_CTRL_BUS_ARADDR);
    scurve_adder36_CTRL_BUS_s_axi_U->RVALID(s_axi_CTRL_BUS_RVALID);
    scurve_adder36_CTRL_BUS_s_axi_U->RREADY(s_axi_CTRL_BUS_RREADY);
    scurve_adder36_CTRL_BUS_s_axi_U->RDATA(s_axi_CTRL_BUS_RDATA);
    scurve_adder36_CTRL_BUS_s_axi_U->RRESP(s_axi_CTRL_BUS_RRESP);
    scurve_adder36_CTRL_BUS_s_axi_U->BVALID(s_axi_CTRL_BUS_BVALID);
    scurve_adder36_CTRL_BUS_s_axi_U->BREADY(s_axi_CTRL_BUS_BREADY);
    scurve_adder36_CTRL_BUS_s_axi_U->BRESP(s_axi_CTRL_BUS_BRESP);
    scurve_adder36_CTRL_BUS_s_axi_U->ACLK(ap_clk);
    scurve_adder36_CTRL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    scurve_adder36_CTRL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    scurve_adder36_CTRL_BUS_s_axi_U->ap_start(ap_start);
    scurve_adder36_CTRL_BUS_s_axi_U->interrupt(interrupt);
    scurve_adder36_CTRL_BUS_s_axi_U->ap_ready(ap_ready);
    scurve_adder36_CTRL_BUS_s_axi_U->ap_done(ap_done);
    scurve_adder36_CTRL_BUS_s_axi_U->ap_idle(ap_idle);
    scurve_adder36_CTRL_BUS_s_axi_U->N_ADDS(N_ADDS);
    scurve_adder36_CTRL_BUS_s_axi_U->TEST_MODE(TEST_MODE);
    sum_pix_ch0_0_U = new scurve_adder36_subkb("sum_pix_ch0_0_U");
    sum_pix_ch0_0_U->clk(ap_clk);
    sum_pix_ch0_0_U->reset(ap_rst_n_inv);
    sum_pix_ch0_0_U->address0(sum_pix_ch0_0_address0);
    sum_pix_ch0_0_U->ce0(sum_pix_ch0_0_ce0);
    sum_pix_ch0_0_U->we0(sum_pix_ch0_0_we0);
    sum_pix_ch0_0_U->d0(ap_var_for_const1);
    sum_pix_ch0_0_U->q0(sum_pix_ch0_0_q0);
    sum_pix_ch0_0_U->address1(sum_pix_ch0_0_address1);
    sum_pix_ch0_0_U->ce1(sum_pix_ch0_0_ce1);
    sum_pix_ch0_0_U->we1(sum_pix_ch0_0_we1);
    sum_pix_ch0_0_U->d1(tmp_9_reg_1820);
    sum_pix_ch0_0_U->q1(sum_pix_ch0_0_q1);
    sum_pix_ch0_1_U = new scurve_adder36_subkb("sum_pix_ch0_1_U");
    sum_pix_ch0_1_U->clk(ap_clk);
    sum_pix_ch0_1_U->reset(ap_rst_n_inv);
    sum_pix_ch0_1_U->address0(sum_pix_ch0_1_address0);
    sum_pix_ch0_1_U->ce0(sum_pix_ch0_1_ce0);
    sum_pix_ch0_1_U->we0(sum_pix_ch0_1_we0);
    sum_pix_ch0_1_U->d0(ap_var_for_const1);
    sum_pix_ch0_1_U->q0(sum_pix_ch0_1_q0);
    sum_pix_ch0_1_U->address1(sum_pix_ch0_1_address1);
    sum_pix_ch0_1_U->ce1(sum_pix_ch0_1_ce1);
    sum_pix_ch0_1_U->we1(sum_pix_ch0_1_we1);
    sum_pix_ch0_1_U->d1(tmp_29_1_reg_1825);
    sum_pix_ch0_1_U->q1(sum_pix_ch0_1_q1);
    sum_pix_ch0_2_U = new scurve_adder36_subkb("sum_pix_ch0_2_U");
    sum_pix_ch0_2_U->clk(ap_clk);
    sum_pix_ch0_2_U->reset(ap_rst_n_inv);
    sum_pix_ch0_2_U->address0(sum_pix_ch0_2_address0);
    sum_pix_ch0_2_U->ce0(sum_pix_ch0_2_ce0);
    sum_pix_ch0_2_U->we0(sum_pix_ch0_2_we0);
    sum_pix_ch0_2_U->d0(ap_var_for_const1);
    sum_pix_ch0_2_U->q0(sum_pix_ch0_2_q0);
    sum_pix_ch0_2_U->address1(sum_pix_ch0_2_address1);
    sum_pix_ch0_2_U->ce1(sum_pix_ch0_2_ce1);
    sum_pix_ch0_2_U->we1(sum_pix_ch0_2_we1);
    sum_pix_ch0_2_U->d1(tmp_29_2_reg_1830);
    sum_pix_ch0_2_U->q1(sum_pix_ch0_2_q1);
    sum_pix_ch0_3_U = new scurve_adder36_subkb("sum_pix_ch0_3_U");
    sum_pix_ch0_3_U->clk(ap_clk);
    sum_pix_ch0_3_U->reset(ap_rst_n_inv);
    sum_pix_ch0_3_U->address0(sum_pix_ch0_3_address0);
    sum_pix_ch0_3_U->ce0(sum_pix_ch0_3_ce0);
    sum_pix_ch0_3_U->we0(sum_pix_ch0_3_we0);
    sum_pix_ch0_3_U->d0(ap_var_for_const1);
    sum_pix_ch0_3_U->q0(sum_pix_ch0_3_q0);
    sum_pix_ch0_3_U->address1(sum_pix_ch0_3_address1);
    sum_pix_ch0_3_U->ce1(sum_pix_ch0_3_ce1);
    sum_pix_ch0_3_U->we1(sum_pix_ch0_3_we1);
    sum_pix_ch0_3_U->d1(tmp_29_3_reg_1835);
    sum_pix_ch0_3_U->q1(sum_pix_ch0_3_q1);
    sum_pix_ch0_4_U = new scurve_adder36_subkb("sum_pix_ch0_4_U");
    sum_pix_ch0_4_U->clk(ap_clk);
    sum_pix_ch0_4_U->reset(ap_rst_n_inv);
    sum_pix_ch0_4_U->address0(sum_pix_ch0_4_address0);
    sum_pix_ch0_4_U->ce0(sum_pix_ch0_4_ce0);
    sum_pix_ch0_4_U->we0(sum_pix_ch0_4_we0);
    sum_pix_ch0_4_U->d0(ap_var_for_const1);
    sum_pix_ch0_4_U->q0(sum_pix_ch0_4_q0);
    sum_pix_ch0_4_U->address1(sum_pix_ch0_4_address1);
    sum_pix_ch0_4_U->ce1(sum_pix_ch0_4_ce1);
    sum_pix_ch0_4_U->we1(sum_pix_ch0_4_we1);
    sum_pix_ch0_4_U->d1(tmp_29_4_reg_1840);
    sum_pix_ch0_4_U->q1(sum_pix_ch0_4_q1);
    sum_pix_ch0_5_U = new scurve_adder36_subkb("sum_pix_ch0_5_U");
    sum_pix_ch0_5_U->clk(ap_clk);
    sum_pix_ch0_5_U->reset(ap_rst_n_inv);
    sum_pix_ch0_5_U->address0(sum_pix_ch0_5_address0);
    sum_pix_ch0_5_U->ce0(sum_pix_ch0_5_ce0);
    sum_pix_ch0_5_U->we0(sum_pix_ch0_5_we0);
    sum_pix_ch0_5_U->d0(ap_var_for_const1);
    sum_pix_ch0_5_U->q0(sum_pix_ch0_5_q0);
    sum_pix_ch0_5_U->address1(sum_pix_ch0_5_address1);
    sum_pix_ch0_5_U->ce1(sum_pix_ch0_5_ce1);
    sum_pix_ch0_5_U->we1(sum_pix_ch0_5_we1);
    sum_pix_ch0_5_U->d1(tmp_29_5_reg_1845);
    sum_pix_ch0_5_U->q1(sum_pix_ch0_5_q1);
    sum_pix_ch0_6_U = new scurve_adder36_subkb("sum_pix_ch0_6_U");
    sum_pix_ch0_6_U->clk(ap_clk);
    sum_pix_ch0_6_U->reset(ap_rst_n_inv);
    sum_pix_ch0_6_U->address0(sum_pix_ch0_6_address0);
    sum_pix_ch0_6_U->ce0(sum_pix_ch0_6_ce0);
    sum_pix_ch0_6_U->we0(sum_pix_ch0_6_we0);
    sum_pix_ch0_6_U->d0(ap_var_for_const1);
    sum_pix_ch0_6_U->q0(sum_pix_ch0_6_q0);
    sum_pix_ch0_6_U->address1(sum_pix_ch0_6_address1);
    sum_pix_ch0_6_U->ce1(sum_pix_ch0_6_ce1);
    sum_pix_ch0_6_U->we1(sum_pix_ch0_6_we1);
    sum_pix_ch0_6_U->d1(tmp_29_6_reg_1850);
    sum_pix_ch0_6_U->q1(sum_pix_ch0_6_q1);
    sum_pix_ch0_7_U = new scurve_adder36_subkb("sum_pix_ch0_7_U");
    sum_pix_ch0_7_U->clk(ap_clk);
    sum_pix_ch0_7_U->reset(ap_rst_n_inv);
    sum_pix_ch0_7_U->address0(sum_pix_ch0_7_address0);
    sum_pix_ch0_7_U->ce0(sum_pix_ch0_7_ce0);
    sum_pix_ch0_7_U->we0(sum_pix_ch0_7_we0);
    sum_pix_ch0_7_U->d0(ap_var_for_const1);
    sum_pix_ch0_7_U->q0(sum_pix_ch0_7_q0);
    sum_pix_ch0_7_U->address1(sum_pix_ch0_7_address1);
    sum_pix_ch0_7_U->ce1(sum_pix_ch0_7_ce1);
    sum_pix_ch0_7_U->we1(sum_pix_ch0_7_we1);
    sum_pix_ch0_7_U->d1(tmp_29_7_reg_1855);
    sum_pix_ch0_7_U->q1(sum_pix_ch0_7_q1);
    sum_pix_ch0_8_U = new scurve_adder36_subkb("sum_pix_ch0_8_U");
    sum_pix_ch0_8_U->clk(ap_clk);
    sum_pix_ch0_8_U->reset(ap_rst_n_inv);
    sum_pix_ch0_8_U->address0(sum_pix_ch0_8_address0);
    sum_pix_ch0_8_U->ce0(sum_pix_ch0_8_ce0);
    sum_pix_ch0_8_U->we0(sum_pix_ch0_8_we0);
    sum_pix_ch0_8_U->d0(ap_var_for_const1);
    sum_pix_ch0_8_U->q0(sum_pix_ch0_8_q0);
    sum_pix_ch0_8_U->address1(sum_pix_ch0_8_address1);
    sum_pix_ch0_8_U->ce1(sum_pix_ch0_8_ce1);
    sum_pix_ch0_8_U->we1(sum_pix_ch0_8_we1);
    sum_pix_ch0_8_U->d1(tmp_29_8_reg_1860);
    sum_pix_ch0_8_U->q1(sum_pix_ch0_8_q1);
    sum_pix_ch0_9_U = new scurve_adder36_subkb("sum_pix_ch0_9_U");
    sum_pix_ch0_9_U->clk(ap_clk);
    sum_pix_ch0_9_U->reset(ap_rst_n_inv);
    sum_pix_ch0_9_U->address0(sum_pix_ch0_9_address0);
    sum_pix_ch0_9_U->ce0(sum_pix_ch0_9_ce0);
    sum_pix_ch0_9_U->we0(sum_pix_ch0_9_we0);
    sum_pix_ch0_9_U->d0(ap_var_for_const1);
    sum_pix_ch0_9_U->q0(sum_pix_ch0_9_q0);
    sum_pix_ch0_9_U->address1(sum_pix_ch0_9_address1);
    sum_pix_ch0_9_U->ce1(sum_pix_ch0_9_ce1);
    sum_pix_ch0_9_U->we1(sum_pix_ch0_9_we1);
    sum_pix_ch0_9_U->d1(tmp_29_9_reg_1865);
    sum_pix_ch0_9_U->q1(sum_pix_ch0_9_q1);
    sum_pix_ch0_10_U = new scurve_adder36_subkb("sum_pix_ch0_10_U");
    sum_pix_ch0_10_U->clk(ap_clk);
    sum_pix_ch0_10_U->reset(ap_rst_n_inv);
    sum_pix_ch0_10_U->address0(sum_pix_ch0_10_address0);
    sum_pix_ch0_10_U->ce0(sum_pix_ch0_10_ce0);
    sum_pix_ch0_10_U->we0(sum_pix_ch0_10_we0);
    sum_pix_ch0_10_U->d0(ap_var_for_const1);
    sum_pix_ch0_10_U->q0(sum_pix_ch0_10_q0);
    sum_pix_ch0_10_U->address1(sum_pix_ch0_10_address1);
    sum_pix_ch0_10_U->ce1(sum_pix_ch0_10_ce1);
    sum_pix_ch0_10_U->we1(sum_pix_ch0_10_we1);
    sum_pix_ch0_10_U->d1(tmp_29_s_reg_1870);
    sum_pix_ch0_10_U->q1(sum_pix_ch0_10_q1);
    sum_pix_ch0_11_U = new scurve_adder36_subkb("sum_pix_ch0_11_U");
    sum_pix_ch0_11_U->clk(ap_clk);
    sum_pix_ch0_11_U->reset(ap_rst_n_inv);
    sum_pix_ch0_11_U->address0(sum_pix_ch0_11_address0);
    sum_pix_ch0_11_U->ce0(sum_pix_ch0_11_ce0);
    sum_pix_ch0_11_U->we0(sum_pix_ch0_11_we0);
    sum_pix_ch0_11_U->d0(ap_var_for_const1);
    sum_pix_ch0_11_U->q0(sum_pix_ch0_11_q0);
    sum_pix_ch0_11_U->address1(sum_pix_ch0_11_address1);
    sum_pix_ch0_11_U->ce1(sum_pix_ch0_11_ce1);
    sum_pix_ch0_11_U->we1(sum_pix_ch0_11_we1);
    sum_pix_ch0_11_U->d1(tmp_29_10_reg_1875);
    sum_pix_ch0_11_U->q1(sum_pix_ch0_11_q1);
    sum_pix_ch0_12_U = new scurve_adder36_subkb("sum_pix_ch0_12_U");
    sum_pix_ch0_12_U->clk(ap_clk);
    sum_pix_ch0_12_U->reset(ap_rst_n_inv);
    sum_pix_ch0_12_U->address0(sum_pix_ch0_12_address0);
    sum_pix_ch0_12_U->ce0(sum_pix_ch0_12_ce0);
    sum_pix_ch0_12_U->we0(sum_pix_ch0_12_we0);
    sum_pix_ch0_12_U->d0(ap_var_for_const1);
    sum_pix_ch0_12_U->q0(sum_pix_ch0_12_q0);
    sum_pix_ch0_12_U->address1(sum_pix_ch0_12_address1);
    sum_pix_ch0_12_U->ce1(sum_pix_ch0_12_ce1);
    sum_pix_ch0_12_U->we1(sum_pix_ch0_12_we1);
    sum_pix_ch0_12_U->d1(tmp_29_11_reg_1880);
    sum_pix_ch0_12_U->q1(sum_pix_ch0_12_q1);
    sum_pix_ch0_13_U = new scurve_adder36_subkb("sum_pix_ch0_13_U");
    sum_pix_ch0_13_U->clk(ap_clk);
    sum_pix_ch0_13_U->reset(ap_rst_n_inv);
    sum_pix_ch0_13_U->address0(sum_pix_ch0_13_address0);
    sum_pix_ch0_13_U->ce0(sum_pix_ch0_13_ce0);
    sum_pix_ch0_13_U->we0(sum_pix_ch0_13_we0);
    sum_pix_ch0_13_U->d0(ap_var_for_const1);
    sum_pix_ch0_13_U->q0(sum_pix_ch0_13_q0);
    sum_pix_ch0_13_U->address1(sum_pix_ch0_13_address1);
    sum_pix_ch0_13_U->ce1(sum_pix_ch0_13_ce1);
    sum_pix_ch0_13_U->we1(sum_pix_ch0_13_we1);
    sum_pix_ch0_13_U->d1(tmp_29_12_reg_1885);
    sum_pix_ch0_13_U->q1(sum_pix_ch0_13_q1);
    sum_pix_ch0_14_U = new scurve_adder36_subkb("sum_pix_ch0_14_U");
    sum_pix_ch0_14_U->clk(ap_clk);
    sum_pix_ch0_14_U->reset(ap_rst_n_inv);
    sum_pix_ch0_14_U->address0(sum_pix_ch0_14_address0);
    sum_pix_ch0_14_U->ce0(sum_pix_ch0_14_ce0);
    sum_pix_ch0_14_U->we0(sum_pix_ch0_14_we0);
    sum_pix_ch0_14_U->d0(ap_var_for_const1);
    sum_pix_ch0_14_U->q0(sum_pix_ch0_14_q0);
    sum_pix_ch0_14_U->address1(sum_pix_ch0_14_address1);
    sum_pix_ch0_14_U->ce1(sum_pix_ch0_14_ce1);
    sum_pix_ch0_14_U->we1(sum_pix_ch0_14_we1);
    sum_pix_ch0_14_U->d1(tmp_29_13_reg_1890);
    sum_pix_ch0_14_U->q1(sum_pix_ch0_14_q1);
    sum_pix_ch0_15_U = new scurve_adder36_subkb("sum_pix_ch0_15_U");
    sum_pix_ch0_15_U->clk(ap_clk);
    sum_pix_ch0_15_U->reset(ap_rst_n_inv);
    sum_pix_ch0_15_U->address0(sum_pix_ch0_15_address0);
    sum_pix_ch0_15_U->ce0(sum_pix_ch0_15_ce0);
    sum_pix_ch0_15_U->we0(sum_pix_ch0_15_we0);
    sum_pix_ch0_15_U->d0(ap_var_for_const1);
    sum_pix_ch0_15_U->q0(sum_pix_ch0_15_q0);
    sum_pix_ch0_15_U->address1(sum_pix_ch0_15_address1);
    sum_pix_ch0_15_U->ce1(sum_pix_ch0_15_ce1);
    sum_pix_ch0_15_U->we1(sum_pix_ch0_15_we1);
    sum_pix_ch0_15_U->d1(tmp_29_14_reg_1895);
    sum_pix_ch0_15_U->q1(sum_pix_ch0_15_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( in_stream0_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten_reg_1625 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( in_stream0_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten_reg_1625 );

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_01001);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( ap_block_state12_io );
    sensitive << ( ap_block_state13_io );

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( ap_block_state12_io );
    sensitive << ( ap_block_state13_io );

    SC_METHOD(thread_ap_block_state10_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state11_pp2_stage0_iter1);

    SC_METHOD(thread_ap_block_state12_io);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( exitcond4_reg_1905_pp2_iter1_reg );

    SC_METHOD(thread_ap_block_state12_pp2_stage0_iter2);

    SC_METHOD(thread_ap_block_state13_io);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( exitcond4_reg_1905_pp2_iter2_reg );

    SC_METHOD(thread_ap_block_state13_pp2_stage0_iter3);

    SC_METHOD(thread_ap_block_state14);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( out_stream_V_keep_V_1_ack_in );
    sensitive << ( out_stream_V_strb_V_1_ack_in );
    sensitive << ( out_stream_V_user_V_1_ack_in );
    sensitive << ( out_stream_V_last_V_1_ack_in );
    sensitive << ( out_stream_V_id_V_1_ack_in );
    sensitive << ( out_stream_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_block_state4_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter1);
    sensitive << ( in_stream0_V_data_V_0_vld_out );
    sensitive << ( exitcond_flatten_reg_1625 );

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state7_pp1_stage0_iter3);

    SC_METHOD(thread_ap_block_state8_pp1_stage0_iter4);

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state4);
    sensitive << ( exitcond_flatten_fu_980_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state10);
    sensitive << ( exitcond4_fu_1337_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( out_stream_V_keep_V_1_ack_in );
    sensitive << ( out_stream_V_strb_V_1_ack_in );
    sensitive << ( out_stream_V_user_V_1_ack_in );
    sensitive << ( out_stream_V_last_V_1_ack_in );
    sensitive << ( out_stream_V_id_V_1_ack_in );
    sensitive << ( out_stream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( out_stream_V_keep_V_1_ack_in );
    sensitive << ( out_stream_V_strb_V_1_ack_in );
    sensitive << ( out_stream_V_user_V_1_ack_in );
    sensitive << ( out_stream_V_last_V_1_ack_in );
    sensitive << ( out_stream_V_id_V_1_ack_in );
    sensitive << ( out_stream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bound_fu_974_p2);
    sensitive << ( p_shl_fu_959_p1 );
    sensitive << ( p_shl2_fu_970_p1 );

    SC_METHOD(thread_exitcond1_fu_920_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_796 );

    SC_METHOD(thread_exitcond4_fu_1337_p2);
    sensitive << ( i_2_reg_829 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_980_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( indvar_flatten_reg_807 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( bound_reg_1620 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_fu_991_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( i_1_reg_818 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_980_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_i_1_mid2_fu_997_p3);
    sensitive << ( i_1_reg_818 );
    sensitive << ( exitcond_fu_991_p2 );

    SC_METHOD(thread_i_3_fu_926_p2);
    sensitive << ( i_reg_796 );

    SC_METHOD(thread_i_4_fu_1005_p2);
    sensitive << ( i_1_mid2_fu_997_p3 );

    SC_METHOD(thread_i_5_fu_1343_p2);
    sensitive << ( i_2_reg_829 );

    SC_METHOD(thread_in_stream0_TDATA_blk_n);
    sensitive << ( in_stream0_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_flatten_reg_1625 );

    SC_METHOD(thread_in_stream0_TREADY);
    sensitive << ( in_stream0_V_dest_V_0_state );

    SC_METHOD(thread_in_stream0_V_data_V_0_ack_in);
    sensitive << ( in_stream0_V_data_V_0_state );

    SC_METHOD(thread_in_stream0_V_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten_reg_1625 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_in_stream0_V_data_V_0_data_out);
    sensitive << ( in_stream0_V_data_V_0_payload_A );
    sensitive << ( in_stream0_V_data_V_0_payload_B );
    sensitive << ( in_stream0_V_data_V_0_sel );

    SC_METHOD(thread_in_stream0_V_data_V_0_load_A);
    sensitive << ( in_stream0_V_data_V_0_sel_wr );
    sensitive << ( in_stream0_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_stream0_V_data_V_0_load_B);
    sensitive << ( in_stream0_V_data_V_0_sel_wr );
    sensitive << ( in_stream0_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_stream0_V_data_V_0_sel);
    sensitive << ( in_stream0_V_data_V_0_sel_rd );

    SC_METHOD(thread_in_stream0_V_data_V_0_state_cmp_full);
    sensitive << ( in_stream0_V_data_V_0_state );

    SC_METHOD(thread_in_stream0_V_data_V_0_vld_in);
    sensitive << ( in_stream0_TVALID );

    SC_METHOD(thread_in_stream0_V_data_V_0_vld_out);
    sensitive << ( in_stream0_V_data_V_0_state );

    SC_METHOD(thread_in_stream0_V_dest_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten_reg_1625 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_in_stream0_V_dest_V_0_vld_in);
    sensitive << ( in_stream0_TVALID );

    SC_METHOD(thread_indvar_flatten_next_fu_985_p2);
    sensitive << ( indvar_flatten_reg_807 );

    SC_METHOD(thread_out_stream_TDATA);
    sensitive << ( out_stream_V_data_V_1_data_out );

    SC_METHOD(thread_out_stream_TDATA_blk_n);
    sensitive << ( out_stream_V_data_V_1_state );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( exitcond4_reg_1905_pp2_iter1_reg );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( exitcond4_reg_1905_pp2_iter2_reg );

    SC_METHOD(thread_out_stream_TDEST);
    sensitive << ( out_stream_V_dest_V_1_data_out );

    SC_METHOD(thread_out_stream_TID);
    sensitive << ( out_stream_V_id_V_1_data_out );

    SC_METHOD(thread_out_stream_TKEEP);
    sensitive << ( out_stream_V_keep_V_1_data_out );

    SC_METHOD(thread_out_stream_TLAST);
    sensitive << ( out_stream_V_last_V_1_data_out );

    SC_METHOD(thread_out_stream_TSTRB);
    sensitive << ( out_stream_V_strb_V_1_data_out );

    SC_METHOD(thread_out_stream_TUSER);
    sensitive << ( out_stream_V_user_V_1_data_out );

    SC_METHOD(thread_out_stream_TVALID);
    sensitive << ( out_stream_V_dest_V_1_state );

    SC_METHOD(thread_out_stream_V_data_V_1_ack_in);
    sensitive << ( out_stream_V_data_V_1_state );

    SC_METHOD(thread_out_stream_V_data_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_data_V_1_data_out);
    sensitive << ( out_stream_V_data_V_1_payload_A );
    sensitive << ( out_stream_V_data_V_1_payload_B );
    sensitive << ( out_stream_V_data_V_1_sel );

    SC_METHOD(thread_out_stream_V_data_V_1_load_A);
    sensitive << ( out_stream_V_data_V_1_sel_wr );
    sensitive << ( out_stream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_data_V_1_load_B);
    sensitive << ( out_stream_V_data_V_1_sel_wr );
    sensitive << ( out_stream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_data_V_1_sel);
    sensitive << ( out_stream_V_data_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_data_V_1_state_cmp_full);
    sensitive << ( out_stream_V_data_V_1_state );

    SC_METHOD(thread_out_stream_V_data_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond4_reg_1905_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_data_V_1_vld_out);
    sensitive << ( out_stream_V_data_V_1_state );

    SC_METHOD(thread_out_stream_V_dest_V_1_ack_in);
    sensitive << ( out_stream_V_dest_V_1_state );

    SC_METHOD(thread_out_stream_V_dest_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_dest_V_1_data_out);
    sensitive << ( out_stream_V_dest_V_1_sel );

    SC_METHOD(thread_out_stream_V_dest_V_1_sel);
    sensitive << ( out_stream_V_dest_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_dest_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond4_reg_1905_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_dest_V_1_vld_out);
    sensitive << ( out_stream_V_dest_V_1_state );

    SC_METHOD(thread_out_stream_V_id_V_1_ack_in);
    sensitive << ( out_stream_V_id_V_1_state );

    SC_METHOD(thread_out_stream_V_id_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_id_V_1_data_out);
    sensitive << ( out_stream_V_id_V_1_sel );

    SC_METHOD(thread_out_stream_V_id_V_1_sel);
    sensitive << ( out_stream_V_id_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_id_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond4_reg_1905_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_id_V_1_vld_out);
    sensitive << ( out_stream_V_id_V_1_state );

    SC_METHOD(thread_out_stream_V_keep_V_1_ack_in);
    sensitive << ( out_stream_V_keep_V_1_state );

    SC_METHOD(thread_out_stream_V_keep_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_keep_V_1_data_out);
    sensitive << ( out_stream_V_keep_V_1_sel );

    SC_METHOD(thread_out_stream_V_keep_V_1_sel);
    sensitive << ( out_stream_V_keep_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_keep_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond4_reg_1905_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_keep_V_1_vld_out);
    sensitive << ( out_stream_V_keep_V_1_state );

    SC_METHOD(thread_out_stream_V_last_V_1_ack_in);
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_out_stream_V_last_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_last_V_1_data_out);
    sensitive << ( out_stream_V_last_V_1_payload_A );
    sensitive << ( out_stream_V_last_V_1_payload_B );
    sensitive << ( out_stream_V_last_V_1_sel );

    SC_METHOD(thread_out_stream_V_last_V_1_load_A);
    sensitive << ( out_stream_V_last_V_1_sel_wr );
    sensitive << ( out_stream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_last_V_1_load_B);
    sensitive << ( out_stream_V_last_V_1_sel_wr );
    sensitive << ( out_stream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_last_V_1_sel);
    sensitive << ( out_stream_V_last_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_last_V_1_state_cmp_full);
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_out_stream_V_last_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond4_reg_1905_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_last_V_1_vld_out);
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_out_stream_V_strb_V_1_ack_in);
    sensitive << ( out_stream_V_strb_V_1_state );

    SC_METHOD(thread_out_stream_V_strb_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_strb_V_1_data_out);
    sensitive << ( out_stream_V_strb_V_1_sel );

    SC_METHOD(thread_out_stream_V_strb_V_1_sel);
    sensitive << ( out_stream_V_strb_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_strb_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond4_reg_1905_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_strb_V_1_vld_out);
    sensitive << ( out_stream_V_strb_V_1_state );

    SC_METHOD(thread_out_stream_V_user_V_1_ack_in);
    sensitive << ( out_stream_V_user_V_1_state );

    SC_METHOD(thread_out_stream_V_user_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_user_V_1_data_out);
    sensitive << ( out_stream_V_user_V_1_sel );

    SC_METHOD(thread_out_stream_V_user_V_1_sel);
    sensitive << ( out_stream_V_user_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_user_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( exitcond4_reg_1905_pp2_iter1_reg );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_out_stream_V_user_V_1_vld_out);
    sensitive << ( out_stream_V_user_V_1_state );

    SC_METHOD(thread_p_shl2_fu_970_p1);
    sensitive << ( tmp_11_fu_963_p3 );

    SC_METHOD(thread_p_shl_fu_959_p1);
    sensitive << ( tmp_10_fu_952_p3 );

    SC_METHOD(thread_sum_pix_ch0_0_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_0_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_0_addr_1_reg_1649_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_0_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_0_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_0_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_0_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_10_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_10_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_10_addr_1_reg_1759_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_10_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_10_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_10_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_10_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_11_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_11_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_11_addr_1_reg_1770_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_11_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_11_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_11_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_11_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_12_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_12_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_12_addr_1_reg_1781_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_12_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_12_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_12_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_12_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_13_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_13_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_13_addr_1_reg_1792_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_13_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_13_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_13_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_13_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_14_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_14_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_14_addr_1_reg_1803_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_14_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_14_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_14_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_14_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_15_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_15_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_15_addr_1_reg_1814_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_15_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_15_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_15_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_15_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_1_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_1_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_1_addr_1_reg_1660_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_1_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_1_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_1_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_1_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_2_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_2_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_2_addr_1_reg_1671_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_2_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_2_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_2_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_2_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_3_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_3_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_3_addr_1_reg_1682_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_3_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_3_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_3_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_3_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_4_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_4_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_4_addr_1_reg_1693_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_4_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_4_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_4_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_4_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_5_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_5_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_5_addr_1_reg_1704_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_5_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_5_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_5_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_5_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_6_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_6_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_6_addr_1_reg_1715_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_6_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_6_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_6_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_6_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_7_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_7_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_7_addr_1_reg_1726_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_7_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_7_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_7_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_7_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_8_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_8_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_8_addr_1_reg_1737_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_8_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_8_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_8_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_8_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_9_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_932_p1 );
    sensitive << ( tmp_8_fu_1011_p1 );

    SC_METHOD(thread_sum_pix_ch0_9_address1);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( sum_pix_ch0_9_addr_1_reg_1748_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( tmp_s_fu_1355_p1 );

    SC_METHOD(thread_sum_pix_ch0_9_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_pix_ch0_9_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_ch0_9_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_920_p2 );

    SC_METHOD(thread_sum_pix_ch0_9_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_1625_pp1_iter3_reg );
    sensitive << ( ap_enable_reg_pp1_iter4 );

    SC_METHOD(thread_sum_pix_tot_data_V_1_fu_1589_p1);
    sensitive << ( tmp_fu_1553_p17 );

    SC_METHOD(thread_sum_pix_tot_data_V_s_fu_1383_p17);
    sensitive << ( reg_840 );
    sensitive << ( reg_845 );
    sensitive << ( reg_850 );
    sensitive << ( reg_855 );
    sensitive << ( reg_860 );
    sensitive << ( reg_865 );
    sensitive << ( reg_870 );
    sensitive << ( reg_875 );
    sensitive << ( reg_880 );
    sensitive << ( reg_885 );
    sensitive << ( reg_890 );
    sensitive << ( reg_895 );
    sensitive << ( reg_900 );
    sensitive << ( reg_905 );
    sensitive << ( reg_910 );
    sensitive << ( reg_915 );

    SC_METHOD(thread_tmp_10_fu_952_p3);
    sensitive << ( N_ADDS_read_reg_1606 );

    SC_METHOD(thread_tmp_11_fu_963_p3);
    sensitive << ( N_ADDS_read_reg_1606 );

    SC_METHOD(thread_tmp_12_fu_1034_p1);
    sensitive << ( in_stream0_V_data_V_0_data_out );

    SC_METHOD(thread_tmp_1_fu_932_p1);
    sensitive << ( i_reg_796 );

    SC_METHOD(thread_tmp_28_10_fu_1287_p1);
    sensitive << ( phitmp_10_reg_1765_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_11_fu_1296_p1);
    sensitive << ( phitmp_11_reg_1776_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_12_fu_1305_p1);
    sensitive << ( phitmp_12_reg_1787_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_13_fu_1314_p1);
    sensitive << ( phitmp_13_reg_1798_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_14_fu_1323_p1);
    sensitive << ( phitmp_14_reg_1809_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_1_fu_1197_p1);
    sensitive << ( phitmp_1_reg_1655_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_2_fu_1206_p1);
    sensitive << ( phitmp_2_reg_1666_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_3_fu_1215_p1);
    sensitive << ( phitmp_3_reg_1677_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_4_fu_1224_p1);
    sensitive << ( phitmp_4_reg_1688_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_5_fu_1233_p1);
    sensitive << ( phitmp_5_reg_1699_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_6_fu_1242_p1);
    sensitive << ( phitmp_6_reg_1710_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_7_fu_1251_p1);
    sensitive << ( phitmp_7_reg_1721_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_8_fu_1260_p1);
    sensitive << ( phitmp_8_reg_1732_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_9_fu_1269_p1);
    sensitive << ( phitmp_9_reg_1743_pp1_iter2_reg );

    SC_METHOD(thread_tmp_28_s_fu_1278_p1);
    sensitive << ( phitmp_s_reg_1754_pp1_iter2_reg );

    SC_METHOD(thread_tmp_29_10_fu_1290_p2);
    sensitive << ( reg_895 );
    sensitive << ( tmp_28_10_fu_1287_p1 );

    SC_METHOD(thread_tmp_29_11_fu_1299_p2);
    sensitive << ( reg_900 );
    sensitive << ( tmp_28_11_fu_1296_p1 );

    SC_METHOD(thread_tmp_29_12_fu_1308_p2);
    sensitive << ( reg_905 );
    sensitive << ( tmp_28_12_fu_1305_p1 );

    SC_METHOD(thread_tmp_29_13_fu_1317_p2);
    sensitive << ( reg_910 );
    sensitive << ( tmp_28_13_fu_1314_p1 );

    SC_METHOD(thread_tmp_29_14_fu_1326_p2);
    sensitive << ( reg_915 );
    sensitive << ( tmp_28_14_fu_1323_p1 );

    SC_METHOD(thread_tmp_29_1_fu_1200_p2);
    sensitive << ( reg_845 );
    sensitive << ( tmp_28_1_fu_1197_p1 );

    SC_METHOD(thread_tmp_29_2_fu_1209_p2);
    sensitive << ( reg_850 );
    sensitive << ( tmp_28_2_fu_1206_p1 );

    SC_METHOD(thread_tmp_29_3_fu_1218_p2);
    sensitive << ( reg_855 );
    sensitive << ( tmp_28_3_fu_1215_p1 );

    SC_METHOD(thread_tmp_29_4_fu_1227_p2);
    sensitive << ( reg_860 );
    sensitive << ( tmp_28_4_fu_1224_p1 );

    SC_METHOD(thread_tmp_29_5_fu_1236_p2);
    sensitive << ( reg_865 );
    sensitive << ( tmp_28_5_fu_1233_p1 );

    SC_METHOD(thread_tmp_29_6_fu_1245_p2);
    sensitive << ( reg_870 );
    sensitive << ( tmp_28_6_fu_1242_p1 );

    SC_METHOD(thread_tmp_29_7_fu_1254_p2);
    sensitive << ( reg_875 );
    sensitive << ( tmp_28_7_fu_1251_p1 );

    SC_METHOD(thread_tmp_29_8_fu_1263_p2);
    sensitive << ( reg_880 );
    sensitive << ( tmp_28_8_fu_1260_p1 );

    SC_METHOD(thread_tmp_29_9_fu_1272_p2);
    sensitive << ( reg_885 );
    sensitive << ( tmp_28_9_fu_1269_p1 );

    SC_METHOD(thread_tmp_29_s_fu_1281_p2);
    sensitive << ( reg_890 );
    sensitive << ( tmp_28_s_fu_1278_p1 );

    SC_METHOD(thread_tmp_2_fu_1332_p2);
    sensitive << ( TEST_MODE_read_reg_1601 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_tmp_3_cast_fu_1419_p1);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_tmp_3_fu_1375_p3);
    sensitive << ( i_2_reg_829 );

    SC_METHOD(thread_tmp_6_fu_1188_p1);
    sensitive << ( tmp_12_reg_1644_pp1_iter2_reg );

    SC_METHOD(thread_tmp_8_fu_1011_p1);
    sensitive << ( i_1_mid2_reg_1634 );

    SC_METHOD(thread_tmp_9_fu_1191_p2);
    sensitive << ( reg_840 );
    sensitive << ( tmp_6_fu_1188_p1 );

    SC_METHOD(thread_tmp_data_V_1_fu_1593_p3);
    sensitive << ( tmp_2_reg_1900 );
    sensitive << ( sum_pix_tot_data_V_s_fu_1383_p17 );
    sensitive << ( sum_pix_tot_data_V_1_fu_1589_p1 );

    SC_METHOD(thread_tmp_fu_1553_p17);
    sensitive << ( val_assign_1_14_fu_1548_p2 );
    sensitive << ( val_assign_1_13_cast_fu_1544_p1 );
    sensitive << ( val_assign_1_12_cast_fu_1535_p1 );
    sensitive << ( val_assign_1_11_cast_fu_1526_p1 );
    sensitive << ( val_assign_1_10_cast_fu_1517_p1 );
    sensitive << ( val_assign_1_9_cast_fu_1508_p1 );
    sensitive << ( val_assign_1_8_cast_fu_1499_p1 );
    sensitive << ( val_assign_1_7_cast_fu_1490_p1 );
    sensitive << ( val_assign_1_6_cast_fu_1481_p1 );
    sensitive << ( val_assign_1_5_cast_fu_1472_p1 );
    sensitive << ( val_assign_1_4_cast_fu_1463_p1 );
    sensitive << ( val_assign_1_3_cast_fu_1454_p1 );
    sensitive << ( val_assign_1_2_cast_fu_1445_p1 );
    sensitive << ( val_assign_1_1_cast_fu_1436_p1 );
    sensitive << ( val_assign_1_cast_fu_1427_p1 );
    sensitive << ( tmp_3_cast_fu_1419_p1 );

    SC_METHOD(thread_tmp_last_V_fu_1349_p2);
    sensitive << ( i_2_reg_829 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( exitcond4_fu_1337_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_tmp_s_fu_1355_p1);
    sensitive << ( i_2_reg_829 );

    SC_METHOD(thread_val_assign_1_10_cast_fu_1517_p1);
    sensitive << ( val_assign_1_10_fu_1512_p2 );

    SC_METHOD(thread_val_assign_1_10_fu_1512_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_11_cast_fu_1526_p1);
    sensitive << ( val_assign_1_11_fu_1521_p2 );

    SC_METHOD(thread_val_assign_1_11_fu_1521_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_12_cast_fu_1535_p1);
    sensitive << ( val_assign_1_12_fu_1530_p2 );

    SC_METHOD(thread_val_assign_1_12_fu_1530_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_13_cast_fu_1544_p1);
    sensitive << ( val_assign_1_13_fu_1539_p2 );

    SC_METHOD(thread_val_assign_1_13_fu_1539_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_14_fu_1548_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_1_cast_fu_1436_p1);
    sensitive << ( val_assign_1_1_fu_1431_p2 );

    SC_METHOD(thread_val_assign_1_1_fu_1431_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_2_cast_fu_1445_p1);
    sensitive << ( val_assign_1_2_fu_1440_p2 );

    SC_METHOD(thread_val_assign_1_2_fu_1440_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_3_cast_fu_1454_p1);
    sensitive << ( val_assign_1_3_fu_1449_p2 );

    SC_METHOD(thread_val_assign_1_3_fu_1449_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_4_cast_fu_1463_p1);
    sensitive << ( val_assign_1_4_fu_1458_p2 );

    SC_METHOD(thread_val_assign_1_4_fu_1458_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_5_cast_fu_1472_p1);
    sensitive << ( val_assign_1_5_fu_1467_p2 );

    SC_METHOD(thread_val_assign_1_5_fu_1467_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_6_cast_fu_1481_p1);
    sensitive << ( val_assign_1_6_fu_1476_p2 );

    SC_METHOD(thread_val_assign_1_6_fu_1476_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_7_cast_fu_1490_p1);
    sensitive << ( val_assign_1_7_fu_1485_p2 );

    SC_METHOD(thread_val_assign_1_7_fu_1485_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_8_cast_fu_1499_p1);
    sensitive << ( val_assign_1_8_fu_1494_p2 );

    SC_METHOD(thread_val_assign_1_8_fu_1494_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_9_cast_fu_1508_p1);
    sensitive << ( val_assign_1_9_fu_1503_p2 );

    SC_METHOD(thread_val_assign_1_9_fu_1503_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_val_assign_1_cast_fu_1427_p1);
    sensitive << ( val_assign_1_s_fu_1422_p2 );

    SC_METHOD(thread_val_assign_1_s_fu_1422_p2);
    sensitive << ( tmp_3_reg_1999_pp2_iter1_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_stream_V_data_V_1_ack_in );
    sensitive << ( out_stream_V_keep_V_1_ack_in );
    sensitive << ( out_stream_V_strb_V_1_ack_in );
    sensitive << ( out_stream_V_user_V_1_ack_in );
    sensitive << ( out_stream_V_last_V_1_ack_in );
    sensitive << ( out_stream_V_id_V_1_ack_in );
    sensitive << ( out_stream_V_dest_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_980_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( exitcond4_fu_1337_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( exitcond1_fu_920_p2 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000001";
    in_stream0_V_data_V_0_sel_rd = SC_LOGIC_0;
    in_stream0_V_data_V_0_sel_wr = SC_LOGIC_0;
    in_stream0_V_data_V_0_state = "00";
    in_stream0_V_dest_V_0_state = "00";
    out_stream_V_data_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_data_V_1_sel_wr = SC_LOGIC_0;
    out_stream_V_data_V_1_state = "00";
    out_stream_V_keep_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_keep_V_1_state = "00";
    out_stream_V_strb_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_strb_V_1_state = "00";
    out_stream_V_user_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_user_V_1_state = "00";
    out_stream_V_last_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_last_V_1_sel_wr = SC_LOGIC_0;
    out_stream_V_last_V_1_state = "00";
    out_stream_V_id_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_id_V_1_state = "00";
    out_stream_V_dest_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_dest_V_1_state = "00";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter4 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "scurve_adder36_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_stream0_TDATA, "(port)in_stream0_TDATA");
    sc_trace(mVcdFile, in_stream0_TVALID, "(port)in_stream0_TVALID");
    sc_trace(mVcdFile, in_stream0_TREADY, "(port)in_stream0_TREADY");
    sc_trace(mVcdFile, in_stream0_TKEEP, "(port)in_stream0_TKEEP");
    sc_trace(mVcdFile, in_stream0_TSTRB, "(port)in_stream0_TSTRB");
    sc_trace(mVcdFile, in_stream0_TUSER, "(port)in_stream0_TUSER");
    sc_trace(mVcdFile, in_stream0_TLAST, "(port)in_stream0_TLAST");
    sc_trace(mVcdFile, in_stream0_TID, "(port)in_stream0_TID");
    sc_trace(mVcdFile, in_stream0_TDEST, "(port)in_stream0_TDEST");
    sc_trace(mVcdFile, out_stream_TDATA, "(port)out_stream_TDATA");
    sc_trace(mVcdFile, out_stream_TVALID, "(port)out_stream_TVALID");
    sc_trace(mVcdFile, out_stream_TREADY, "(port)out_stream_TREADY");
    sc_trace(mVcdFile, out_stream_TKEEP, "(port)out_stream_TKEEP");
    sc_trace(mVcdFile, out_stream_TSTRB, "(port)out_stream_TSTRB");
    sc_trace(mVcdFile, out_stream_TUSER, "(port)out_stream_TUSER");
    sc_trace(mVcdFile, out_stream_TLAST, "(port)out_stream_TLAST");
    sc_trace(mVcdFile, out_stream_TID, "(port)out_stream_TID");
    sc_trace(mVcdFile, out_stream_TDEST, "(port)out_stream_TDEST");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWVALID, "(port)s_axi_CTRL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWREADY, "(port)s_axi_CTRL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWADDR, "(port)s_axi_CTRL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WVALID, "(port)s_axi_CTRL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WREADY, "(port)s_axi_CTRL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WDATA, "(port)s_axi_CTRL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WSTRB, "(port)s_axi_CTRL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARVALID, "(port)s_axi_CTRL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARREADY, "(port)s_axi_CTRL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARADDR, "(port)s_axi_CTRL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RVALID, "(port)s_axi_CTRL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RREADY, "(port)s_axi_CTRL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RDATA, "(port)s_axi_CTRL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RRESP, "(port)s_axi_CTRL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BVALID, "(port)s_axi_CTRL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BREADY, "(port)s_axi_CTRL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BRESP, "(port)s_axi_CTRL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_data_out, "in_stream0_V_data_V_0_data_out");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_vld_in, "in_stream0_V_data_V_0_vld_in");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_vld_out, "in_stream0_V_data_V_0_vld_out");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_ack_in, "in_stream0_V_data_V_0_ack_in");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_ack_out, "in_stream0_V_data_V_0_ack_out");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_payload_A, "in_stream0_V_data_V_0_payload_A");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_payload_B, "in_stream0_V_data_V_0_payload_B");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_sel_rd, "in_stream0_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_sel_wr, "in_stream0_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_sel, "in_stream0_V_data_V_0_sel");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_load_A, "in_stream0_V_data_V_0_load_A");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_load_B, "in_stream0_V_data_V_0_load_B");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_state, "in_stream0_V_data_V_0_state");
    sc_trace(mVcdFile, in_stream0_V_data_V_0_state_cmp_full, "in_stream0_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_stream0_V_dest_V_0_vld_in, "in_stream0_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, in_stream0_V_dest_V_0_ack_out, "in_stream0_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, in_stream0_V_dest_V_0_state, "in_stream0_V_dest_V_0_state");
    sc_trace(mVcdFile, out_stream_V_data_V_1_data_out, "out_stream_V_data_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_data_V_1_vld_in, "out_stream_V_data_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_data_V_1_vld_out, "out_stream_V_data_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_data_V_1_ack_in, "out_stream_V_data_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_data_V_1_ack_out, "out_stream_V_data_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_data_V_1_payload_A, "out_stream_V_data_V_1_payload_A");
    sc_trace(mVcdFile, out_stream_V_data_V_1_payload_B, "out_stream_V_data_V_1_payload_B");
    sc_trace(mVcdFile, out_stream_V_data_V_1_sel_rd, "out_stream_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_data_V_1_sel_wr, "out_stream_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, out_stream_V_data_V_1_sel, "out_stream_V_data_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_data_V_1_load_A, "out_stream_V_data_V_1_load_A");
    sc_trace(mVcdFile, out_stream_V_data_V_1_load_B, "out_stream_V_data_V_1_load_B");
    sc_trace(mVcdFile, out_stream_V_data_V_1_state, "out_stream_V_data_V_1_state");
    sc_trace(mVcdFile, out_stream_V_data_V_1_state_cmp_full, "out_stream_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_data_out, "out_stream_V_keep_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_vld_in, "out_stream_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_vld_out, "out_stream_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_ack_in, "out_stream_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_ack_out, "out_stream_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_sel_rd, "out_stream_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_sel, "out_stream_V_keep_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_keep_V_1_state, "out_stream_V_keep_V_1_state");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_data_out, "out_stream_V_strb_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_vld_in, "out_stream_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_vld_out, "out_stream_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_ack_in, "out_stream_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_ack_out, "out_stream_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_sel_rd, "out_stream_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_sel, "out_stream_V_strb_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_strb_V_1_state, "out_stream_V_strb_V_1_state");
    sc_trace(mVcdFile, out_stream_V_user_V_1_data_out, "out_stream_V_user_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_user_V_1_vld_in, "out_stream_V_user_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_user_V_1_vld_out, "out_stream_V_user_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_user_V_1_ack_in, "out_stream_V_user_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_user_V_1_ack_out, "out_stream_V_user_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_user_V_1_sel_rd, "out_stream_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_user_V_1_sel, "out_stream_V_user_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_user_V_1_state, "out_stream_V_user_V_1_state");
    sc_trace(mVcdFile, out_stream_V_last_V_1_data_out, "out_stream_V_last_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_last_V_1_vld_in, "out_stream_V_last_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_last_V_1_vld_out, "out_stream_V_last_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_last_V_1_ack_in, "out_stream_V_last_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_last_V_1_ack_out, "out_stream_V_last_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_last_V_1_payload_A, "out_stream_V_last_V_1_payload_A");
    sc_trace(mVcdFile, out_stream_V_last_V_1_payload_B, "out_stream_V_last_V_1_payload_B");
    sc_trace(mVcdFile, out_stream_V_last_V_1_sel_rd, "out_stream_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_last_V_1_sel_wr, "out_stream_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, out_stream_V_last_V_1_sel, "out_stream_V_last_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_last_V_1_load_A, "out_stream_V_last_V_1_load_A");
    sc_trace(mVcdFile, out_stream_V_last_V_1_load_B, "out_stream_V_last_V_1_load_B");
    sc_trace(mVcdFile, out_stream_V_last_V_1_state, "out_stream_V_last_V_1_state");
    sc_trace(mVcdFile, out_stream_V_last_V_1_state_cmp_full, "out_stream_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_stream_V_id_V_1_data_out, "out_stream_V_id_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_id_V_1_vld_in, "out_stream_V_id_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_id_V_1_vld_out, "out_stream_V_id_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_id_V_1_ack_in, "out_stream_V_id_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_id_V_1_ack_out, "out_stream_V_id_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_id_V_1_sel_rd, "out_stream_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_id_V_1_sel, "out_stream_V_id_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_id_V_1_state, "out_stream_V_id_V_1_state");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_data_out, "out_stream_V_dest_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_vld_in, "out_stream_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_vld_out, "out_stream_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_ack_in, "out_stream_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_ack_out, "out_stream_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_sel_rd, "out_stream_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_sel, "out_stream_V_dest_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_dest_V_1_state, "out_stream_V_dest_V_1_state");
    sc_trace(mVcdFile, N_ADDS, "N_ADDS");
    sc_trace(mVcdFile, TEST_MODE, "TEST_MODE");
    sc_trace(mVcdFile, in_stream0_TDATA_blk_n, "in_stream0_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, exitcond_flatten_reg_1625, "exitcond_flatten_reg_1625");
    sc_trace(mVcdFile, out_stream_TDATA_blk_n, "out_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter2, "ap_enable_reg_pp2_iter2");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, exitcond4_reg_1905, "exitcond4_reg_1905");
    sc_trace(mVcdFile, exitcond4_reg_1905_pp2_iter1_reg, "exitcond4_reg_1905_pp2_iter1_reg");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter3, "ap_enable_reg_pp2_iter3");
    sc_trace(mVcdFile, exitcond4_reg_1905_pp2_iter2_reg, "exitcond4_reg_1905_pp2_iter2_reg");
    sc_trace(mVcdFile, indvar_flatten_reg_807, "indvar_flatten_reg_807");
    sc_trace(mVcdFile, i_1_reg_818, "i_1_reg_818");
    sc_trace(mVcdFile, i_2_reg_829, "i_2_reg_829");
    sc_trace(mVcdFile, sum_pix_ch0_0_q0, "sum_pix_ch0_0_q0");
    sc_trace(mVcdFile, reg_840, "reg_840");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp1_stage0_iter0, "ap_block_state4_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter1, "ap_block_state5_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter2, "ap_block_state6_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state7_pp1_stage0_iter3, "ap_block_state7_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state8_pp1_stage0_iter4, "ap_block_state8_pp1_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten_reg_1625_pp1_iter1_reg, "exitcond_flatten_reg_1625_pp1_iter1_reg");
    sc_trace(mVcdFile, sum_pix_ch0_0_q1, "sum_pix_ch0_0_q1");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_state10_pp2_stage0_iter0, "ap_block_state10_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp2_stage0_iter1, "ap_block_state11_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state12_pp2_stage0_iter2, "ap_block_state12_pp2_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state12_io, "ap_block_state12_io");
    sc_trace(mVcdFile, ap_block_state13_pp2_stage0_iter3, "ap_block_state13_pp2_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state13_io, "ap_block_state13_io");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, tmp_2_reg_1900, "tmp_2_reg_1900");
    sc_trace(mVcdFile, sum_pix_ch0_1_q0, "sum_pix_ch0_1_q0");
    sc_trace(mVcdFile, reg_845, "reg_845");
    sc_trace(mVcdFile, sum_pix_ch0_1_q1, "sum_pix_ch0_1_q1");
    sc_trace(mVcdFile, sum_pix_ch0_2_q0, "sum_pix_ch0_2_q0");
    sc_trace(mVcdFile, reg_850, "reg_850");
    sc_trace(mVcdFile, sum_pix_ch0_2_q1, "sum_pix_ch0_2_q1");
    sc_trace(mVcdFile, sum_pix_ch0_3_q0, "sum_pix_ch0_3_q0");
    sc_trace(mVcdFile, reg_855, "reg_855");
    sc_trace(mVcdFile, sum_pix_ch0_3_q1, "sum_pix_ch0_3_q1");
    sc_trace(mVcdFile, sum_pix_ch0_4_q0, "sum_pix_ch0_4_q0");
    sc_trace(mVcdFile, reg_860, "reg_860");
    sc_trace(mVcdFile, sum_pix_ch0_4_q1, "sum_pix_ch0_4_q1");
    sc_trace(mVcdFile, sum_pix_ch0_5_q0, "sum_pix_ch0_5_q0");
    sc_trace(mVcdFile, reg_865, "reg_865");
    sc_trace(mVcdFile, sum_pix_ch0_5_q1, "sum_pix_ch0_5_q1");
    sc_trace(mVcdFile, sum_pix_ch0_6_q0, "sum_pix_ch0_6_q0");
    sc_trace(mVcdFile, reg_870, "reg_870");
    sc_trace(mVcdFile, sum_pix_ch0_6_q1, "sum_pix_ch0_6_q1");
    sc_trace(mVcdFile, sum_pix_ch0_7_q0, "sum_pix_ch0_7_q0");
    sc_trace(mVcdFile, reg_875, "reg_875");
    sc_trace(mVcdFile, sum_pix_ch0_7_q1, "sum_pix_ch0_7_q1");
    sc_trace(mVcdFile, sum_pix_ch0_8_q0, "sum_pix_ch0_8_q0");
    sc_trace(mVcdFile, reg_880, "reg_880");
    sc_trace(mVcdFile, sum_pix_ch0_8_q1, "sum_pix_ch0_8_q1");
    sc_trace(mVcdFile, sum_pix_ch0_9_q0, "sum_pix_ch0_9_q0");
    sc_trace(mVcdFile, reg_885, "reg_885");
    sc_trace(mVcdFile, sum_pix_ch0_9_q1, "sum_pix_ch0_9_q1");
    sc_trace(mVcdFile, sum_pix_ch0_10_q0, "sum_pix_ch0_10_q0");
    sc_trace(mVcdFile, reg_890, "reg_890");
    sc_trace(mVcdFile, sum_pix_ch0_10_q1, "sum_pix_ch0_10_q1");
    sc_trace(mVcdFile, sum_pix_ch0_11_q0, "sum_pix_ch0_11_q0");
    sc_trace(mVcdFile, reg_895, "reg_895");
    sc_trace(mVcdFile, sum_pix_ch0_11_q1, "sum_pix_ch0_11_q1");
    sc_trace(mVcdFile, sum_pix_ch0_12_q0, "sum_pix_ch0_12_q0");
    sc_trace(mVcdFile, reg_900, "reg_900");
    sc_trace(mVcdFile, sum_pix_ch0_12_q1, "sum_pix_ch0_12_q1");
    sc_trace(mVcdFile, sum_pix_ch0_13_q0, "sum_pix_ch0_13_q0");
    sc_trace(mVcdFile, reg_905, "reg_905");
    sc_trace(mVcdFile, sum_pix_ch0_13_q1, "sum_pix_ch0_13_q1");
    sc_trace(mVcdFile, sum_pix_ch0_14_q0, "sum_pix_ch0_14_q0");
    sc_trace(mVcdFile, reg_910, "reg_910");
    sc_trace(mVcdFile, sum_pix_ch0_14_q1, "sum_pix_ch0_14_q1");
    sc_trace(mVcdFile, sum_pix_ch0_15_q0, "sum_pix_ch0_15_q0");
    sc_trace(mVcdFile, reg_915, "reg_915");
    sc_trace(mVcdFile, sum_pix_ch0_15_q1, "sum_pix_ch0_15_q1");
    sc_trace(mVcdFile, TEST_MODE_read_reg_1601, "TEST_MODE_read_reg_1601");
    sc_trace(mVcdFile, N_ADDS_read_reg_1606, "N_ADDS_read_reg_1606");
    sc_trace(mVcdFile, i_3_fu_926_p2, "i_3_fu_926_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, bound_fu_974_p2, "bound_fu_974_p2");
    sc_trace(mVcdFile, bound_reg_1620, "bound_reg_1620");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond_flatten_fu_980_p2, "exitcond_flatten_fu_980_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_1625_pp1_iter2_reg, "exitcond_flatten_reg_1625_pp1_iter2_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_1625_pp1_iter3_reg, "exitcond_flatten_reg_1625_pp1_iter3_reg");
    sc_trace(mVcdFile, indvar_flatten_next_fu_985_p2, "indvar_flatten_next_fu_985_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, i_1_mid2_fu_997_p3, "i_1_mid2_fu_997_p3");
    sc_trace(mVcdFile, i_1_mid2_reg_1634, "i_1_mid2_reg_1634");
    sc_trace(mVcdFile, i_4_fu_1005_p2, "i_4_fu_1005_p2");
    sc_trace(mVcdFile, tmp_12_fu_1034_p1, "tmp_12_fu_1034_p1");
    sc_trace(mVcdFile, tmp_12_reg_1644, "tmp_12_reg_1644");
    sc_trace(mVcdFile, tmp_12_reg_1644_pp1_iter2_reg, "tmp_12_reg_1644_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_0_addr_1_reg_1649, "sum_pix_ch0_0_addr_1_reg_1649");
    sc_trace(mVcdFile, sum_pix_ch0_0_addr_1_reg_1649_pp1_iter2_reg, "sum_pix_ch0_0_addr_1_reg_1649_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_0_addr_1_reg_1649_pp1_iter3_reg, "sum_pix_ch0_0_addr_1_reg_1649_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_1_reg_1655, "phitmp_1_reg_1655");
    sc_trace(mVcdFile, phitmp_1_reg_1655_pp1_iter2_reg, "phitmp_1_reg_1655_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_1_addr_1_reg_1660, "sum_pix_ch0_1_addr_1_reg_1660");
    sc_trace(mVcdFile, sum_pix_ch0_1_addr_1_reg_1660_pp1_iter2_reg, "sum_pix_ch0_1_addr_1_reg_1660_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_1_addr_1_reg_1660_pp1_iter3_reg, "sum_pix_ch0_1_addr_1_reg_1660_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_2_reg_1666, "phitmp_2_reg_1666");
    sc_trace(mVcdFile, phitmp_2_reg_1666_pp1_iter2_reg, "phitmp_2_reg_1666_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_2_addr_1_reg_1671, "sum_pix_ch0_2_addr_1_reg_1671");
    sc_trace(mVcdFile, sum_pix_ch0_2_addr_1_reg_1671_pp1_iter2_reg, "sum_pix_ch0_2_addr_1_reg_1671_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_2_addr_1_reg_1671_pp1_iter3_reg, "sum_pix_ch0_2_addr_1_reg_1671_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_3_reg_1677, "phitmp_3_reg_1677");
    sc_trace(mVcdFile, phitmp_3_reg_1677_pp1_iter2_reg, "phitmp_3_reg_1677_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_3_addr_1_reg_1682, "sum_pix_ch0_3_addr_1_reg_1682");
    sc_trace(mVcdFile, sum_pix_ch0_3_addr_1_reg_1682_pp1_iter2_reg, "sum_pix_ch0_3_addr_1_reg_1682_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_3_addr_1_reg_1682_pp1_iter3_reg, "sum_pix_ch0_3_addr_1_reg_1682_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_4_reg_1688, "phitmp_4_reg_1688");
    sc_trace(mVcdFile, phitmp_4_reg_1688_pp1_iter2_reg, "phitmp_4_reg_1688_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_4_addr_1_reg_1693, "sum_pix_ch0_4_addr_1_reg_1693");
    sc_trace(mVcdFile, sum_pix_ch0_4_addr_1_reg_1693_pp1_iter2_reg, "sum_pix_ch0_4_addr_1_reg_1693_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_4_addr_1_reg_1693_pp1_iter3_reg, "sum_pix_ch0_4_addr_1_reg_1693_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_5_reg_1699, "phitmp_5_reg_1699");
    sc_trace(mVcdFile, phitmp_5_reg_1699_pp1_iter2_reg, "phitmp_5_reg_1699_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_5_addr_1_reg_1704, "sum_pix_ch0_5_addr_1_reg_1704");
    sc_trace(mVcdFile, sum_pix_ch0_5_addr_1_reg_1704_pp1_iter2_reg, "sum_pix_ch0_5_addr_1_reg_1704_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_5_addr_1_reg_1704_pp1_iter3_reg, "sum_pix_ch0_5_addr_1_reg_1704_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_6_reg_1710, "phitmp_6_reg_1710");
    sc_trace(mVcdFile, phitmp_6_reg_1710_pp1_iter2_reg, "phitmp_6_reg_1710_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_6_addr_1_reg_1715, "sum_pix_ch0_6_addr_1_reg_1715");
    sc_trace(mVcdFile, sum_pix_ch0_6_addr_1_reg_1715_pp1_iter2_reg, "sum_pix_ch0_6_addr_1_reg_1715_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_6_addr_1_reg_1715_pp1_iter3_reg, "sum_pix_ch0_6_addr_1_reg_1715_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_7_reg_1721, "phitmp_7_reg_1721");
    sc_trace(mVcdFile, phitmp_7_reg_1721_pp1_iter2_reg, "phitmp_7_reg_1721_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_7_addr_1_reg_1726, "sum_pix_ch0_7_addr_1_reg_1726");
    sc_trace(mVcdFile, sum_pix_ch0_7_addr_1_reg_1726_pp1_iter2_reg, "sum_pix_ch0_7_addr_1_reg_1726_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_7_addr_1_reg_1726_pp1_iter3_reg, "sum_pix_ch0_7_addr_1_reg_1726_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_8_reg_1732, "phitmp_8_reg_1732");
    sc_trace(mVcdFile, phitmp_8_reg_1732_pp1_iter2_reg, "phitmp_8_reg_1732_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_8_addr_1_reg_1737, "sum_pix_ch0_8_addr_1_reg_1737");
    sc_trace(mVcdFile, sum_pix_ch0_8_addr_1_reg_1737_pp1_iter2_reg, "sum_pix_ch0_8_addr_1_reg_1737_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_8_addr_1_reg_1737_pp1_iter3_reg, "sum_pix_ch0_8_addr_1_reg_1737_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_9_reg_1743, "phitmp_9_reg_1743");
    sc_trace(mVcdFile, phitmp_9_reg_1743_pp1_iter2_reg, "phitmp_9_reg_1743_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_9_addr_1_reg_1748, "sum_pix_ch0_9_addr_1_reg_1748");
    sc_trace(mVcdFile, sum_pix_ch0_9_addr_1_reg_1748_pp1_iter2_reg, "sum_pix_ch0_9_addr_1_reg_1748_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_9_addr_1_reg_1748_pp1_iter3_reg, "sum_pix_ch0_9_addr_1_reg_1748_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_s_reg_1754, "phitmp_s_reg_1754");
    sc_trace(mVcdFile, phitmp_s_reg_1754_pp1_iter2_reg, "phitmp_s_reg_1754_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_10_addr_1_reg_1759, "sum_pix_ch0_10_addr_1_reg_1759");
    sc_trace(mVcdFile, sum_pix_ch0_10_addr_1_reg_1759_pp1_iter2_reg, "sum_pix_ch0_10_addr_1_reg_1759_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_10_addr_1_reg_1759_pp1_iter3_reg, "sum_pix_ch0_10_addr_1_reg_1759_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_10_reg_1765, "phitmp_10_reg_1765");
    sc_trace(mVcdFile, phitmp_10_reg_1765_pp1_iter2_reg, "phitmp_10_reg_1765_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_11_addr_1_reg_1770, "sum_pix_ch0_11_addr_1_reg_1770");
    sc_trace(mVcdFile, sum_pix_ch0_11_addr_1_reg_1770_pp1_iter2_reg, "sum_pix_ch0_11_addr_1_reg_1770_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_11_addr_1_reg_1770_pp1_iter3_reg, "sum_pix_ch0_11_addr_1_reg_1770_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_11_reg_1776, "phitmp_11_reg_1776");
    sc_trace(mVcdFile, phitmp_11_reg_1776_pp1_iter2_reg, "phitmp_11_reg_1776_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_12_addr_1_reg_1781, "sum_pix_ch0_12_addr_1_reg_1781");
    sc_trace(mVcdFile, sum_pix_ch0_12_addr_1_reg_1781_pp1_iter2_reg, "sum_pix_ch0_12_addr_1_reg_1781_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_12_addr_1_reg_1781_pp1_iter3_reg, "sum_pix_ch0_12_addr_1_reg_1781_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_12_reg_1787, "phitmp_12_reg_1787");
    sc_trace(mVcdFile, phitmp_12_reg_1787_pp1_iter2_reg, "phitmp_12_reg_1787_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_13_addr_1_reg_1792, "sum_pix_ch0_13_addr_1_reg_1792");
    sc_trace(mVcdFile, sum_pix_ch0_13_addr_1_reg_1792_pp1_iter2_reg, "sum_pix_ch0_13_addr_1_reg_1792_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_13_addr_1_reg_1792_pp1_iter3_reg, "sum_pix_ch0_13_addr_1_reg_1792_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_13_reg_1798, "phitmp_13_reg_1798");
    sc_trace(mVcdFile, phitmp_13_reg_1798_pp1_iter2_reg, "phitmp_13_reg_1798_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_14_addr_1_reg_1803, "sum_pix_ch0_14_addr_1_reg_1803");
    sc_trace(mVcdFile, sum_pix_ch0_14_addr_1_reg_1803_pp1_iter2_reg, "sum_pix_ch0_14_addr_1_reg_1803_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_14_addr_1_reg_1803_pp1_iter3_reg, "sum_pix_ch0_14_addr_1_reg_1803_pp1_iter3_reg");
    sc_trace(mVcdFile, phitmp_14_reg_1809, "phitmp_14_reg_1809");
    sc_trace(mVcdFile, phitmp_14_reg_1809_pp1_iter2_reg, "phitmp_14_reg_1809_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_15_addr_1_reg_1814, "sum_pix_ch0_15_addr_1_reg_1814");
    sc_trace(mVcdFile, sum_pix_ch0_15_addr_1_reg_1814_pp1_iter2_reg, "sum_pix_ch0_15_addr_1_reg_1814_pp1_iter2_reg");
    sc_trace(mVcdFile, sum_pix_ch0_15_addr_1_reg_1814_pp1_iter3_reg, "sum_pix_ch0_15_addr_1_reg_1814_pp1_iter3_reg");
    sc_trace(mVcdFile, tmp_9_fu_1191_p2, "tmp_9_fu_1191_p2");
    sc_trace(mVcdFile, tmp_9_reg_1820, "tmp_9_reg_1820");
    sc_trace(mVcdFile, tmp_29_1_fu_1200_p2, "tmp_29_1_fu_1200_p2");
    sc_trace(mVcdFile, tmp_29_1_reg_1825, "tmp_29_1_reg_1825");
    sc_trace(mVcdFile, tmp_29_2_fu_1209_p2, "tmp_29_2_fu_1209_p2");
    sc_trace(mVcdFile, tmp_29_2_reg_1830, "tmp_29_2_reg_1830");
    sc_trace(mVcdFile, tmp_29_3_fu_1218_p2, "tmp_29_3_fu_1218_p2");
    sc_trace(mVcdFile, tmp_29_3_reg_1835, "tmp_29_3_reg_1835");
    sc_trace(mVcdFile, tmp_29_4_fu_1227_p2, "tmp_29_4_fu_1227_p2");
    sc_trace(mVcdFile, tmp_29_4_reg_1840, "tmp_29_4_reg_1840");
    sc_trace(mVcdFile, tmp_29_5_fu_1236_p2, "tmp_29_5_fu_1236_p2");
    sc_trace(mVcdFile, tmp_29_5_reg_1845, "tmp_29_5_reg_1845");
    sc_trace(mVcdFile, tmp_29_6_fu_1245_p2, "tmp_29_6_fu_1245_p2");
    sc_trace(mVcdFile, tmp_29_6_reg_1850, "tmp_29_6_reg_1850");
    sc_trace(mVcdFile, tmp_29_7_fu_1254_p2, "tmp_29_7_fu_1254_p2");
    sc_trace(mVcdFile, tmp_29_7_reg_1855, "tmp_29_7_reg_1855");
    sc_trace(mVcdFile, tmp_29_8_fu_1263_p2, "tmp_29_8_fu_1263_p2");
    sc_trace(mVcdFile, tmp_29_8_reg_1860, "tmp_29_8_reg_1860");
    sc_trace(mVcdFile, tmp_29_9_fu_1272_p2, "tmp_29_9_fu_1272_p2");
    sc_trace(mVcdFile, tmp_29_9_reg_1865, "tmp_29_9_reg_1865");
    sc_trace(mVcdFile, tmp_29_s_fu_1281_p2, "tmp_29_s_fu_1281_p2");
    sc_trace(mVcdFile, tmp_29_s_reg_1870, "tmp_29_s_reg_1870");
    sc_trace(mVcdFile, tmp_29_10_fu_1290_p2, "tmp_29_10_fu_1290_p2");
    sc_trace(mVcdFile, tmp_29_10_reg_1875, "tmp_29_10_reg_1875");
    sc_trace(mVcdFile, tmp_29_11_fu_1299_p2, "tmp_29_11_fu_1299_p2");
    sc_trace(mVcdFile, tmp_29_11_reg_1880, "tmp_29_11_reg_1880");
    sc_trace(mVcdFile, tmp_29_12_fu_1308_p2, "tmp_29_12_fu_1308_p2");
    sc_trace(mVcdFile, tmp_29_12_reg_1885, "tmp_29_12_reg_1885");
    sc_trace(mVcdFile, tmp_29_13_fu_1317_p2, "tmp_29_13_fu_1317_p2");
    sc_trace(mVcdFile, tmp_29_13_reg_1890, "tmp_29_13_reg_1890");
    sc_trace(mVcdFile, tmp_29_14_fu_1326_p2, "tmp_29_14_fu_1326_p2");
    sc_trace(mVcdFile, tmp_29_14_reg_1895, "tmp_29_14_reg_1895");
    sc_trace(mVcdFile, tmp_2_fu_1332_p2, "tmp_2_fu_1332_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exitcond4_fu_1337_p2, "exitcond4_fu_1337_p2");
    sc_trace(mVcdFile, i_5_fu_1343_p2, "i_5_fu_1343_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, tmp_last_V_fu_1349_p2, "tmp_last_V_fu_1349_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_1914, "tmp_last_V_reg_1914");
    sc_trace(mVcdFile, tmp_last_V_reg_1914_pp2_iter1_reg, "tmp_last_V_reg_1914_pp2_iter1_reg");
    sc_trace(mVcdFile, tmp_3_fu_1375_p3, "tmp_3_fu_1375_p3");
    sc_trace(mVcdFile, tmp_3_reg_1999, "tmp_3_reg_1999");
    sc_trace(mVcdFile, tmp_3_reg_1999_pp2_iter1_reg, "tmp_3_reg_1999_pp2_iter1_reg");
    sc_trace(mVcdFile, tmp_data_V_1_fu_1593_p3, "tmp_data_V_1_fu_1593_p3");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state4, "ap_condition_pp1_exit_iter0_state4");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter4, "ap_enable_reg_pp1_iter4");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state10, "ap_condition_pp2_exit_iter0_state10");
    sc_trace(mVcdFile, sum_pix_ch0_0_address0, "sum_pix_ch0_0_address0");
    sc_trace(mVcdFile, sum_pix_ch0_0_ce0, "sum_pix_ch0_0_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_0_we0, "sum_pix_ch0_0_we0");
    sc_trace(mVcdFile, sum_pix_ch0_0_address1, "sum_pix_ch0_0_address1");
    sc_trace(mVcdFile, sum_pix_ch0_0_ce1, "sum_pix_ch0_0_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_0_we1, "sum_pix_ch0_0_we1");
    sc_trace(mVcdFile, sum_pix_ch0_1_address0, "sum_pix_ch0_1_address0");
    sc_trace(mVcdFile, sum_pix_ch0_1_ce0, "sum_pix_ch0_1_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_1_we0, "sum_pix_ch0_1_we0");
    sc_trace(mVcdFile, sum_pix_ch0_1_address1, "sum_pix_ch0_1_address1");
    sc_trace(mVcdFile, sum_pix_ch0_1_ce1, "sum_pix_ch0_1_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_1_we1, "sum_pix_ch0_1_we1");
    sc_trace(mVcdFile, sum_pix_ch0_2_address0, "sum_pix_ch0_2_address0");
    sc_trace(mVcdFile, sum_pix_ch0_2_ce0, "sum_pix_ch0_2_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_2_we0, "sum_pix_ch0_2_we0");
    sc_trace(mVcdFile, sum_pix_ch0_2_address1, "sum_pix_ch0_2_address1");
    sc_trace(mVcdFile, sum_pix_ch0_2_ce1, "sum_pix_ch0_2_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_2_we1, "sum_pix_ch0_2_we1");
    sc_trace(mVcdFile, sum_pix_ch0_3_address0, "sum_pix_ch0_3_address0");
    sc_trace(mVcdFile, sum_pix_ch0_3_ce0, "sum_pix_ch0_3_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_3_we0, "sum_pix_ch0_3_we0");
    sc_trace(mVcdFile, sum_pix_ch0_3_address1, "sum_pix_ch0_3_address1");
    sc_trace(mVcdFile, sum_pix_ch0_3_ce1, "sum_pix_ch0_3_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_3_we1, "sum_pix_ch0_3_we1");
    sc_trace(mVcdFile, sum_pix_ch0_4_address0, "sum_pix_ch0_4_address0");
    sc_trace(mVcdFile, sum_pix_ch0_4_ce0, "sum_pix_ch0_4_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_4_we0, "sum_pix_ch0_4_we0");
    sc_trace(mVcdFile, sum_pix_ch0_4_address1, "sum_pix_ch0_4_address1");
    sc_trace(mVcdFile, sum_pix_ch0_4_ce1, "sum_pix_ch0_4_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_4_we1, "sum_pix_ch0_4_we1");
    sc_trace(mVcdFile, sum_pix_ch0_5_address0, "sum_pix_ch0_5_address0");
    sc_trace(mVcdFile, sum_pix_ch0_5_ce0, "sum_pix_ch0_5_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_5_we0, "sum_pix_ch0_5_we0");
    sc_trace(mVcdFile, sum_pix_ch0_5_address1, "sum_pix_ch0_5_address1");
    sc_trace(mVcdFile, sum_pix_ch0_5_ce1, "sum_pix_ch0_5_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_5_we1, "sum_pix_ch0_5_we1");
    sc_trace(mVcdFile, sum_pix_ch0_6_address0, "sum_pix_ch0_6_address0");
    sc_trace(mVcdFile, sum_pix_ch0_6_ce0, "sum_pix_ch0_6_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_6_we0, "sum_pix_ch0_6_we0");
    sc_trace(mVcdFile, sum_pix_ch0_6_address1, "sum_pix_ch0_6_address1");
    sc_trace(mVcdFile, sum_pix_ch0_6_ce1, "sum_pix_ch0_6_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_6_we1, "sum_pix_ch0_6_we1");
    sc_trace(mVcdFile, sum_pix_ch0_7_address0, "sum_pix_ch0_7_address0");
    sc_trace(mVcdFile, sum_pix_ch0_7_ce0, "sum_pix_ch0_7_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_7_we0, "sum_pix_ch0_7_we0");
    sc_trace(mVcdFile, sum_pix_ch0_7_address1, "sum_pix_ch0_7_address1");
    sc_trace(mVcdFile, sum_pix_ch0_7_ce1, "sum_pix_ch0_7_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_7_we1, "sum_pix_ch0_7_we1");
    sc_trace(mVcdFile, sum_pix_ch0_8_address0, "sum_pix_ch0_8_address0");
    sc_trace(mVcdFile, sum_pix_ch0_8_ce0, "sum_pix_ch0_8_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_8_we0, "sum_pix_ch0_8_we0");
    sc_trace(mVcdFile, sum_pix_ch0_8_address1, "sum_pix_ch0_8_address1");
    sc_trace(mVcdFile, sum_pix_ch0_8_ce1, "sum_pix_ch0_8_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_8_we1, "sum_pix_ch0_8_we1");
    sc_trace(mVcdFile, sum_pix_ch0_9_address0, "sum_pix_ch0_9_address0");
    sc_trace(mVcdFile, sum_pix_ch0_9_ce0, "sum_pix_ch0_9_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_9_we0, "sum_pix_ch0_9_we0");
    sc_trace(mVcdFile, sum_pix_ch0_9_address1, "sum_pix_ch0_9_address1");
    sc_trace(mVcdFile, sum_pix_ch0_9_ce1, "sum_pix_ch0_9_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_9_we1, "sum_pix_ch0_9_we1");
    sc_trace(mVcdFile, sum_pix_ch0_10_address0, "sum_pix_ch0_10_address0");
    sc_trace(mVcdFile, sum_pix_ch0_10_ce0, "sum_pix_ch0_10_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_10_we0, "sum_pix_ch0_10_we0");
    sc_trace(mVcdFile, sum_pix_ch0_10_address1, "sum_pix_ch0_10_address1");
    sc_trace(mVcdFile, sum_pix_ch0_10_ce1, "sum_pix_ch0_10_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_10_we1, "sum_pix_ch0_10_we1");
    sc_trace(mVcdFile, sum_pix_ch0_11_address0, "sum_pix_ch0_11_address0");
    sc_trace(mVcdFile, sum_pix_ch0_11_ce0, "sum_pix_ch0_11_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_11_we0, "sum_pix_ch0_11_we0");
    sc_trace(mVcdFile, sum_pix_ch0_11_address1, "sum_pix_ch0_11_address1");
    sc_trace(mVcdFile, sum_pix_ch0_11_ce1, "sum_pix_ch0_11_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_11_we1, "sum_pix_ch0_11_we1");
    sc_trace(mVcdFile, sum_pix_ch0_12_address0, "sum_pix_ch0_12_address0");
    sc_trace(mVcdFile, sum_pix_ch0_12_ce0, "sum_pix_ch0_12_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_12_we0, "sum_pix_ch0_12_we0");
    sc_trace(mVcdFile, sum_pix_ch0_12_address1, "sum_pix_ch0_12_address1");
    sc_trace(mVcdFile, sum_pix_ch0_12_ce1, "sum_pix_ch0_12_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_12_we1, "sum_pix_ch0_12_we1");
    sc_trace(mVcdFile, sum_pix_ch0_13_address0, "sum_pix_ch0_13_address0");
    sc_trace(mVcdFile, sum_pix_ch0_13_ce0, "sum_pix_ch0_13_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_13_we0, "sum_pix_ch0_13_we0");
    sc_trace(mVcdFile, sum_pix_ch0_13_address1, "sum_pix_ch0_13_address1");
    sc_trace(mVcdFile, sum_pix_ch0_13_ce1, "sum_pix_ch0_13_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_13_we1, "sum_pix_ch0_13_we1");
    sc_trace(mVcdFile, sum_pix_ch0_14_address0, "sum_pix_ch0_14_address0");
    sc_trace(mVcdFile, sum_pix_ch0_14_ce0, "sum_pix_ch0_14_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_14_we0, "sum_pix_ch0_14_we0");
    sc_trace(mVcdFile, sum_pix_ch0_14_address1, "sum_pix_ch0_14_address1");
    sc_trace(mVcdFile, sum_pix_ch0_14_ce1, "sum_pix_ch0_14_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_14_we1, "sum_pix_ch0_14_we1");
    sc_trace(mVcdFile, sum_pix_ch0_15_address0, "sum_pix_ch0_15_address0");
    sc_trace(mVcdFile, sum_pix_ch0_15_ce0, "sum_pix_ch0_15_ce0");
    sc_trace(mVcdFile, sum_pix_ch0_15_we0, "sum_pix_ch0_15_we0");
    sc_trace(mVcdFile, sum_pix_ch0_15_address1, "sum_pix_ch0_15_address1");
    sc_trace(mVcdFile, sum_pix_ch0_15_ce1, "sum_pix_ch0_15_ce1");
    sc_trace(mVcdFile, sum_pix_ch0_15_we1, "sum_pix_ch0_15_we1");
    sc_trace(mVcdFile, i_reg_796, "i_reg_796");
    sc_trace(mVcdFile, exitcond1_fu_920_p2, "exitcond1_fu_920_p2");
    sc_trace(mVcdFile, tmp_1_fu_932_p1, "tmp_1_fu_932_p1");
    sc_trace(mVcdFile, tmp_8_fu_1011_p1, "tmp_8_fu_1011_p1");
    sc_trace(mVcdFile, tmp_s_fu_1355_p1, "tmp_s_fu_1355_p1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_01001, "ap_block_pp2_stage0_01001");
    sc_trace(mVcdFile, tmp_10_fu_952_p3, "tmp_10_fu_952_p3");
    sc_trace(mVcdFile, tmp_11_fu_963_p3, "tmp_11_fu_963_p3");
    sc_trace(mVcdFile, p_shl_fu_959_p1, "p_shl_fu_959_p1");
    sc_trace(mVcdFile, p_shl2_fu_970_p1, "p_shl2_fu_970_p1");
    sc_trace(mVcdFile, exitcond_fu_991_p2, "exitcond_fu_991_p2");
    sc_trace(mVcdFile, tmp_6_fu_1188_p1, "tmp_6_fu_1188_p1");
    sc_trace(mVcdFile, tmp_28_1_fu_1197_p1, "tmp_28_1_fu_1197_p1");
    sc_trace(mVcdFile, tmp_28_2_fu_1206_p1, "tmp_28_2_fu_1206_p1");
    sc_trace(mVcdFile, tmp_28_3_fu_1215_p1, "tmp_28_3_fu_1215_p1");
    sc_trace(mVcdFile, tmp_28_4_fu_1224_p1, "tmp_28_4_fu_1224_p1");
    sc_trace(mVcdFile, tmp_28_5_fu_1233_p1, "tmp_28_5_fu_1233_p1");
    sc_trace(mVcdFile, tmp_28_6_fu_1242_p1, "tmp_28_6_fu_1242_p1");
    sc_trace(mVcdFile, tmp_28_7_fu_1251_p1, "tmp_28_7_fu_1251_p1");
    sc_trace(mVcdFile, tmp_28_8_fu_1260_p1, "tmp_28_8_fu_1260_p1");
    sc_trace(mVcdFile, tmp_28_9_fu_1269_p1, "tmp_28_9_fu_1269_p1");
    sc_trace(mVcdFile, tmp_28_s_fu_1278_p1, "tmp_28_s_fu_1278_p1");
    sc_trace(mVcdFile, tmp_28_10_fu_1287_p1, "tmp_28_10_fu_1287_p1");
    sc_trace(mVcdFile, tmp_28_11_fu_1296_p1, "tmp_28_11_fu_1296_p1");
    sc_trace(mVcdFile, tmp_28_12_fu_1305_p1, "tmp_28_12_fu_1305_p1");
    sc_trace(mVcdFile, tmp_28_13_fu_1314_p1, "tmp_28_13_fu_1314_p1");
    sc_trace(mVcdFile, tmp_28_14_fu_1323_p1, "tmp_28_14_fu_1323_p1");
    sc_trace(mVcdFile, val_assign_1_s_fu_1422_p2, "val_assign_1_s_fu_1422_p2");
    sc_trace(mVcdFile, val_assign_1_1_fu_1431_p2, "val_assign_1_1_fu_1431_p2");
    sc_trace(mVcdFile, val_assign_1_2_fu_1440_p2, "val_assign_1_2_fu_1440_p2");
    sc_trace(mVcdFile, val_assign_1_3_fu_1449_p2, "val_assign_1_3_fu_1449_p2");
    sc_trace(mVcdFile, val_assign_1_4_fu_1458_p2, "val_assign_1_4_fu_1458_p2");
    sc_trace(mVcdFile, val_assign_1_5_fu_1467_p2, "val_assign_1_5_fu_1467_p2");
    sc_trace(mVcdFile, val_assign_1_6_fu_1476_p2, "val_assign_1_6_fu_1476_p2");
    sc_trace(mVcdFile, val_assign_1_7_fu_1485_p2, "val_assign_1_7_fu_1485_p2");
    sc_trace(mVcdFile, val_assign_1_8_fu_1494_p2, "val_assign_1_8_fu_1494_p2");
    sc_trace(mVcdFile, val_assign_1_9_fu_1503_p2, "val_assign_1_9_fu_1503_p2");
    sc_trace(mVcdFile, val_assign_1_10_fu_1512_p2, "val_assign_1_10_fu_1512_p2");
    sc_trace(mVcdFile, val_assign_1_11_fu_1521_p2, "val_assign_1_11_fu_1521_p2");
    sc_trace(mVcdFile, val_assign_1_12_fu_1530_p2, "val_assign_1_12_fu_1530_p2");
    sc_trace(mVcdFile, val_assign_1_13_fu_1539_p2, "val_assign_1_13_fu_1539_p2");
    sc_trace(mVcdFile, val_assign_1_14_fu_1548_p2, "val_assign_1_14_fu_1548_p2");
    sc_trace(mVcdFile, val_assign_1_13_cast_fu_1544_p1, "val_assign_1_13_cast_fu_1544_p1");
    sc_trace(mVcdFile, val_assign_1_12_cast_fu_1535_p1, "val_assign_1_12_cast_fu_1535_p1");
    sc_trace(mVcdFile, val_assign_1_11_cast_fu_1526_p1, "val_assign_1_11_cast_fu_1526_p1");
    sc_trace(mVcdFile, val_assign_1_10_cast_fu_1517_p1, "val_assign_1_10_cast_fu_1517_p1");
    sc_trace(mVcdFile, val_assign_1_9_cast_fu_1508_p1, "val_assign_1_9_cast_fu_1508_p1");
    sc_trace(mVcdFile, val_assign_1_8_cast_fu_1499_p1, "val_assign_1_8_cast_fu_1499_p1");
    sc_trace(mVcdFile, val_assign_1_7_cast_fu_1490_p1, "val_assign_1_7_cast_fu_1490_p1");
    sc_trace(mVcdFile, val_assign_1_6_cast_fu_1481_p1, "val_assign_1_6_cast_fu_1481_p1");
    sc_trace(mVcdFile, val_assign_1_5_cast_fu_1472_p1, "val_assign_1_5_cast_fu_1472_p1");
    sc_trace(mVcdFile, val_assign_1_4_cast_fu_1463_p1, "val_assign_1_4_cast_fu_1463_p1");
    sc_trace(mVcdFile, val_assign_1_3_cast_fu_1454_p1, "val_assign_1_3_cast_fu_1454_p1");
    sc_trace(mVcdFile, val_assign_1_2_cast_fu_1445_p1, "val_assign_1_2_cast_fu_1445_p1");
    sc_trace(mVcdFile, val_assign_1_1_cast_fu_1436_p1, "val_assign_1_1_cast_fu_1436_p1");
    sc_trace(mVcdFile, val_assign_1_cast_fu_1427_p1, "val_assign_1_cast_fu_1427_p1");
    sc_trace(mVcdFile, tmp_3_cast_fu_1419_p1, "tmp_3_cast_fu_1419_p1");
    sc_trace(mVcdFile, tmp_fu_1553_p17, "tmp_fu_1553_p17");
    sc_trace(mVcdFile, sum_pix_tot_data_V_s_fu_1383_p17, "sum_pix_tot_data_V_s_fu_1383_p17");
    sc_trace(mVcdFile, sum_pix_tot_data_V_1_fu_1589_p1, "sum_pix_tot_data_V_1_fu_1589_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_block_state14, "ap_block_state14");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
#endif

    }
    mHdltvinHandle.open("scurve_adder36.hdltvin.dat");
    mHdltvoutHandle.open("scurve_adder36.hdltvout.dat");
}

scurve_adder36::~scurve_adder36() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete scurve_adder36_CTRL_BUS_s_axi_U;
    delete sum_pix_ch0_0_U;
    delete sum_pix_ch0_1_U;
    delete sum_pix_ch0_2_U;
    delete sum_pix_ch0_3_U;
    delete sum_pix_ch0_4_U;
    delete sum_pix_ch0_5_U;
    delete sum_pix_ch0_6_U;
    delete sum_pix_ch0_7_U;
    delete sum_pix_ch0_8_U;
    delete sum_pix_ch0_9_U;
    delete sum_pix_ch0_10_U;
    delete sum_pix_ch0_11_U;
    delete sum_pix_ch0_12_U;
    delete sum_pix_ch0_13_U;
    delete sum_pix_ch0_14_U;
    delete sum_pix_ch0_15_U;
}

void scurve_adder36::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void scurve_adder36::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void scurve_adder36::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state4.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state4.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state4.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter4 = ap_enable_reg_pp1_iter3.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp1_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state10.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state10.read())) {
                ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state10.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) {
            ap_enable_reg_pp2_iter2 = ap_enable_reg_pp2_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) {
            ap_enable_reg_pp2_iter3 = ap_enable_reg_pp2_iter2.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            ap_enable_reg_pp2_iter3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_980_p2.read()))) {
        i_1_reg_818 = i_4_fu_1005_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_1_reg_818 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_2_reg_829 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_1337_p2.read()))) {
        i_2_reg_829 = i_5_fu_1343_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_796 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_reg_796 = i_3_fu_926_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream0_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_vld_out.read()))) {
            in_stream0_V_data_V_0_sel_rd =  (sc_logic) (~in_stream0_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream0_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_ack_in.read()))) {
            in_stream0_V_data_V_0_sel_wr =  (sc_logic) (~in_stream0_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream0_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            in_stream0_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            in_stream0_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_stream0_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_ack_out.read()))))) {
            in_stream0_V_data_V_0_state = ap_const_lv2_3;
        } else {
            in_stream0_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream0_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_stream0_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_stream0_V_dest_V_0_state.read())))) {
            in_stream0_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_stream0_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_stream0_V_dest_V_0_state.read())))) {
            in_stream0_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_stream0_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_stream0_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_stream0_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_dest_V_0_ack_out.read()))))) {
            in_stream0_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            in_stream0_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_980_p2.read()))) {
        indvar_flatten_reg_807 = indvar_flatten_next_fu_985_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        indvar_flatten_reg_807 = ap_const_lv24_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_out.read()))) {
            out_stream_V_data_V_1_sel_rd =  (sc_logic) (~out_stream_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_in.read()))) {
            out_stream_V_data_V_1_sel_wr =  (sc_logic) (~out_stream_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_data_V_1_state.read())))) {
            out_stream_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_V_1_state.read())))) {
            out_stream_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_ack_out.read()))))) {
            out_stream_V_data_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_vld_out.read()))) {
            out_stream_V_dest_V_1_sel_rd =  (sc_logic) (~out_stream_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_dest_V_1_state.read())))) {
            out_stream_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_dest_V_1_state.read())))) {
            out_stream_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_dest_V_1_ack_out.read()))))) {
            out_stream_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_vld_out.read()))) {
            out_stream_V_id_V_1_sel_rd =  (sc_logic) (~out_stream_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_id_V_1_state.read())))) {
            out_stream_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_id_V_1_state.read())))) {
            out_stream_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_id_V_1_ack_out.read()))))) {
            out_stream_V_id_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_vld_out.read()))) {
            out_stream_V_keep_V_1_sel_rd =  (sc_logic) (~out_stream_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_keep_V_1_state.read())))) {
            out_stream_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_keep_V_1_state.read())))) {
            out_stream_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_keep_V_1_ack_out.read()))))) {
            out_stream_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_out.read()))) {
            out_stream_V_last_V_1_sel_rd =  (sc_logic) (~out_stream_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_in.read()))) {
            out_stream_V_last_V_1_sel_wr =  (sc_logic) (~out_stream_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_last_V_1_state.read())))) {
            out_stream_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read())))) {
            out_stream_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()))))) {
            out_stream_V_last_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_vld_out.read()))) {
            out_stream_V_strb_V_1_sel_rd =  (sc_logic) (~out_stream_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_strb_V_1_state.read())))) {
            out_stream_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_strb_V_1_state.read())))) {
            out_stream_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_strb_V_1_ack_out.read()))))) {
            out_stream_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_vld_out.read()))) {
            out_stream_V_user_V_1_sel_rd =  (sc_logic) (~out_stream_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_user_V_1_state.read())))) {
            out_stream_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_user_V_1_state.read())))) {
            out_stream_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_user_V_1_ack_out.read()))))) {
            out_stream_V_user_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_840 = sum_pix_ch0_0_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_840 = sum_pix_ch0_0_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_845 = sum_pix_ch0_1_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_845 = sum_pix_ch0_1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_850 = sum_pix_ch0_2_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_850 = sum_pix_ch0_2_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_855 = sum_pix_ch0_3_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_855 = sum_pix_ch0_3_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_860 = sum_pix_ch0_4_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_860 = sum_pix_ch0_4_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_865 = sum_pix_ch0_5_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_865 = sum_pix_ch0_5_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_870 = sum_pix_ch0_6_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_870 = sum_pix_ch0_6_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_875 = sum_pix_ch0_7_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_875 = sum_pix_ch0_7_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_880 = sum_pix_ch0_8_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_880 = sum_pix_ch0_8_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_885 = sum_pix_ch0_9_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_885 = sum_pix_ch0_9_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_890 = sum_pix_ch0_10_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_890 = sum_pix_ch0_10_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_895 = sum_pix_ch0_11_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_895 = sum_pix_ch0_11_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_900 = sum_pix_ch0_12_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_900 = sum_pix_ch0_12_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_905 = sum_pix_ch0_13_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_905 = sum_pix_ch0_13_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_910 = sum_pix_ch0_14_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_910 = sum_pix_ch0_14_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_1900.read()))) {
        reg_915 = sum_pix_ch0_15_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter1_reg.read()))) {
        reg_915 = sum_pix_ch0_15_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        N_ADDS_read_reg_1606 = N_ADDS.read();
        TEST_MODE_read_reg_1601 = TEST_MODE.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bound_reg_1620 = bound_fu_974_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond4_reg_1905 = exitcond4_fu_1337_p2.read();
        exitcond4_reg_1905_pp2_iter1_reg = exitcond4_reg_1905.read();
        tmp_3_reg_1999_pp2_iter1_reg = tmp_3_reg_1999.read();
        tmp_last_V_reg_1914_pp2_iter1_reg = tmp_last_V_reg_1914.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)) {
        exitcond4_reg_1905_pp2_iter2_reg = exitcond4_reg_1905_pp2_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_1625 = exitcond_flatten_fu_980_p2.read();
        exitcond_flatten_reg_1625_pp1_iter1_reg = exitcond_flatten_reg_1625.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
        exitcond_flatten_reg_1625_pp1_iter2_reg = exitcond_flatten_reg_1625_pp1_iter1_reg.read();
        exitcond_flatten_reg_1625_pp1_iter3_reg = exitcond_flatten_reg_1625_pp1_iter2_reg.read();
        phitmp_10_reg_1765_pp1_iter2_reg = phitmp_10_reg_1765.read();
        phitmp_11_reg_1776_pp1_iter2_reg = phitmp_11_reg_1776.read();
        phitmp_12_reg_1787_pp1_iter2_reg = phitmp_12_reg_1787.read();
        phitmp_13_reg_1798_pp1_iter2_reg = phitmp_13_reg_1798.read();
        phitmp_14_reg_1809_pp1_iter2_reg = phitmp_14_reg_1809.read();
        phitmp_1_reg_1655_pp1_iter2_reg = phitmp_1_reg_1655.read();
        phitmp_2_reg_1666_pp1_iter2_reg = phitmp_2_reg_1666.read();
        phitmp_3_reg_1677_pp1_iter2_reg = phitmp_3_reg_1677.read();
        phitmp_4_reg_1688_pp1_iter2_reg = phitmp_4_reg_1688.read();
        phitmp_5_reg_1699_pp1_iter2_reg = phitmp_5_reg_1699.read();
        phitmp_6_reg_1710_pp1_iter2_reg = phitmp_6_reg_1710.read();
        phitmp_7_reg_1721_pp1_iter2_reg = phitmp_7_reg_1721.read();
        phitmp_8_reg_1732_pp1_iter2_reg = phitmp_8_reg_1732.read();
        phitmp_9_reg_1743_pp1_iter2_reg = phitmp_9_reg_1743.read();
        phitmp_s_reg_1754_pp1_iter2_reg = phitmp_s_reg_1754.read();
        sum_pix_ch0_0_addr_1_reg_1649_pp1_iter2_reg = sum_pix_ch0_0_addr_1_reg_1649.read();
        sum_pix_ch0_0_addr_1_reg_1649_pp1_iter3_reg = sum_pix_ch0_0_addr_1_reg_1649_pp1_iter2_reg.read();
        sum_pix_ch0_10_addr_1_reg_1759_pp1_iter2_reg = sum_pix_ch0_10_addr_1_reg_1759.read();
        sum_pix_ch0_10_addr_1_reg_1759_pp1_iter3_reg = sum_pix_ch0_10_addr_1_reg_1759_pp1_iter2_reg.read();
        sum_pix_ch0_11_addr_1_reg_1770_pp1_iter2_reg = sum_pix_ch0_11_addr_1_reg_1770.read();
        sum_pix_ch0_11_addr_1_reg_1770_pp1_iter3_reg = sum_pix_ch0_11_addr_1_reg_1770_pp1_iter2_reg.read();
        sum_pix_ch0_12_addr_1_reg_1781_pp1_iter2_reg = sum_pix_ch0_12_addr_1_reg_1781.read();
        sum_pix_ch0_12_addr_1_reg_1781_pp1_iter3_reg = sum_pix_ch0_12_addr_1_reg_1781_pp1_iter2_reg.read();
        sum_pix_ch0_13_addr_1_reg_1792_pp1_iter2_reg = sum_pix_ch0_13_addr_1_reg_1792.read();
        sum_pix_ch0_13_addr_1_reg_1792_pp1_iter3_reg = sum_pix_ch0_13_addr_1_reg_1792_pp1_iter2_reg.read();
        sum_pix_ch0_14_addr_1_reg_1803_pp1_iter2_reg = sum_pix_ch0_14_addr_1_reg_1803.read();
        sum_pix_ch0_14_addr_1_reg_1803_pp1_iter3_reg = sum_pix_ch0_14_addr_1_reg_1803_pp1_iter2_reg.read();
        sum_pix_ch0_15_addr_1_reg_1814_pp1_iter2_reg = sum_pix_ch0_15_addr_1_reg_1814.read();
        sum_pix_ch0_15_addr_1_reg_1814_pp1_iter3_reg = sum_pix_ch0_15_addr_1_reg_1814_pp1_iter2_reg.read();
        sum_pix_ch0_1_addr_1_reg_1660_pp1_iter2_reg = sum_pix_ch0_1_addr_1_reg_1660.read();
        sum_pix_ch0_1_addr_1_reg_1660_pp1_iter3_reg = sum_pix_ch0_1_addr_1_reg_1660_pp1_iter2_reg.read();
        sum_pix_ch0_2_addr_1_reg_1671_pp1_iter2_reg = sum_pix_ch0_2_addr_1_reg_1671.read();
        sum_pix_ch0_2_addr_1_reg_1671_pp1_iter3_reg = sum_pix_ch0_2_addr_1_reg_1671_pp1_iter2_reg.read();
        sum_pix_ch0_3_addr_1_reg_1682_pp1_iter2_reg = sum_pix_ch0_3_addr_1_reg_1682.read();
        sum_pix_ch0_3_addr_1_reg_1682_pp1_iter3_reg = sum_pix_ch0_3_addr_1_reg_1682_pp1_iter2_reg.read();
        sum_pix_ch0_4_addr_1_reg_1693_pp1_iter2_reg = sum_pix_ch0_4_addr_1_reg_1693.read();
        sum_pix_ch0_4_addr_1_reg_1693_pp1_iter3_reg = sum_pix_ch0_4_addr_1_reg_1693_pp1_iter2_reg.read();
        sum_pix_ch0_5_addr_1_reg_1704_pp1_iter2_reg = sum_pix_ch0_5_addr_1_reg_1704.read();
        sum_pix_ch0_5_addr_1_reg_1704_pp1_iter3_reg = sum_pix_ch0_5_addr_1_reg_1704_pp1_iter2_reg.read();
        sum_pix_ch0_6_addr_1_reg_1715_pp1_iter2_reg = sum_pix_ch0_6_addr_1_reg_1715.read();
        sum_pix_ch0_6_addr_1_reg_1715_pp1_iter3_reg = sum_pix_ch0_6_addr_1_reg_1715_pp1_iter2_reg.read();
        sum_pix_ch0_7_addr_1_reg_1726_pp1_iter2_reg = sum_pix_ch0_7_addr_1_reg_1726.read();
        sum_pix_ch0_7_addr_1_reg_1726_pp1_iter3_reg = sum_pix_ch0_7_addr_1_reg_1726_pp1_iter2_reg.read();
        sum_pix_ch0_8_addr_1_reg_1737_pp1_iter2_reg = sum_pix_ch0_8_addr_1_reg_1737.read();
        sum_pix_ch0_8_addr_1_reg_1737_pp1_iter3_reg = sum_pix_ch0_8_addr_1_reg_1737_pp1_iter2_reg.read();
        sum_pix_ch0_9_addr_1_reg_1748_pp1_iter2_reg = sum_pix_ch0_9_addr_1_reg_1748.read();
        sum_pix_ch0_9_addr_1_reg_1748_pp1_iter3_reg = sum_pix_ch0_9_addr_1_reg_1748_pp1_iter2_reg.read();
        tmp_12_reg_1644_pp1_iter2_reg = tmp_12_reg_1644.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_980_p2.read()))) {
        i_1_mid2_reg_1634 = i_1_mid2_fu_997_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_load_A.read())) {
        in_stream0_V_data_V_0_payload_A = in_stream0_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_load_B.read())) {
        in_stream0_V_data_V_0_payload_B = in_stream0_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_load_A.read())) {
        out_stream_V_data_V_1_payload_A = tmp_data_V_1_fu_1593_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_load_B.read())) {
        out_stream_V_data_V_1_payload_B = tmp_data_V_1_fu_1593_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_load_A.read())) {
        out_stream_V_last_V_1_payload_A = tmp_last_V_reg_1914_pp2_iter1_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_load_B.read())) {
        out_stream_V_last_V_1_payload_B = tmp_last_V_reg_1914_pp2_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        phitmp_10_reg_1765 = in_stream0_V_data_V_0_data_out.read().range(95, 88);
        phitmp_11_reg_1776 = in_stream0_V_data_V_0_data_out.read().range(103, 96);
        phitmp_12_reg_1787 = in_stream0_V_data_V_0_data_out.read().range(111, 104);
        phitmp_13_reg_1798 = in_stream0_V_data_V_0_data_out.read().range(119, 112);
        phitmp_14_reg_1809 = in_stream0_V_data_V_0_data_out.read().range(127, 120);
        phitmp_1_reg_1655 = in_stream0_V_data_V_0_data_out.read().range(15, 8);
        phitmp_2_reg_1666 = in_stream0_V_data_V_0_data_out.read().range(23, 16);
        phitmp_3_reg_1677 = in_stream0_V_data_V_0_data_out.read().range(31, 24);
        phitmp_4_reg_1688 = in_stream0_V_data_V_0_data_out.read().range(39, 32);
        phitmp_5_reg_1699 = in_stream0_V_data_V_0_data_out.read().range(47, 40);
        phitmp_6_reg_1710 = in_stream0_V_data_V_0_data_out.read().range(55, 48);
        phitmp_7_reg_1721 = in_stream0_V_data_V_0_data_out.read().range(63, 56);
        phitmp_8_reg_1732 = in_stream0_V_data_V_0_data_out.read().range(71, 64);
        phitmp_9_reg_1743 = in_stream0_V_data_V_0_data_out.read().range(79, 72);
        phitmp_s_reg_1754 = in_stream0_V_data_V_0_data_out.read().range(87, 80);
        sum_pix_ch0_0_addr_1_reg_1649 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_10_addr_1_reg_1759 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_11_addr_1_reg_1770 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_12_addr_1_reg_1781 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_13_addr_1_reg_1792 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_14_addr_1_reg_1803 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_15_addr_1_reg_1814 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_1_addr_1_reg_1660 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_2_addr_1_reg_1671 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_3_addr_1_reg_1682 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_4_addr_1_reg_1693 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_5_addr_1_reg_1704 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_6_addr_1_reg_1715 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_7_addr_1_reg_1726 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_8_addr_1_reg_1737 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        sum_pix_ch0_9_addr_1_reg_1748 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
        tmp_12_reg_1644 = tmp_12_fu_1034_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter2_reg.read()))) {
        tmp_29_10_reg_1875 = tmp_29_10_fu_1290_p2.read();
        tmp_29_11_reg_1880 = tmp_29_11_fu_1299_p2.read();
        tmp_29_12_reg_1885 = tmp_29_12_fu_1308_p2.read();
        tmp_29_13_reg_1890 = tmp_29_13_fu_1317_p2.read();
        tmp_29_14_reg_1895 = tmp_29_14_fu_1326_p2.read();
        tmp_29_1_reg_1825 = tmp_29_1_fu_1200_p2.read();
        tmp_29_2_reg_1830 = tmp_29_2_fu_1209_p2.read();
        tmp_29_3_reg_1835 = tmp_29_3_fu_1218_p2.read();
        tmp_29_4_reg_1840 = tmp_29_4_fu_1227_p2.read();
        tmp_29_5_reg_1845 = tmp_29_5_fu_1236_p2.read();
        tmp_29_6_reg_1850 = tmp_29_6_fu_1245_p2.read();
        tmp_29_7_reg_1855 = tmp_29_7_fu_1254_p2.read();
        tmp_29_8_reg_1860 = tmp_29_8_fu_1263_p2.read();
        tmp_29_9_reg_1865 = tmp_29_9_fu_1272_p2.read();
        tmp_29_s_reg_1870 = tmp_29_s_fu_1281_p2.read();
        tmp_9_reg_1820 = tmp_9_fu_1191_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_2_reg_1900 = tmp_2_fu_1332_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_1337_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_1900.read()))) {
        tmp_3_reg_1999 = tmp_3_fu_1375_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_1337_p2.read()))) {
        tmp_last_V_reg_1914 = tmp_last_V_fu_1349_p2.read();
    }
}

void scurve_adder36::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[3];
}

void scurve_adder36::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[5];
}

void scurve_adder36::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void scurve_adder36::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[6];
}

void scurve_adder36::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void scurve_adder36::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void scurve_adder36::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[4];
}

void scurve_adder36::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_vld_out.read()));
}

void scurve_adder36::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_vld_out.read()));
}

void scurve_adder36::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_pp2_stage0_01001() {
    ap_block_pp2_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state12_io.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp2_iter3.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state13_io.read())));
}

void scurve_adder36::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state12_io.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp2_iter3.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state13_io.read())));
}

void scurve_adder36::thread_ap_block_state10_pp2_stage0_iter0() {
    ap_block_state10_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state11_pp2_stage0_iter1() {
    ap_block_state11_pp2_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state12_io() {
    ap_block_state12_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905_pp2_iter1_reg.read()) && esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0));
}

void scurve_adder36::thread_ap_block_state12_pp2_stage0_iter2() {
    ap_block_state12_pp2_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state13_io() {
    ap_block_state13_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905_pp2_iter2_reg.read()) && esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0));
}

void scurve_adder36::thread_ap_block_state13_pp2_stage0_iter3() {
    ap_block_state13_pp2_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state14() {
    ap_block_state14 = (esl_seteq<1,1,1>(out_stream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0));
}

void scurve_adder36::thread_ap_block_state4_pp1_stage0_iter0() {
    ap_block_state4_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state5_pp1_stage0_iter1() {
    ap_block_state5_pp1_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream0_V_data_V_0_vld_out.read()));
}

void scurve_adder36::thread_ap_block_state6_pp1_stage0_iter2() {
    ap_block_state6_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state7_pp1_stage0_iter3() {
    ap_block_state7_pp1_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_block_state8_pp1_stage0_iter4() {
    ap_block_state8_pp1_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void scurve_adder36::thread_ap_condition_pp1_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_980_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state4 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_condition_pp2_exit_iter0_state10() {
    if (esl_seteq<1,1,1>(exitcond4_fu_1337_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp2_exit_iter0_state10 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state10 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_done() {
    if ((!(esl_seteq<1,1,1>(out_stream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void scurve_adder36::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void scurve_adder36::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter4.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter3.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_ready() {
    if ((!(esl_seteq<1,1,1>(out_stream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void scurve_adder36::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void scurve_adder36::thread_bound_fu_974_p2() {
    bound_fu_974_p2 = (!p_shl_fu_959_p1.read().is_01() || !p_shl2_fu_970_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(p_shl_fu_959_p1.read()) + sc_biguint<24>(p_shl2_fu_970_p1.read()));
}

void scurve_adder36::thread_exitcond1_fu_920_p2() {
    exitcond1_fu_920_p2 = (!i_reg_796.read().is_01() || !ap_const_lv8_90.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_796.read() == ap_const_lv8_90);
}

void scurve_adder36::thread_exitcond4_fu_1337_p2() {
    exitcond4_fu_1337_p2 = (!i_2_reg_829.read().is_01() || !ap_const_lv8_90.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_829.read() == ap_const_lv8_90);
}

void scurve_adder36::thread_exitcond_flatten_fu_980_p2() {
    exitcond_flatten_fu_980_p2 = (!indvar_flatten_reg_807.read().is_01() || !bound_reg_1620.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_807.read() == bound_reg_1620.read());
}

void scurve_adder36::thread_exitcond_fu_991_p2() {
    exitcond_fu_991_p2 = (!i_1_reg_818.read().is_01() || !ap_const_lv8_90.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_818.read() == ap_const_lv8_90);
}

void scurve_adder36::thread_i_1_mid2_fu_997_p3() {
    i_1_mid2_fu_997_p3 = (!exitcond_fu_991_p2.read()[0].is_01())? sc_lv<8>(): ((exitcond_fu_991_p2.read()[0].to_bool())? ap_const_lv8_0: i_1_reg_818.read());
}

void scurve_adder36::thread_i_3_fu_926_p2() {
    i_3_fu_926_p2 = (!i_reg_796.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_796.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void scurve_adder36::thread_i_4_fu_1005_p2() {
    i_4_fu_1005_p2 = (!ap_const_lv8_1.is_01() || !i_1_mid2_fu_997_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(i_1_mid2_fu_997_p3.read()));
}

void scurve_adder36::thread_i_5_fu_1343_p2() {
    i_5_fu_1343_p2 = (!i_2_reg_829.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_2_reg_829.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void scurve_adder36::thread_in_stream0_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625.read()))) {
        in_stream0_TDATA_blk_n = in_stream0_V_data_V_0_state.read()[0];
    } else {
        in_stream0_TDATA_blk_n = ap_const_logic_1;
    }
}

void scurve_adder36::thread_in_stream0_TREADY() {
    in_stream0_TREADY = in_stream0_V_dest_V_0_state.read()[1];
}

void scurve_adder36::thread_in_stream0_V_data_V_0_ack_in() {
    in_stream0_V_data_V_0_ack_in = in_stream0_V_data_V_0_state.read()[1];
}

void scurve_adder36::thread_in_stream0_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        in_stream0_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        in_stream0_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void scurve_adder36::thread_in_stream0_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream0_V_data_V_0_sel.read())) {
        in_stream0_V_data_V_0_data_out = in_stream0_V_data_V_0_payload_B.read();
    } else {
        in_stream0_V_data_V_0_data_out = in_stream0_V_data_V_0_payload_A.read();
    }
}

void scurve_adder36::thread_in_stream0_V_data_V_0_load_A() {
    in_stream0_V_data_V_0_load_A = (in_stream0_V_data_V_0_state_cmp_full.read() & ~in_stream0_V_data_V_0_sel_wr.read());
}

void scurve_adder36::thread_in_stream0_V_data_V_0_load_B() {
    in_stream0_V_data_V_0_load_B = (in_stream0_V_data_V_0_sel_wr.read() & in_stream0_V_data_V_0_state_cmp_full.read());
}

void scurve_adder36::thread_in_stream0_V_data_V_0_sel() {
    in_stream0_V_data_V_0_sel = in_stream0_V_data_V_0_sel_rd.read();
}

void scurve_adder36::thread_in_stream0_V_data_V_0_state_cmp_full() {
    in_stream0_V_data_V_0_state_cmp_full =  (sc_logic) ((!in_stream0_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_stream0_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void scurve_adder36::thread_in_stream0_V_data_V_0_vld_in() {
    in_stream0_V_data_V_0_vld_in = in_stream0_TVALID.read();
}

void scurve_adder36::thread_in_stream0_V_data_V_0_vld_out() {
    in_stream0_V_data_V_0_vld_out = in_stream0_V_data_V_0_state.read()[0];
}

void scurve_adder36::thread_in_stream0_V_dest_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        in_stream0_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        in_stream0_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void scurve_adder36::thread_in_stream0_V_dest_V_0_vld_in() {
    in_stream0_V_dest_V_0_vld_in = in_stream0_TVALID.read();
}

void scurve_adder36::thread_indvar_flatten_next_fu_985_p2() {
    indvar_flatten_next_fu_985_p2 = (!indvar_flatten_reg_807.read().is_01() || !ap_const_lv24_1.is_01())? sc_lv<24>(): (sc_biguint<24>(indvar_flatten_reg_807.read()) + sc_biguint<24>(ap_const_lv24_1));
}

void scurve_adder36::thread_out_stream_TDATA() {
    out_stream_TDATA = out_stream_V_data_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905_pp2_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter3.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905_pp2_iter2_reg.read())))) {
        out_stream_TDATA_blk_n = out_stream_V_data_V_1_state.read()[1];
    } else {
        out_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void scurve_adder36::thread_out_stream_TDEST() {
    out_stream_TDEST = out_stream_V_dest_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TID() {
    out_stream_TID = out_stream_V_id_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TKEEP() {
    out_stream_TKEEP = out_stream_V_keep_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TLAST() {
    out_stream_TLAST = out_stream_V_last_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TSTRB() {
    out_stream_TSTRB = out_stream_V_strb_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TUSER() {
    out_stream_TUSER = out_stream_V_user_V_1_data_out.read();
}

void scurve_adder36::thread_out_stream_TVALID() {
    out_stream_TVALID = out_stream_V_dest_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_data_V_1_ack_in() {
    out_stream_V_data_V_1_ack_in = out_stream_V_data_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_data_V_1_ack_out() {
    out_stream_V_data_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_V_1_sel.read())) {
        out_stream_V_data_V_1_data_out = out_stream_V_data_V_1_payload_B.read();
    } else {
        out_stream_V_data_V_1_data_out = out_stream_V_data_V_1_payload_A.read();
    }
}

void scurve_adder36::thread_out_stream_V_data_V_1_load_A() {
    out_stream_V_data_V_1_load_A = (out_stream_V_data_V_1_state_cmp_full.read() & ~out_stream_V_data_V_1_sel_wr.read());
}

void scurve_adder36::thread_out_stream_V_data_V_1_load_B() {
    out_stream_V_data_V_1_load_B = (out_stream_V_data_V_1_sel_wr.read() & out_stream_V_data_V_1_state_cmp_full.read());
}

void scurve_adder36::thread_out_stream_V_data_V_1_sel() {
    out_stream_V_data_V_1_sel = out_stream_V_data_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_data_V_1_state_cmp_full() {
    out_stream_V_data_V_1_state_cmp_full =  (sc_logic) ((!out_stream_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_stream_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void scurve_adder36::thread_out_stream_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_data_V_1_vld_out() {
    out_stream_V_data_V_1_vld_out = out_stream_V_data_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_dest_V_1_ack_in() {
    out_stream_V_dest_V_1_ack_in = out_stream_V_dest_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_dest_V_1_ack_out() {
    out_stream_V_dest_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_dest_V_1_data_out() {
    out_stream_V_dest_V_1_data_out = ap_const_lv6_0;
}

void scurve_adder36::thread_out_stream_V_dest_V_1_sel() {
    out_stream_V_dest_V_1_sel = out_stream_V_dest_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_dest_V_1_vld_out() {
    out_stream_V_dest_V_1_vld_out = out_stream_V_dest_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_id_V_1_ack_in() {
    out_stream_V_id_V_1_ack_in = out_stream_V_id_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_id_V_1_ack_out() {
    out_stream_V_id_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_id_V_1_data_out() {
    out_stream_V_id_V_1_data_out = ap_const_lv5_0;
}

void scurve_adder36::thread_out_stream_V_id_V_1_sel() {
    out_stream_V_id_V_1_sel = out_stream_V_id_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_id_V_1_vld_out() {
    out_stream_V_id_V_1_vld_out = out_stream_V_id_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_keep_V_1_ack_in() {
    out_stream_V_keep_V_1_ack_in = out_stream_V_keep_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_keep_V_1_ack_out() {
    out_stream_V_keep_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_keep_V_1_data_out() {
    out_stream_V_keep_V_1_data_out = ap_const_lv64_FFFFFFFFFFFFFFFF;
}

void scurve_adder36::thread_out_stream_V_keep_V_1_sel() {
    out_stream_V_keep_V_1_sel = out_stream_V_keep_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_keep_V_1_vld_out() {
    out_stream_V_keep_V_1_vld_out = out_stream_V_keep_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_last_V_1_ack_in() {
    out_stream_V_last_V_1_ack_in = out_stream_V_last_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_last_V_1_ack_out() {
    out_stream_V_last_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_sel.read())) {
        out_stream_V_last_V_1_data_out = out_stream_V_last_V_1_payload_B.read();
    } else {
        out_stream_V_last_V_1_data_out = out_stream_V_last_V_1_payload_A.read();
    }
}

void scurve_adder36::thread_out_stream_V_last_V_1_load_A() {
    out_stream_V_last_V_1_load_A = (out_stream_V_last_V_1_state_cmp_full.read() & ~out_stream_V_last_V_1_sel_wr.read());
}

void scurve_adder36::thread_out_stream_V_last_V_1_load_B() {
    out_stream_V_last_V_1_load_B = (out_stream_V_last_V_1_sel_wr.read() & out_stream_V_last_V_1_state_cmp_full.read());
}

void scurve_adder36::thread_out_stream_V_last_V_1_sel() {
    out_stream_V_last_V_1_sel = out_stream_V_last_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_last_V_1_state_cmp_full() {
    out_stream_V_last_V_1_state_cmp_full =  (sc_logic) ((!out_stream_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_stream_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void scurve_adder36::thread_out_stream_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_last_V_1_vld_out() {
    out_stream_V_last_V_1_vld_out = out_stream_V_last_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_strb_V_1_ack_in() {
    out_stream_V_strb_V_1_ack_in = out_stream_V_strb_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_strb_V_1_ack_out() {
    out_stream_V_strb_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_strb_V_1_data_out() {
    out_stream_V_strb_V_1_data_out = ap_const_lv64_FFFFFFFFFFFFFFFF;
}

void scurve_adder36::thread_out_stream_V_strb_V_1_sel() {
    out_stream_V_strb_V_1_sel = out_stream_V_strb_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_strb_V_1_vld_out() {
    out_stream_V_strb_V_1_vld_out = out_stream_V_strb_V_1_state.read()[0];
}

void scurve_adder36::thread_out_stream_V_user_V_1_ack_in() {
    out_stream_V_user_V_1_ack_in = out_stream_V_user_V_1_state.read()[1];
}

void scurve_adder36::thread_out_stream_V_user_V_1_ack_out() {
    out_stream_V_user_V_1_ack_out = out_stream_TREADY.read();
}

void scurve_adder36::thread_out_stream_V_user_V_1_data_out() {
    out_stream_V_user_V_1_data_out = ap_const_lv6_0;
}

void scurve_adder36::thread_out_stream_V_user_V_1_sel() {
    out_stream_V_user_V_1_sel = out_stream_V_user_V_1_sel_rd.read();
}

void scurve_adder36::thread_out_stream_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1905_pp2_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void scurve_adder36::thread_out_stream_V_user_V_1_vld_out() {
    out_stream_V_user_V_1_vld_out = out_stream_V_user_V_1_state.read()[0];
}

void scurve_adder36::thread_p_shl2_fu_970_p1() {
    p_shl2_fu_970_p1 = esl_zext<24,20>(tmp_11_fu_963_p3.read());
}

void scurve_adder36::thread_p_shl_fu_959_p1() {
    p_shl_fu_959_p1 = esl_zext<24,23>(tmp_10_fu_952_p3.read());
}

void scurve_adder36::thread_sum_pix_ch0_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_0_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_0_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_0_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_0_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_0_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_0_address1 = sum_pix_ch0_0_addr_1_reg_1649_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_0_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_0_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_0_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_0_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_0_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_0_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_0_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_0_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_0_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_0_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_0_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_0_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_10_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_10_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_10_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_10_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_10_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_10_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_10_address1 = sum_pix_ch0_10_addr_1_reg_1759_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_10_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_10_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_10_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_10_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_10_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_10_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_10_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_10_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_10_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_10_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_10_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_10_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_10_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_11_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_11_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_11_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_11_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_11_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_11_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_11_address1 = sum_pix_ch0_11_addr_1_reg_1770_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_11_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_11_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_11_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_11_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_11_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_11_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_11_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_11_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_11_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_11_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_11_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_11_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_11_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_12_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_12_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_12_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_12_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_12_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_12_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_12_address1 = sum_pix_ch0_12_addr_1_reg_1781_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_12_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_12_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_12_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_12_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_12_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_12_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_12_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_12_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_12_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_12_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_12_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_12_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_12_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_13_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_13_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_13_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_13_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_13_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_13_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_13_address1 = sum_pix_ch0_13_addr_1_reg_1792_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_13_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_13_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_13_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_13_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_13_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_13_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_13_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_13_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_13_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_13_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_13_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_13_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_13_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_14_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_14_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_14_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_14_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_14_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_14_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_14_address1 = sum_pix_ch0_14_addr_1_reg_1803_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_14_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_14_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_14_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_14_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_14_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_14_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_14_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_14_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_14_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_14_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_14_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_14_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_14_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_15_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_15_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_15_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_15_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_15_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_15_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_15_address1 = sum_pix_ch0_15_addr_1_reg_1814_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_15_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_15_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_15_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_15_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_15_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_15_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_15_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_15_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_15_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_15_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_15_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_15_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_15_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_1_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_1_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_1_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_1_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_1_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_1_address1 = sum_pix_ch0_1_addr_1_reg_1660_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_1_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_1_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_1_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_1_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_1_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_1_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_1_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_1_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_1_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_1_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_1_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_1_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_2_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_2_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_2_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_2_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_2_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_2_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_2_address1 = sum_pix_ch0_2_addr_1_reg_1671_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_2_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_2_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_2_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_2_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_2_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_2_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_2_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_2_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_2_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_2_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_2_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_2_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_3_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_3_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_3_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_3_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_3_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_3_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_3_address1 = sum_pix_ch0_3_addr_1_reg_1682_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_3_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_3_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_3_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_3_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_3_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_3_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_3_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_3_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_3_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_3_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_3_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_3_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_4_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_4_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_4_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_4_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_4_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_4_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_4_address1 = sum_pix_ch0_4_addr_1_reg_1693_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_4_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_4_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_4_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_4_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_4_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_4_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_4_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_4_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_4_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_4_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_4_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_4_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_5_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_5_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_5_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_5_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_5_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_5_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_5_address1 = sum_pix_ch0_5_addr_1_reg_1704_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_5_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_5_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_5_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_5_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_5_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_5_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_5_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_5_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_5_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_5_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_5_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_5_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_6_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_6_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_6_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_6_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_6_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_6_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_6_address1 = sum_pix_ch0_6_addr_1_reg_1715_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_6_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_6_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_6_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_6_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_6_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_6_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_6_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_6_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_6_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_6_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_6_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_6_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_7_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_7_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_7_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_7_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_7_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_7_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_7_address1 = sum_pix_ch0_7_addr_1_reg_1726_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_7_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_7_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_7_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_7_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_7_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_7_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_7_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_7_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_7_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_7_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_7_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_7_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_8_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_8_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_8_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_8_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_8_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_8_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_8_address1 = sum_pix_ch0_8_addr_1_reg_1737_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_8_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_8_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_8_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_8_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_8_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_8_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_8_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_8_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_8_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_8_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_8_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_8_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_8_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_9_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        sum_pix_ch0_9_address0 =  (sc_lv<8>) (tmp_8_fu_1011_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sum_pix_ch0_9_address0 =  (sc_lv<8>) (tmp_1_fu_932_p1.read());
    } else {
        sum_pix_ch0_9_address0 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_9_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        sum_pix_ch0_9_address1 =  (sc_lv<8>) (tmp_s_fu_1355_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1))) {
        sum_pix_ch0_9_address1 = sum_pix_ch0_9_addr_1_reg_1748_pp1_iter3_reg.read();
    } else {
        sum_pix_ch0_9_address1 = "XXXXXXXX";
    }
}

void scurve_adder36::thread_sum_pix_ch0_9_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        sum_pix_ch0_9_ce0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_9_ce0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_9_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1)))) {
        sum_pix_ch0_9_ce1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_9_ce1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_9_we0() {
    if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        sum_pix_ch0_9_we0 = ap_const_logic_1;
    } else {
        sum_pix_ch0_9_we0 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_ch0_9_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_1625_pp1_iter3_reg.read()))) {
        sum_pix_ch0_9_we1 = ap_const_logic_1;
    } else {
        sum_pix_ch0_9_we1 = ap_const_logic_0;
    }
}

void scurve_adder36::thread_sum_pix_tot_data_V_1_fu_1589_p1() {
    sum_pix_tot_data_V_1_fu_1589_p1 = esl_zext<512,492>(tmp_fu_1553_p17.read());
}

void scurve_adder36::thread_sum_pix_tot_data_V_s_fu_1383_p17() {
    sum_pix_tot_data_V_s_fu_1383_p17 = esl_concat<480,32>(esl_concat<448,32>(esl_concat<416,32>(esl_concat<384,32>(esl_concat<352,32>(esl_concat<320,32>(esl_concat<288,32>(esl_concat<256,32>(esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(reg_915.read(), reg_910.read()), reg_905.read()), reg_900.read()), reg_895.read()), reg_890.read()), reg_885.read()), reg_880.read()), reg_875.read()), reg_870.read()), reg_865.read()), reg_860.read()), reg_855.read()), reg_850.read()), reg_845.read()), reg_840.read());
}

void scurve_adder36::thread_tmp_10_fu_952_p3() {
    tmp_10_fu_952_p3 = esl_concat<16,7>(N_ADDS_read_reg_1606.read(), ap_const_lv7_0);
}

void scurve_adder36::thread_tmp_11_fu_963_p3() {
    tmp_11_fu_963_p3 = esl_concat<16,4>(N_ADDS_read_reg_1606.read(), ap_const_lv4_0);
}

void scurve_adder36::thread_tmp_12_fu_1034_p1() {
    tmp_12_fu_1034_p1 = in_stream0_V_data_V_0_data_out.read().range(8-1, 0);
}

void scurve_adder36::thread_tmp_1_fu_932_p1() {
    tmp_1_fu_932_p1 = esl_zext<64,8>(i_reg_796.read());
}

void scurve_adder36::thread_tmp_28_10_fu_1287_p1() {
    tmp_28_10_fu_1287_p1 = esl_zext<32,8>(phitmp_10_reg_1765_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_11_fu_1296_p1() {
    tmp_28_11_fu_1296_p1 = esl_zext<32,8>(phitmp_11_reg_1776_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_12_fu_1305_p1() {
    tmp_28_12_fu_1305_p1 = esl_zext<32,8>(phitmp_12_reg_1787_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_13_fu_1314_p1() {
    tmp_28_13_fu_1314_p1 = esl_zext<32,8>(phitmp_13_reg_1798_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_14_fu_1323_p1() {
    tmp_28_14_fu_1323_p1 = esl_zext<32,8>(phitmp_14_reg_1809_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_1_fu_1197_p1() {
    tmp_28_1_fu_1197_p1 = esl_zext<32,8>(phitmp_1_reg_1655_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_2_fu_1206_p1() {
    tmp_28_2_fu_1206_p1 = esl_zext<32,8>(phitmp_2_reg_1666_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_3_fu_1215_p1() {
    tmp_28_3_fu_1215_p1 = esl_zext<32,8>(phitmp_3_reg_1677_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_4_fu_1224_p1() {
    tmp_28_4_fu_1224_p1 = esl_zext<32,8>(phitmp_4_reg_1688_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_5_fu_1233_p1() {
    tmp_28_5_fu_1233_p1 = esl_zext<32,8>(phitmp_5_reg_1699_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_6_fu_1242_p1() {
    tmp_28_6_fu_1242_p1 = esl_zext<32,8>(phitmp_6_reg_1710_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_7_fu_1251_p1() {
    tmp_28_7_fu_1251_p1 = esl_zext<32,8>(phitmp_7_reg_1721_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_8_fu_1260_p1() {
    tmp_28_8_fu_1260_p1 = esl_zext<32,8>(phitmp_8_reg_1732_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_9_fu_1269_p1() {
    tmp_28_9_fu_1269_p1 = esl_zext<32,8>(phitmp_9_reg_1743_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_28_s_fu_1278_p1() {
    tmp_28_s_fu_1278_p1 = esl_zext<32,8>(phitmp_s_reg_1754_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_29_10_fu_1290_p2() {
    tmp_29_10_fu_1290_p2 = (!reg_895.read().is_01() || !tmp_28_10_fu_1287_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_895.read()) + sc_biguint<32>(tmp_28_10_fu_1287_p1.read()));
}

void scurve_adder36::thread_tmp_29_11_fu_1299_p2() {
    tmp_29_11_fu_1299_p2 = (!reg_900.read().is_01() || !tmp_28_11_fu_1296_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_900.read()) + sc_biguint<32>(tmp_28_11_fu_1296_p1.read()));
}

void scurve_adder36::thread_tmp_29_12_fu_1308_p2() {
    tmp_29_12_fu_1308_p2 = (!reg_905.read().is_01() || !tmp_28_12_fu_1305_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_905.read()) + sc_biguint<32>(tmp_28_12_fu_1305_p1.read()));
}

void scurve_adder36::thread_tmp_29_13_fu_1317_p2() {
    tmp_29_13_fu_1317_p2 = (!reg_910.read().is_01() || !tmp_28_13_fu_1314_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_910.read()) + sc_biguint<32>(tmp_28_13_fu_1314_p1.read()));
}

void scurve_adder36::thread_tmp_29_14_fu_1326_p2() {
    tmp_29_14_fu_1326_p2 = (!reg_915.read().is_01() || !tmp_28_14_fu_1323_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_915.read()) + sc_biguint<32>(tmp_28_14_fu_1323_p1.read()));
}

void scurve_adder36::thread_tmp_29_1_fu_1200_p2() {
    tmp_29_1_fu_1200_p2 = (!reg_845.read().is_01() || !tmp_28_1_fu_1197_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_845.read()) + sc_biguint<32>(tmp_28_1_fu_1197_p1.read()));
}

void scurve_adder36::thread_tmp_29_2_fu_1209_p2() {
    tmp_29_2_fu_1209_p2 = (!reg_850.read().is_01() || !tmp_28_2_fu_1206_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_850.read()) + sc_biguint<32>(tmp_28_2_fu_1206_p1.read()));
}

void scurve_adder36::thread_tmp_29_3_fu_1218_p2() {
    tmp_29_3_fu_1218_p2 = (!reg_855.read().is_01() || !tmp_28_3_fu_1215_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_855.read()) + sc_biguint<32>(tmp_28_3_fu_1215_p1.read()));
}

void scurve_adder36::thread_tmp_29_4_fu_1227_p2() {
    tmp_29_4_fu_1227_p2 = (!reg_860.read().is_01() || !tmp_28_4_fu_1224_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_860.read()) + sc_biguint<32>(tmp_28_4_fu_1224_p1.read()));
}

void scurve_adder36::thread_tmp_29_5_fu_1236_p2() {
    tmp_29_5_fu_1236_p2 = (!reg_865.read().is_01() || !tmp_28_5_fu_1233_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_865.read()) + sc_biguint<32>(tmp_28_5_fu_1233_p1.read()));
}

void scurve_adder36::thread_tmp_29_6_fu_1245_p2() {
    tmp_29_6_fu_1245_p2 = (!reg_870.read().is_01() || !tmp_28_6_fu_1242_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_870.read()) + sc_biguint<32>(tmp_28_6_fu_1242_p1.read()));
}

void scurve_adder36::thread_tmp_29_7_fu_1254_p2() {
    tmp_29_7_fu_1254_p2 = (!reg_875.read().is_01() || !tmp_28_7_fu_1251_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_875.read()) + sc_biguint<32>(tmp_28_7_fu_1251_p1.read()));
}

void scurve_adder36::thread_tmp_29_8_fu_1263_p2() {
    tmp_29_8_fu_1263_p2 = (!reg_880.read().is_01() || !tmp_28_8_fu_1260_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_880.read()) + sc_biguint<32>(tmp_28_8_fu_1260_p1.read()));
}

void scurve_adder36::thread_tmp_29_9_fu_1272_p2() {
    tmp_29_9_fu_1272_p2 = (!reg_885.read().is_01() || !tmp_28_9_fu_1269_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_885.read()) + sc_biguint<32>(tmp_28_9_fu_1269_p1.read()));
}

void scurve_adder36::thread_tmp_29_s_fu_1281_p2() {
    tmp_29_s_fu_1281_p2 = (!reg_890.read().is_01() || !tmp_28_s_fu_1278_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_890.read()) + sc_biguint<32>(tmp_28_s_fu_1278_p1.read()));
}

void scurve_adder36::thread_tmp_2_fu_1332_p2() {
    tmp_2_fu_1332_p2 = (!TEST_MODE_read_reg_1601.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(TEST_MODE_read_reg_1601.read() == ap_const_lv32_0);
}

void scurve_adder36::thread_tmp_3_cast_fu_1419_p1() {
    tmp_3_cast_fu_1419_p1 = esl_zext<32,12>(tmp_3_reg_1999_pp2_iter1_reg.read());
}

void scurve_adder36::thread_tmp_3_fu_1375_p3() {
    tmp_3_fu_1375_p3 = esl_concat<8,4>(i_2_reg_829.read(), ap_const_lv4_0);
}

void scurve_adder36::thread_tmp_6_fu_1188_p1() {
    tmp_6_fu_1188_p1 = esl_zext<32,8>(tmp_12_reg_1644_pp1_iter2_reg.read());
}

void scurve_adder36::thread_tmp_8_fu_1011_p1() {
    tmp_8_fu_1011_p1 = esl_zext<64,8>(i_1_mid2_reg_1634.read());
}

void scurve_adder36::thread_tmp_9_fu_1191_p2() {
    tmp_9_fu_1191_p2 = (!reg_840.read().is_01() || !tmp_6_fu_1188_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_840.read()) + sc_biguint<32>(tmp_6_fu_1188_p1.read()));
}

void scurve_adder36::thread_tmp_data_V_1_fu_1593_p3() {
    tmp_data_V_1_fu_1593_p3 = (!tmp_2_reg_1900.read()[0].is_01())? sc_lv<512>(): ((tmp_2_reg_1900.read()[0].to_bool())? sum_pix_tot_data_V_s_fu_1383_p17.read(): sum_pix_tot_data_V_1_fu_1589_p1.read());
}

void scurve_adder36::thread_tmp_fu_1553_p17() {
    tmp_fu_1553_p17 = esl_concat<460,32>(esl_concat<428,32>(esl_concat<396,32>(esl_concat<364,32>(esl_concat<332,32>(esl_concat<300,32>(esl_concat<268,32>(esl_concat<236,32>(esl_concat<204,32>(esl_concat<172,32>(esl_concat<140,32>(esl_concat<108,32>(esl_concat<76,32>(esl_concat<44,32>(esl_concat<12,32>(val_assign_1_14_fu_1548_p2.read(), val_assign_1_13_cast_fu_1544_p1.read()), val_assign_1_12_cast_fu_1535_p1.read()), val_assign_1_11_cast_fu_1526_p1.read()), val_assign_1_10_cast_fu_1517_p1.read()), val_assign_1_9_cast_fu_1508_p1.read()), val_assign_1_8_cast_fu_1499_p1.read()), val_assign_1_7_cast_fu_1490_p1.read()), val_assign_1_6_cast_fu_1481_p1.read()), val_assign_1_5_cast_fu_1472_p1.read()), val_assign_1_4_cast_fu_1463_p1.read()), val_assign_1_3_cast_fu_1454_p1.read()), val_assign_1_2_cast_fu_1445_p1.read()), val_assign_1_1_cast_fu_1436_p1.read()), val_assign_1_cast_fu_1427_p1.read()), tmp_3_cast_fu_1419_p1.read());
}

void scurve_adder36::thread_tmp_last_V_fu_1349_p2() {
    tmp_last_V_fu_1349_p2 = (!i_2_reg_829.read().is_01() || !ap_const_lv8_8F.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_829.read() == ap_const_lv8_8F);
}

void scurve_adder36::thread_tmp_s_fu_1355_p1() {
    tmp_s_fu_1355_p1 = esl_zext<64,8>(i_2_reg_829.read());
}

void scurve_adder36::thread_val_assign_1_10_cast_fu_1517_p1() {
    val_assign_1_10_cast_fu_1517_p1 = esl_zext<32,12>(val_assign_1_10_fu_1512_p2.read());
}

void scurve_adder36::thread_val_assign_1_10_fu_1512_p2() {
    val_assign_1_10_fu_1512_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_B);
}

void scurve_adder36::thread_val_assign_1_11_cast_fu_1526_p1() {
    val_assign_1_11_cast_fu_1526_p1 = esl_zext<32,12>(val_assign_1_11_fu_1521_p2.read());
}

void scurve_adder36::thread_val_assign_1_11_fu_1521_p2() {
    val_assign_1_11_fu_1521_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_C);
}

void scurve_adder36::thread_val_assign_1_12_cast_fu_1535_p1() {
    val_assign_1_12_cast_fu_1535_p1 = esl_zext<32,12>(val_assign_1_12_fu_1530_p2.read());
}

void scurve_adder36::thread_val_assign_1_12_fu_1530_p2() {
    val_assign_1_12_fu_1530_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_D);
}

void scurve_adder36::thread_val_assign_1_13_cast_fu_1544_p1() {
    val_assign_1_13_cast_fu_1544_p1 = esl_zext<32,12>(val_assign_1_13_fu_1539_p2.read());
}

void scurve_adder36::thread_val_assign_1_13_fu_1539_p2() {
    val_assign_1_13_fu_1539_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_E);
}

void scurve_adder36::thread_val_assign_1_14_fu_1548_p2() {
    val_assign_1_14_fu_1548_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_F);
}

void scurve_adder36::thread_val_assign_1_1_cast_fu_1436_p1() {
    val_assign_1_1_cast_fu_1436_p1 = esl_zext<32,12>(val_assign_1_1_fu_1431_p2.read());
}

void scurve_adder36::thread_val_assign_1_1_fu_1431_p2() {
    val_assign_1_1_fu_1431_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_2);
}

void scurve_adder36::thread_val_assign_1_2_cast_fu_1445_p1() {
    val_assign_1_2_cast_fu_1445_p1 = esl_zext<32,12>(val_assign_1_2_fu_1440_p2.read());
}

void scurve_adder36::thread_val_assign_1_2_fu_1440_p2() {
    val_assign_1_2_fu_1440_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_3);
}

void scurve_adder36::thread_val_assign_1_3_cast_fu_1454_p1() {
    val_assign_1_3_cast_fu_1454_p1 = esl_zext<32,12>(val_assign_1_3_fu_1449_p2.read());
}

void scurve_adder36::thread_val_assign_1_3_fu_1449_p2() {
    val_assign_1_3_fu_1449_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_4);
}

void scurve_adder36::thread_val_assign_1_4_cast_fu_1463_p1() {
    val_assign_1_4_cast_fu_1463_p1 = esl_zext<32,12>(val_assign_1_4_fu_1458_p2.read());
}

void scurve_adder36::thread_val_assign_1_4_fu_1458_p2() {
    val_assign_1_4_fu_1458_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_5);
}

void scurve_adder36::thread_val_assign_1_5_cast_fu_1472_p1() {
    val_assign_1_5_cast_fu_1472_p1 = esl_zext<32,12>(val_assign_1_5_fu_1467_p2.read());
}

void scurve_adder36::thread_val_assign_1_5_fu_1467_p2() {
    val_assign_1_5_fu_1467_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_6);
}

void scurve_adder36::thread_val_assign_1_6_cast_fu_1481_p1() {
    val_assign_1_6_cast_fu_1481_p1 = esl_zext<32,12>(val_assign_1_6_fu_1476_p2.read());
}

void scurve_adder36::thread_val_assign_1_6_fu_1476_p2() {
    val_assign_1_6_fu_1476_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_7);
}

void scurve_adder36::thread_val_assign_1_7_cast_fu_1490_p1() {
    val_assign_1_7_cast_fu_1490_p1 = esl_zext<32,12>(val_assign_1_7_fu_1485_p2.read());
}

void scurve_adder36::thread_val_assign_1_7_fu_1485_p2() {
    val_assign_1_7_fu_1485_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_8);
}

void scurve_adder36::thread_val_assign_1_8_cast_fu_1499_p1() {
    val_assign_1_8_cast_fu_1499_p1 = esl_zext<32,12>(val_assign_1_8_fu_1494_p2.read());
}

void scurve_adder36::thread_val_assign_1_8_fu_1494_p2() {
    val_assign_1_8_fu_1494_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_9);
}

void scurve_adder36::thread_val_assign_1_9_cast_fu_1508_p1() {
    val_assign_1_9_cast_fu_1508_p1 = esl_zext<32,12>(val_assign_1_9_fu_1503_p2.read());
}

void scurve_adder36::thread_val_assign_1_9_fu_1503_p2() {
    val_assign_1_9_fu_1503_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_A);
}

void scurve_adder36::thread_val_assign_1_cast_fu_1427_p1() {
    val_assign_1_cast_fu_1427_p1 = esl_zext<32,12>(val_assign_1_s_fu_1422_p2.read());
}

void scurve_adder36::thread_val_assign_1_s_fu_1422_p2() {
    val_assign_1_s_fu_1422_p2 = (tmp_3_reg_1999_pp2_iter1_reg.read() | ap_const_lv12_1);
}

void scurve_adder36::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_920_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_980_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) && !(esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter3.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter3.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_980_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 32 : 
            if ((!(esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond4_fu_1337_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) && !(esl_seteq<1,1,1>(ap_enable_reg_pp2_iter2.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter3.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if (((esl_seteq<1,1,1>(ap_enable_reg_pp2_iter2.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter3.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(exitcond4_fu_1337_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 64 : 
            if ((!(esl_seteq<1,1,1>(out_stream_V_dest_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_id_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_last_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_user_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_strb_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_keep_V_1_ack_in.read(), ap_const_logic_0) || esl_seteq<1,1,1>(out_stream_V_data_V_1_ack_in.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

void scurve_adder36::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TDATA\" :  \"" << in_stream0_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TVALID\" :  \"" << in_stream0_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_stream0_TREADY\" :  \"" << in_stream0_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TKEEP\" :  \"" << in_stream0_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TSTRB\" :  \"" << in_stream0_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TUSER\" :  \"" << in_stream0_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TLAST\" :  \"" << in_stream0_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TID\" :  \"" << in_stream0_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream0_TDEST\" :  \"" << in_stream0_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TDATA\" :  \"" << out_stream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TVALID\" :  \"" << out_stream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_stream_TREADY\" :  \"" << out_stream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TKEEP\" :  \"" << out_stream_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TSTRB\" :  \"" << out_stream_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TUSER\" :  \"" << out_stream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TLAST\" :  \"" << out_stream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TID\" :  \"" << out_stream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TDEST\" :  \"" << out_stream_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWVALID\" :  \"" << s_axi_CTRL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_AWREADY\" :  \"" << s_axi_CTRL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWADDR\" :  \"" << s_axi_CTRL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WVALID\" :  \"" << s_axi_CTRL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_WREADY\" :  \"" << s_axi_CTRL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WDATA\" :  \"" << s_axi_CTRL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WSTRB\" :  \"" << s_axi_CTRL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARVALID\" :  \"" << s_axi_CTRL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_ARREADY\" :  \"" << s_axi_CTRL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARADDR\" :  \"" << s_axi_CTRL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RVALID\" :  \"" << s_axi_CTRL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_RREADY\" :  \"" << s_axi_CTRL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RDATA\" :  \"" << s_axi_CTRL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RRESP\" :  \"" << s_axi_CTRL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BVALID\" :  \"" << s_axi_CTRL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_BREADY\" :  \"" << s_axi_CTRL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BRESP\" :  \"" << s_axi_CTRL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

